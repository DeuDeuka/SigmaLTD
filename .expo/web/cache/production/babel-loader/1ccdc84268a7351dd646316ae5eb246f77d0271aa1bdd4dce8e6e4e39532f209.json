{"ast":null,"code":"import React,{useEffect,useState,useRef}from'react';import View from\"react-native-web/dist/exports/View\";import TextInput from\"react-native-web/dist/exports/TextInput\";import FlatList from\"react-native-web/dist/exports/FlatList\";import Button from\"react-native-web/dist/exports/Button\";import Text from\"react-native-web/dist/exports/Text\";import Image from\"react-native-web/dist/exports/Image\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import KeyboardAvoidingView from\"react-native-web/dist/exports/KeyboardAvoidingView\";import Switch from\"react-native-web/dist/exports/Switch\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import*as ImagePicker from'expo-image-picker';import{useSelector}from'react-redux';import Database,{BASE_URL}from'../database';import{Menu}from'../MainNavigator';import Comment from'../components/Comment';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function PostDetailScreen({route}){const{current,colors}=useSelector(state=>state.theme)||{current:'light',colors:{light:{text:'#000',background:'#FFF'}}};const theme=colors[current]||{text:'#000',background:'#FFF'};const[post,setPost]=useState(null);const[comments,setComments]=useState([]);const[loading,setLoading]=useState(true);const[newComment,setNewComment]=useState('');const[isAnonymous,setIsAnonymous]=useState(false);const[selectedImages,setSelectedImages]=useState([]);const[currentUser,setCurrentUser]=useState(null);const flatListRef=useRef(null);useEffect(()=>{const fetchData=async()=>{try{const postData=await Database.getPost(route.params.postId);const loadedComments=await Database.getPostComments(route.params.postId);const currentUse=await Database.getCurrentUser();setPost(postData);setComments(loadedComments);setCurrentUser(currentUse);}catch(err){console.error('❌ Ошибка загрузки:',err);}finally{setLoading(false);}};fetchData();},[route.params.postId]);useEffect(()=>{if(comments.length>0){flatListRef.current?.scrollToEnd({animated:true});}},[comments.length]);useEffect(()=>{const interval=setInterval(async()=>{const loadedComments=await Database.getPostComments(route.params.postId);setComments(loadedComments);},1000);return()=>clearInterval(interval);},[route.params.postId]);const pickImage=async()=>{const result=await ImagePicker.launchImageLibraryAsync({mediaTypes:ImagePicker.MediaTypeOptions.Images,quality:0.7,base64:true});if(!result.canceled){const asset=result.assets?.[0];if(!asset||!asset.base64)return;const fullDataUri=`data:image/jpeg;base64,${asset.base64}`;setSelectedImages([{uri:fullDataUri}]);}};const sendComment=async()=>{const content=newComment.trim();if(!content&&selectedImages.length===0)return;try{const imageBase64=selectedImages[0]?.uri||null;const newC=await Database.addCommentBase64({postId:post.idPost||post.id,content,isAnonymous:isAnonymous,imageBase64});setComments(prev=>[...prev,newC]);setNewComment('');setSelectedImages([]);}catch(err){console.error('❌ Ошибка отправки комментария:',err);}};const toggleLike=async item=>{try{const updatedComments=[...comments];const index=updatedComments.findIndex(c=>c.idComment===item.idComment);if(index===-1)return;const current=updatedComments[index];if(current.likedByMe){await Database.unlikeComment(current.idComment);current.likes=Number(current.likes)-1;current.likedByMe=false;}else{await Database.likeComment(current.idComment);current.likes=Number(current.likes)+1;current.likedByMe=true;}setComments(updatedComments);}catch(err){console.error('❌ Ошибка лайка:',err);}};if(loading){return _jsx(View,{style:[styles.container,styles.centered],children:_jsx(ActivityIndicator,{size:\"large\",color:theme.text})});}const Wrapper=false?KeyboardAvoidingView:View;return _jsxs(Wrapper,{style:styles.container,behavior:false?'padding':undefined,keyboardVerticalOffset:false?100:0,children:[_jsx(Menu,{navigation:route.params.navigation,header:true}),_jsx(FlatList,{ref:flatListRef,data:comments,keyExtractor:(item,index)=>`${item.idComment||index}`,renderItem:({item})=>_jsx(Comment,{comment:item,currentUser:currentUser,toggleLike:toggleLike}),style:styles.mediaScroll,contentContainerStyle:{paddingBottom:20,maxHeight:Dimensions.get('window').height*0.9},ListEmptyComponent:_jsx(Text,{style:styles.emptyText,children:\"No comments yet.\"})}),selectedImages.length>0&&_jsx(View,{style:{flexDirection:'row',flexWrap:'wrap',padding:8},children:selectedImages.map((img,i)=>_jsx(Image,{source:{uri:img.uri},style:{width:80,height:80,margin:4,borderRadius:8}},i))}),_jsxs(View,{style:styles.inputContainer,children:[_jsx(TextInput,{value:newComment,onChangeText:setNewComment,style:styles.textInput,placeholder:\"\\u0412\\u0430\\u0448 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439...\",placeholderTextColor:\"#888\"}),_jsx(Text,{children:\"\\u0410\\u043D\\u043E\\u043D\\u0438\\u043C\\u043D\\u043E?\"}),_jsx(Switch,{value:isAnonymous,onValueChange:setIsAnonymous,style:{marginHorizontal:10}}),_jsx(Button,{title:\"\\u041C\\u0435\\u0434\\u0438\\u0430\",onPress:pickImage}),_jsx(Button,{title:\"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\",onPress:sendComment})]})]});}const styles=StyleSheet.create({container:{flex:1,backgroundColor:'#fff',maxWidth:Dimensions.get('screen').width,maxHeight:Dimensions.get('screen').height},centered:{justifyContent:'center',alignItems:'center'},mediaScroll:{flex:1},inputContainer:{flexDirection:'row',padding:10,marginBottom:20,borderTopWidth:1,borderColor:'#ccc',backgroundColor:'#f9f9f9',alignItems:'center'},textInput:{flex:1,borderColor:'#ccc',borderWidth:1,borderRadius:10,paddingHorizontal:12,paddingVertical:8,marginRight:10,fontSize:15,backgroundColor:'#fff',color:'#000'},emptyText:{textAlign:'center',padding:20,color:'#888'}});","map":{"version":3,"names":["React","useEffect","useState","useRef","View","TextInput","FlatList","Button","Text","Image","ActivityIndicator","Platform","StyleSheet","KeyboardAvoidingView","Switch","Dimensions","ImagePicker","useSelector","Database","BASE_URL","Menu","Comment","jsx","_jsx","jsxs","_jsxs","PostDetailScreen","route","current","colors","state","theme","light","text","background","post","setPost","comments","setComments","loading","setLoading","newComment","setNewComment","isAnonymous","setIsAnonymous","selectedImages","setSelectedImages","currentUser","setCurrentUser","flatListRef","fetchData","postData","getPost","params","postId","loadedComments","getPostComments","currentUse","getCurrentUser","err","console","error","length","scrollToEnd","animated","interval","setInterval","clearInterval","pickImage","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","quality","base64","canceled","asset","assets","fullDataUri","uri","sendComment","content","trim","imageBase64","newC","addCommentBase64","idPost","id","prev","toggleLike","item","updatedComments","index","findIndex","c","idComment","likedByMe","unlikeComment","likes","Number","likeComment","style","styles","container","centered","children","size","color","Wrapper","behavior","undefined","keyboardVerticalOffset","navigation","header","ref","data","keyExtractor","renderItem","comment","mediaScroll","contentContainerStyle","paddingBottom","maxHeight","get","height","ListEmptyComponent","emptyText","flexDirection","flexWrap","padding","map","img","i","source","width","margin","borderRadius","inputContainer","value","onChangeText","textInput","placeholder","placeholderTextColor","onValueChange","marginHorizontal","title","onPress","create","flex","backgroundColor","maxWidth","justifyContent","alignItems","marginBottom","borderTopWidth","borderColor","borderWidth","paddingHorizontal","paddingVertical","marginRight","fontSize","textAlign"],"sources":["/Users/deu/SigmaLTD/screens/CommentScreen.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport {\n    View,\n    TextInput,\n    FlatList,\n    Button,\n    Text,\n    Image,\n    ActivityIndicator,\n    Platform,\n    StyleSheet,\n    KeyboardAvoidingView,\n    Switch, Dimensions,\n} from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport { useSelector } from 'react-redux';\nimport Database, { BASE_URL } from '../database';\nimport { Menu } from '../MainNavigator';\nimport Comment from '../components/Comment';\n\nexport default function PostDetailScreen({ route }) {\n    const { current, colors } = useSelector((state) => state.theme) || {\n        current: 'light',\n        colors: { light: { text: '#000', background: '#FFF' } },\n    };\n    const theme = colors[current] || { text: '#000', background: '#FFF' };\n\n    const [post, setPost] = useState(null);\n    const [comments, setComments] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [newComment, setNewComment] = useState('');\n    const [isAnonymous, setIsAnonymous] = useState(false);\n    const [selectedImages, setSelectedImages] = useState([]);\n    const [currentUser, setCurrentUser] = useState(null);\n    const flatListRef = useRef(null);\n\n    // Fetch initial data\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const postData = await Database.getPost(route.params.postId);\n                const loadedComments = await Database.getPostComments(route.params.postId);\n                const currentUse = await Database.getCurrentUser();\n                setPost(postData);\n                setComments(loadedComments);\n                setCurrentUser(currentUse);\n            } catch (err) {\n                console.error('❌ Ошибка загрузки:', err);\n            } finally {\n                setLoading(false);\n            }\n        };\n        fetchData();\n    }, [route.params.postId]);\n\n    // Scroll to end when comments update\n    useEffect(() => {\n        if (comments.length > 0) {\n            flatListRef.current?.scrollToEnd({ animated: true });\n        }\n    }, [comments.length]);\n\n    // Poll for new comments\n    useEffect(() => {\n        const interval = setInterval(async () => {\n            const loadedComments = await Database.getPostComments(route.params.postId);\n            setComments(loadedComments);\n        }, 1000);\n        return () => clearInterval(interval);\n    }, [route.params.postId]);\n\n    const pickImage = async () => {\n        const result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            quality: 0.7,\n            base64: true,\n        });\n\n        if (!result.canceled) {\n            const asset = result.assets?.[0];\n            if (!asset || !asset.base64) return;\n\n            const fullDataUri = `data:image/jpeg;base64,${asset.base64}`;\n            setSelectedImages([{ uri: fullDataUri }]);\n        }\n    };\n\n    const sendComment = async () => {\n        const content = newComment.trim();\n        if (!content && selectedImages.length === 0) return;\n\n        try {\n            const imageBase64 = selectedImages[0]?.uri || null;\n\n            const newC = await Database.addCommentBase64({\n                postId: post.idPost || post.id,\n                content,\n                isAnonymous: isAnonymous,\n                imageBase64,\n            });\n\n            setComments((prev) => [...prev, newC]);\n            setNewComment('');\n            setSelectedImages([]);\n        } catch (err) {\n            console.error('❌ Ошибка отправки комментария:', err);\n        }\n    };\n\n    const toggleLike = async (item) => {\n        try {\n            const updatedComments = [...comments];\n            const index = updatedComments.findIndex((c) => c.idComment === item.idComment);\n            if (index === -1) return;\n\n            const current = updatedComments[index];\n            if (current.likedByMe) {\n                await Database.unlikeComment(current.idComment);\n                current.likes = Number(current.likes) - 1;\n                current.likedByMe = false;\n            } else {\n                await Database.likeComment(current.idComment);\n                current.likes = Number(current.likes) + 1;\n                current.likedByMe = true;\n            }\n\n            setComments(updatedComments);\n        } catch (err) {\n            console.error('❌ Ошибка лайка:', err);\n        }\n    };\n\n    if (loading) {\n        return (\n            <View style={[styles.container, styles.centered]}>\n                <ActivityIndicator size=\"large\" color={theme.text} />\n            </View>\n        );\n    }\n\n    const Wrapper = Platform.OS === 'ios' ? KeyboardAvoidingView : View;\n\n    return (\n        <Wrapper\n            style={styles.container}\n            behavior={Platform.OS === 'ios' ? 'padding' : undefined}\n            keyboardVerticalOffset={Platform.OS === 'ios' ? 100 : 0}\n        >\n            <Menu navigation={route.params.navigation} header={true} />\n            <FlatList\n                ref={flatListRef}\n                data={comments}\n                keyExtractor={(item, index) => `${item.idComment || index}`}\n                renderItem={({ item }) => (\n                    <Comment comment={item} currentUser={currentUser} toggleLike={toggleLike} />\n                )}\n                style={styles.mediaScroll}\n                contentContainerStyle={{ paddingBottom: 20, maxHeight: Dimensions.get('window').height * 0.9 }}\n                ListEmptyComponent={<Text style={styles.emptyText}>No comments yet.</Text>}\n            />\n            {selectedImages.length > 0 && (\n                <View style={{ flexDirection: 'row', flexWrap: 'wrap', padding: 8 }}>\n                    {selectedImages.map((img, i) => (\n                        <Image\n                            key={i}\n                            source={{ uri: img.uri }}\n                            style={{ width: 80, height: 80, margin: 4, borderRadius: 8 }}\n                        />\n                    ))}\n                </View>\n            )}\n            <View style={styles.inputContainer}>\n                <TextInput\n                    value={newComment}\n                    onChangeText={setNewComment}\n                    style={styles.textInput}\n                    placeholder=\"Ваш комментарий...\"\n                    placeholderTextColor=\"#888\"\n                />\n                <Text>Анонимно?</Text>\n                <Switch\n                    value={isAnonymous}\n                    onValueChange={setIsAnonymous}\n                    style={{ marginHorizontal: 10 }}\n                />\n                <Button title=\"Медиа\" onPress={pickImage} />\n                <Button title=\"Отправить\" onPress={sendComment} />\n            </View>\n        </Wrapper>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        maxWidth: Dimensions.get('screen').width,\n        maxHeight: Dimensions.get('screen').height,\n    },\n    centered: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    mediaScroll: {\n        flex: 1,\n    },\n    inputContainer: {\n        flexDirection: 'row',\n        padding: 10,\n        marginBottom: 20,\n        borderTopWidth: 1,\n        borderColor: '#ccc',\n        backgroundColor: '#f9f9f9',\n        alignItems: 'center',\n    },\n    textInput: {\n        flex: 1,\n        borderColor: '#ccc',\n        borderWidth: 1,\n        borderRadius: 10,\n        paddingHorizontal: 12,\n        paddingVertical: 8,\n        marginRight: 10,\n        fontSize: 15,\n        backgroundColor: '#fff',\n        color: '#000',\n    },\n    emptyText: {\n        textAlign: 'center',\n        padding: 20,\n        color: '#888',\n    },\n});"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}