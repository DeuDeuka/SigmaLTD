{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.PosterResizeModeType=exports.MixWithOthersType=exports.IgnoreSilentSwitchType=exports.FullscreenOrientationType=exports.TextTrackType=exports.SelectedVideoTrackType=exports.SelectedTrackType=exports.BufferingStrategyType=exports.CmcdMode=exports.DRMType=void 0;var DRMType;(function(DRMType){DRMType[\"WIDEVINE\"]=\"widevine\";DRMType[\"PLAYREADY\"]=\"playready\";DRMType[\"CLEARKEY\"]=\"clearkey\";DRMType[\"FAIRPLAY\"]=\"fairplay\";})(DRMType||(exports.DRMType=DRMType={}));var CmcdMode;(function(CmcdMode){CmcdMode[CmcdMode[\"MODE_REQUEST_HEADER\"]=0]=\"MODE_REQUEST_HEADER\";CmcdMode[CmcdMode[\"MODE_QUERY_PARAMETER\"]=1]=\"MODE_QUERY_PARAMETER\";})(CmcdMode||(exports.CmcdMode=CmcdMode={}));var BufferingStrategyType;(function(BufferingStrategyType){BufferingStrategyType[\"DEFAULT\"]=\"Default\";BufferingStrategyType[\"DISABLE_BUFFERING\"]=\"DisableBuffering\";BufferingStrategyType[\"DEPENDING_ON_MEMORY\"]=\"DependingOnMemory\";})(BufferingStrategyType||(exports.BufferingStrategyType=BufferingStrategyType={}));var SelectedTrackType;(function(SelectedTrackType){SelectedTrackType[\"SYSTEM\"]=\"system\";SelectedTrackType[\"DISABLED\"]=\"disabled\";SelectedTrackType[\"TITLE\"]=\"title\";SelectedTrackType[\"LANGUAGE\"]=\"language\";SelectedTrackType[\"INDEX\"]=\"index\";})(SelectedTrackType||(exports.SelectedTrackType=SelectedTrackType={}));var SelectedVideoTrackType;(function(SelectedVideoTrackType){SelectedVideoTrackType[\"AUTO\"]=\"auto\";SelectedVideoTrackType[\"DISABLED\"]=\"disabled\";SelectedVideoTrackType[\"RESOLUTION\"]=\"resolution\";SelectedVideoTrackType[\"INDEX\"]=\"index\";})(SelectedVideoTrackType||(exports.SelectedVideoTrackType=SelectedVideoTrackType={}));var TextTrackType;(function(TextTrackType){TextTrackType[\"SUBRIP\"]=\"application/x-subrip\";TextTrackType[\"TTML\"]=\"application/ttml+xml\";TextTrackType[\"VTT\"]=\"text/vtt\";})(TextTrackType||(exports.TextTrackType=TextTrackType={}));var FullscreenOrientationType;(function(FullscreenOrientationType){FullscreenOrientationType[\"ALL\"]=\"all\";FullscreenOrientationType[\"LANDSCAPE\"]=\"landscape\";FullscreenOrientationType[\"PORTRAIT\"]=\"portrait\";})(FullscreenOrientationType||(exports.FullscreenOrientationType=FullscreenOrientationType={}));var IgnoreSilentSwitchType;(function(IgnoreSilentSwitchType){IgnoreSilentSwitchType[\"INHERIT\"]=\"inherit\";IgnoreSilentSwitchType[\"IGNORE\"]=\"ignore\";IgnoreSilentSwitchType[\"OBEY\"]=\"obey\";})(IgnoreSilentSwitchType||(exports.IgnoreSilentSwitchType=IgnoreSilentSwitchType={}));var MixWithOthersType;(function(MixWithOthersType){MixWithOthersType[\"INHERIT\"]=\"inherit\";MixWithOthersType[\"MIX\"]=\"mix\";MixWithOthersType[\"DUCK\"]=\"duck\";})(MixWithOthersType||(exports.MixWithOthersType=MixWithOthersType={}));var PosterResizeModeType;(function(PosterResizeModeType){PosterResizeModeType[\"CONTAIN\"]=\"contain\";PosterResizeModeType[\"CENTER\"]=\"center\";PosterResizeModeType[\"COVER\"]=\"cover\";PosterResizeModeType[\"NONE\"]=\"none\";PosterResizeModeType[\"REPEAT\"]=\"repeat\";PosterResizeModeType[\"STRETCH\"]=\"stretch\";})(PosterResizeModeType||(exports.PosterResizeModeType=PosterResizeModeType={}));","map":{"version":3,"names":["DRMType","exports","CmcdMode","BufferingStrategyType","SelectedTrackType","SelectedVideoTrackType","TextTrackType","FullscreenOrientationType","IgnoreSilentSwitchType","MixWithOthersType","PosterResizeModeType"],"sources":["/Users/deu/SigmaLTD/node_modules/react-native-video/src/types/video.ts"],"sourcesContent":["import type {ISO639_1} from './language';\nimport type {ReactVideoEvents} from './events';\nimport type {\n  ImageProps,\n  StyleProp,\n  ViewProps,\n  ViewStyle,\n  ImageRequireSource,\n  ImageURISource,\n  ImageStyle,\n} from 'react-native';\nimport type {ReactNode} from 'react';\nimport type VideoResizeMode from './ResizeMode';\nimport type FilterType from './FilterType';\nimport type ViewType from './ViewType';\n\nexport type Headers = Record<string, string>;\n\nexport type EnumValues<T extends string | number> = T extends string\n  ? `${T}` | T\n  : T;\n\nexport type ReactVideoSourceProperties = {\n  uri?: string;\n  isNetwork?: boolean;\n  isAsset?: boolean;\n  isLocalAssetFile?: boolean;\n  shouldCache?: boolean;\n  type?: string;\n  mainVer?: number;\n  patchVer?: number;\n  headers?: Headers;\n  startPosition?: number;\n  cropStart?: number;\n  cropEnd?: number;\n  contentStartTime?: number; // Android\n  metadata?: VideoMetadata;\n  drm?: Drm;\n  cmcd?: Cmcd; // android\n  textTracksAllowChunklessPreparation?: boolean;\n  textTracks?: TextTracks;\n  ad?: AdConfig;\n  minLoadRetryCount?: number; // Android\n  bufferConfig?: BufferConfig;\n};\n\nexport type ReactVideoSource = Readonly<\n  Omit<ReactVideoSourceProperties, 'uri'> & {\n    uri?: string | NodeRequire;\n  }\n>;\n\nexport type ReactVideoPosterSource = ImageURISource | ImageRequireSource;\n\nexport type ReactVideoPoster = Omit<ImageProps, 'source'> & {\n  // prevents giving source in the array\n  source?: ReactVideoPosterSource;\n};\n\nexport type VideoMetadata = Readonly<{\n  title?: string;\n  subtitle?: string;\n  description?: string;\n  artist?: string;\n  imageUri?: string;\n}>;\n\nexport type DebugConfig = Readonly<{\n  enable?: boolean;\n  thread?: boolean;\n}>;\n\nexport enum DRMType {\n  WIDEVINE = 'widevine',\n  PLAYREADY = 'playready',\n  CLEARKEY = 'clearkey',\n  FAIRPLAY = 'fairplay',\n}\n\nexport type AdConfig = Readonly<{\n  adTagUrl?: string;\n  adLanguage?: ISO639_1;\n}>;\n\nexport type Drm = Readonly<{\n  type?: DRMType;\n  licenseServer?: string;\n  headers?: Headers;\n  contentId?: string; // ios\n  certificateUrl?: string; // ios\n  base64Certificate?: boolean; // ios default: false\n  multiDrm?: boolean; // android\n  localSourceEncryptionKeyScheme?: string; // ios\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  getLicense?: (\n    spcBase64: string,\n    contentId: string,\n    licenseUrl: string,\n    loadedLicenseUrl: string,\n  ) => string | Promise<string>; // ios\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n}>;\n\nexport enum CmcdMode {\n  MODE_REQUEST_HEADER = 0,\n  MODE_QUERY_PARAMETER = 1,\n}\n/**\n * Custom key names MUST carry a hyphenated prefix to ensure that there will not be a\n * namespace collision with future revisions to this specification. Clients SHOULD\n * use a reverse-DNS syntax when defining their own prefix.\n *\n * @see https://cdn.cta.tech/cta/media/media/resources/standards/pdfs/cta-5004-final.pdf CTA-5004 Specification (Page 6, Section 3.1)\n */\nexport type CmcdData = Record<`${string}-${string}`, string | number>;\nexport type CmcdConfiguration = Readonly<{\n  mode?: CmcdMode; // default: MODE_QUERY_PARAMETER\n  request?: CmcdData;\n  session?: CmcdData;\n  object?: CmcdData;\n  status?: CmcdData;\n}>;\nexport type Cmcd = boolean | CmcdConfiguration;\n\nexport enum BufferingStrategyType {\n  DEFAULT = 'Default',\n  DISABLE_BUFFERING = 'DisableBuffering',\n  DEPENDING_ON_MEMORY = 'DependingOnMemory',\n}\n\nexport type BufferConfigLive = {\n  maxPlaybackSpeed?: number;\n  minPlaybackSpeed?: number;\n  maxOffsetMs?: number;\n  minOffsetMs?: number;\n  targetOffsetMs?: number;\n};\n\nexport type BufferConfig = {\n  minBufferMs?: number;\n  maxBufferMs?: number;\n  bufferForPlaybackMs?: number;\n  bufferForPlaybackAfterRebufferMs?: number;\n  backBufferDurationMs?: number; // Android\n  maxHeapAllocationPercent?: number;\n  minBackBufferMemoryReservePercent?: number;\n  minBufferMemoryReservePercent?: number;\n  cacheSizeMB?: number;\n  live?: BufferConfigLive;\n};\n\nexport enum SelectedTrackType {\n  SYSTEM = 'system',\n  DISABLED = 'disabled',\n  TITLE = 'title',\n  LANGUAGE = 'language',\n  INDEX = 'index',\n}\n\nexport type SelectedTrack = {\n  type: SelectedTrackType;\n  value?: string | number;\n};\n\nexport enum SelectedVideoTrackType {\n  AUTO = 'auto',\n  DISABLED = 'disabled',\n  RESOLUTION = 'resolution',\n  INDEX = 'index',\n}\n\nexport type SelectedVideoTrack = {\n  type: SelectedVideoTrackType;\n  value?: string | number;\n};\n\nexport type SubtitleStyle = {\n  fontSize?: number;\n  paddingTop?: number;\n  paddingBottom?: number;\n  paddingLeft?: number;\n  paddingRight?: number;\n  opacity?: number;\n  subtitlesFollowVideo?: boolean;\n};\n\nexport enum TextTrackType {\n  SUBRIP = 'application/x-subrip',\n  TTML = 'application/ttml+xml',\n  VTT = 'text/vtt',\n}\n\nexport type TextTracks = {\n  title: string;\n  language: ISO639_1;\n  type: TextTrackType;\n  uri: string;\n}[];\n\nexport type TextTrackSelectionType =\n  | 'system'\n  | 'disabled'\n  | 'title'\n  | 'language'\n  | 'index';\n\nexport type SelectedTextTrack = Readonly<{\n  type: TextTrackSelectionType;\n  value?: string | number;\n}>;\n\nexport type AudioTrackSelectionType =\n  | 'system'\n  | 'disabled'\n  | 'title'\n  | 'language'\n  | 'index';\n\nexport type SelectedAudioTrack = Readonly<{\n  type: AudioTrackSelectionType;\n  value?: string | number;\n}>;\n\nexport type Chapters = {\n  title: string;\n  startTime: number;\n  endTime: number;\n  uri?: string;\n};\n\nexport enum FullscreenOrientationType {\n  ALL = 'all',\n  LANDSCAPE = 'landscape',\n  PORTRAIT = 'portrait',\n}\n\nexport enum IgnoreSilentSwitchType {\n  INHERIT = 'inherit',\n  IGNORE = 'ignore',\n  OBEY = 'obey',\n}\n\nexport enum MixWithOthersType {\n  INHERIT = 'inherit',\n  MIX = 'mix',\n  DUCK = 'duck',\n}\n\nexport enum PosterResizeModeType {\n  CONTAIN = 'contain',\n  CENTER = 'center',\n  COVER = 'cover',\n  NONE = 'none',\n  REPEAT = 'repeat',\n  STRETCH = 'stretch',\n}\n\nexport type AudioOutput = 'speaker' | 'earpiece';\n\nexport type ControlsStyles = {\n  hideSeekBar?: boolean;\n  hideDuration?: boolean;\n  hidePosition?: boolean;\n  hidePlayPause?: boolean;\n  hideForward?: boolean;\n  hideRewind?: boolean;\n  hideNext?: boolean;\n  hidePrevious?: boolean;\n  hideFullscreen?: boolean;\n  hideNavigationBarOnFullScreenMode?: boolean;\n  hideNotificationBarOnFullScreenMode?: boolean;\n  hideSettingButton?: boolean;\n  seekIncrementMS?: number;\n  liveLabel?: string;\n};\n\nexport interface ReactVideoRenderLoaderProps {\n  source?: ReactVideoSource;\n  style?: StyleProp<ImageStyle>;\n  resizeMode?: EnumValues<VideoResizeMode>;\n}\n\nexport interface ReactVideoProps extends ReactVideoEvents, ViewProps {\n  source?: ReactVideoSource;\n  /** @deprecated Use source.drm */\n  drm?: Drm;\n  style?: StyleProp<ViewStyle>;\n  /** @deprecated Use source.ad.adTagUrl */\n  adTagUrl?: string;\n  /** @deprecated Use source.ad.adLanguage */\n  adLanguage?: ISO639_1;\n  audioOutput?: AudioOutput; // Mobile\n  automaticallyWaitsToMinimizeStalling?: boolean; // iOS\n  /** @deprecated Use source.bufferConfig */\n  bufferConfig?: BufferConfig; // Android\n  bufferingStrategy?: BufferingStrategyType;\n  chapters?: Chapters[]; // iOS\n  /** @deprecated Use source.contentStartTime */\n  contentStartTime?: number; // Android\n  controls?: boolean;\n  currentPlaybackTime?: number; // Android\n  disableFocus?: boolean;\n  disableDisconnectError?: boolean; // Android\n  filter?: EnumValues<FilterType>; // iOS\n  filterEnabled?: boolean; // iOS\n  focusable?: boolean; // Android\n  fullscreen?: boolean; // iOS\n  fullscreenAutorotate?: boolean; // iOS\n  fullscreenOrientation?: EnumValues<FullscreenOrientationType>; // iOS\n  hideShutterView?: boolean; //\tAndroid\n  ignoreSilentSwitch?: EnumValues<IgnoreSilentSwitchType>; // iOS\n  /** @deprecated Use source.minLoadRetryCount */\n  minLoadRetryCount?: number; // Android\n  maxBitRate?: number;\n  mixWithOthers?: EnumValues<MixWithOthersType>; // iOS\n  muted?: boolean;\n  paused?: boolean;\n  enterPictureInPictureOnLeave?: boolean;\n  playInBackground?: boolean;\n  playWhenInactive?: boolean; // iOS\n  poster?: string | ReactVideoPoster; // string is deprecated\n  /** @deprecated use **resizeMode** key in **poster** props instead */\n  posterResizeMode?: EnumValues<PosterResizeModeType>;\n  preferredForwardBufferDuration?: number; // iOS\n  preventsDisplaySleepDuringVideoPlayback?: boolean;\n  progressUpdateInterval?: number;\n  rate?: number;\n  renderLoader?: ReactNode | ((arg0: ReactVideoRenderLoaderProps) => ReactNode);\n  repeat?: boolean;\n  reportBandwidth?: boolean; //Android\n  resizeMode?: EnumValues<VideoResizeMode>;\n  showNotificationControls?: boolean; // Android, iOS\n  selectedAudioTrack?: SelectedTrack;\n  selectedTextTrack?: SelectedTrack;\n  selectedVideoTrack?: SelectedVideoTrack; // android\n  subtitleStyle?: SubtitleStyle; // android\n  shutterColor?: string; // Android\n  /** @deprecated Use source.textTracks */\n  textTracks?: TextTracks;\n  testID?: string;\n  viewType?: ViewType;\n  /** @deprecated Use viewType */\n  useTextureView?: boolean; // Android\n  /** @deprecated Use viewType*/\n  useSecureView?: boolean; // Android\n  volume?: number;\n  /** @deprecated use **localSourceEncryptionKeyScheme** key in **drm** props instead */\n  localSourceEncryptionKeyScheme?: string;\n  debug?: DebugConfig;\n  allowsExternalPlayback?: boolean; // iOS\n  controlsStyles?: ControlsStyles; // Android\n}\n"],"mappings":"mVAwEA,GAAY,CAAAA,OAKX,CALD,UAAYA,OAAO,EACjBA,OAAA,uBAAqB,CACrBA,OAAA,yBAAuB,CACvBA,OAAA,uBAAqB,CACrBA,OAAA,uBAAqB,CACvB,CAAC,EALWA,OAAO,GAAAC,OAAA,CAAAD,OAAA,CAAPA,OAAO,MA+BnB,GAAY,CAAAE,QAGX,CAHD,UAAYA,QAAQ,EAClBA,QAAA,CAAAA,QAAA,gDAAuB,CACvBA,QAAA,CAAAA,QAAA,kDAAwB,CAC1B,CAAC,EAHWA,QAAQ,GAAAD,OAAA,CAAAC,QAAA,CAARA,QAAQ,MAqBpB,GAAY,CAAAC,qBAIX,CAJD,UAAYA,qBAAqB,EAC/BA,qBAAA,qBAAmB,CACnBA,qBAAA,wCAAsC,CACtCA,qBAAA,2CAAyC,CAC3C,CAAC,EAJWA,qBAAqB,GAAAF,OAAA,CAAAE,qBAAA,CAArBA,qBAAqB,MA2BjC,GAAY,CAAAC,iBAMX,CAND,UAAYA,iBAAiB,EAC3BA,iBAAA,mBAAiB,CACjBA,iBAAA,uBAAqB,CACrBA,iBAAA,iBAAe,CACfA,iBAAA,uBAAqB,CACrBA,iBAAA,iBAAe,CACjB,CAAC,EANWA,iBAAiB,GAAAH,OAAA,CAAAG,iBAAA,CAAjBA,iBAAiB,MAa7B,GAAY,CAAAC,sBAKX,CALD,UAAYA,sBAAsB,EAChCA,sBAAA,eAAa,CACbA,sBAAA,uBAAqB,CACrBA,sBAAA,2BAAyB,CACzBA,sBAAA,iBAAe,CACjB,CAAC,EALWA,sBAAsB,GAAAJ,OAAA,CAAAI,sBAAA,CAAtBA,sBAAsB,MAsBlC,GAAY,CAAAC,aAIX,CAJD,UAAYA,aAAa,EACvBA,aAAA,iCAA+B,CAC/BA,aAAA,+BAA6B,CAC7BA,aAAA,kBAAgB,CAClB,CAAC,EAJWA,aAAa,GAAAL,OAAA,CAAAK,aAAA,CAAbA,aAAa,MA4CzB,GAAY,CAAAC,yBAIX,CAJD,UAAYA,yBAAyB,EACnCA,yBAAA,aAAW,CACXA,yBAAA,yBAAuB,CACvBA,yBAAA,uBAAqB,CACvB,CAAC,EAJWA,yBAAyB,GAAAN,OAAA,CAAAM,yBAAA,CAAzBA,yBAAyB,MAMrC,GAAY,CAAAC,sBAIX,CAJD,UAAYA,sBAAsB,EAChCA,sBAAA,qBAAmB,CACnBA,sBAAA,mBAAiB,CACjBA,sBAAA,eAAa,CACf,CAAC,EAJWA,sBAAsB,GAAAP,OAAA,CAAAO,sBAAA,CAAtBA,sBAAsB,MAMlC,GAAY,CAAAC,iBAIX,CAJD,UAAYA,iBAAiB,EAC3BA,iBAAA,qBAAmB,CACnBA,iBAAA,aAAW,CACXA,iBAAA,eAAa,CACf,CAAC,EAJWA,iBAAiB,GAAAR,OAAA,CAAAQ,iBAAA,CAAjBA,iBAAiB,MAM7B,GAAY,CAAAC,oBAOX,CAPD,UAAYA,oBAAoB,EAC9BA,oBAAA,qBAAmB,CACnBA,oBAAA,mBAAiB,CACjBA,oBAAA,iBAAe,CACfA,oBAAA,eAAa,CACbA,oBAAA,mBAAiB,CACjBA,oBAAA,qBAAmB,CACrB,CAAC,EAPWA,oBAAoB,GAAAT,OAAA,CAAAS,oBAAA,CAApBA,oBAAoB","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}