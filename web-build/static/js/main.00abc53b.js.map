{"version":3,"file":"static/js/main.00abc53b.js","mappings":"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","sources":["redux/store.js","styles/screens/SettingsScreen.js","screens/SettingsScreen.js","database.js","styles/screens/LoginScreen.js","screens/LoginScreen.js","styles/screens/FeedScreen.js","components/FloatingButton.js","components/Tag.js","components/Post.js","screens/FeedScreen.js","screens/FollowingScreen.js","styles/screens/ProfileScreen.js","styles/components/ProfileModal.js","components/ProfileModal.js","screens/ProfileSettingsScreen.js","MainNavigator.js","components/Comment.js","screens/CommentScreen.js","styles/components/CreatePost.js","components/CreatePost.js","screens/CreatePostScreen.js","screens/SplashScreen.js","screens/ProfileScreen.js","App.js","index.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["// redux/store.js\n\nimport { createStore, combineReducers } from 'redux';\n\n// Theme reducer\nconst initialThemeState = {\n  current: 'dark',\n  colors: {\n    light: { background: '#fff', text: '#000', border: '#ccc' },\n    dark: { background: '#000', text: '#fff', border: '#666' },\n  },\n};\n\nconst themeReducer = (state = initialThemeState, action) => {\n  switch (action.type) {\n    case 'SET_THEME':\n      return { ...state, current: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  theme: themeReducer,\n});\n\nexport const store = createStore(rootReducer);\n\nexport const setTheme = (theme) => ({\n  type: 'SET_THEME',\n  payload: theme,\n});","// screens/SettingsScreen.js\n\nimport { StyleSheet } from 'react-native'; // Ensure StyleSheet is included\n\n\nexport const styles = StyleSheet.create({\n  container: { flex: 1, padding: 20 },\n  title: { fontSize: 24, fontWeight: 'bold', marginBottom: 20 },\n  subtitle: { fontSize: 18, marginBottom: 10 },\n});","// screens/SettingsScreen.js\n\nimport React from 'react';\nimport { View, Text, Button } from 'react-native'; // Ensure StyleSheet is included\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setTheme } from '../redux/store';\nimport { styles } from '../styles/screens/SettingsScreen';\n\nexport default function SettingsScreen({ navigation }) {\n    const dispatch = useDispatch();\n    const { current, colors } = useSelector((state) => state.theme);\n    const theme = colors[current];\n\n    const handleThemeChange = (selectedTheme) => {\n        dispatch(setTheme(selectedTheme));\n    };\n\n    return (\n        <View style={[styles.container, { backgroundColor: theme.background }]}>\n            <Text style={[styles.title, { color: theme.text }]}>Settings</Text>\n            {/*<Text style={[styles.subtitle, { color: theme.text }]}>Choose Theme</Text>*/}\n            {/*<Button title=\"Light Theme\" onPress={() => handleThemeChange('light')} />*/}\n            <Button title=\"Dark Theme\" onPress={() => handleThemeChange('dark')} />\n            <Text style={{ color: theme.text, marginTop: 10 }}>\n                Current Theme: {current}\n            </Text>\n            <Button title=\"Go Back\" onPress={() => navigation.goBack()} />\n        </View>\n    );\n}","import AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport const BASE_URL = 'https://www.sigmaltd.space';\nexport const API_URL = BASE_URL + '/api';\n\n// Helper to get the token from AsyncStorage\nconst getToken = async () => {\n\treturn await AsyncStorage.getItem('token');\n};\n\n// Helper to add Authorization header with token\nconst authHeaders = async () => {\n\tconst token = await getToken();\n\n\tif (!token || token === 'undefined' || token === 'null') {\n\t\tconsole.warn('Token is empty or invalid:', token);\n\t\treturn { 'Content-Type': 'application/json' };\n\t}\n\n\treturn {\n\t\t'Authorization': `Bearer ${token}`,\n\t\t'Content-Type': 'application/json'\n\t};\n};\n\nconst Database = {\n\tinit: async () => {\n\t\tconsole.log('Database initialized (API mode with JWT)');\n\t},\n\n\tregister: async ({ email, password, realName, group, displayedName }) => {\n\t\tconst response = await fetch(`${API_URL}/register`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify({ email, password, realName, group, displayedName }),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\tconst data = await response.json();\n\t\tawait AsyncStorage.setItem('token', data.token); // Store token\n\t\treturn data.user; // Return user data\n\t},\n\n\tlogin: async ({ email, password }) => {\n\t\tconst response = await fetch(`${API_URL}/login`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify({ email, password }),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\tconst data = await response.json();\n\t\tawait AsyncStorage.setItem('token', data.token); // Store token\n\t\treturn data.user; // Return user data\n\t},\n\n\tlogout: async () => {\n\t\tawait AsyncStorage.removeItem('token'); // Remove token client-side\n\t\tconst response = await fetch(`${API_URL}/logout`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tgetCurrentUser: async () => {\n\t\tconst response = await fetch(`${API_URL}/current-user`, {\n\t\t\theaders: await authHeaders(),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tgetUser: async (id) => {\n\t\tconst response = await fetch(`${API_URL}/user/${id}`, {\n\t\t\theaders: await authHeaders(),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tgetUsername: async (setUsername) => {\n\t\tconst user = await Database.getCurrentUser();\n\t\tsetUsername && setUsername(user.displayedName);\n\t\treturn user.idUser;\n\t},\n\t\n\tchangeUsername: async (username) => {\n\t\tconst response = await fetch(`${API_URL}/current-user`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: await authHeaders(),\n\t\t\tbody: JSON.stringify({ username }),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tchangeImage: async (payload) => {\n\t\tconst response = await fetch(`${API_URL}/current-user`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: await authHeaders(),\n\t\t\tbody: JSON.stringify(payload),\n\t\t})\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\taddPost: async (payload) => {\n\t\ttry {\n\t\t\tconst response = await fetch(`${API_URL}/posts`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: await authHeaders(),\n\t\t\t\tbody: JSON.stringify(payload),\n\n\t\t\t});\n\n\t\t\tconst responseText = await response.text();\n\n\t\t\tif (!response.ok) {\n\t\t\t\tconsole.error('Post error response:', responseText);\n\t\t\t\tthrow new Error(responseText || 'Failed to upload post');\n\t\t\t}\n\n\t\t\treturn JSON.parse(responseText);\n\t\t} catch (error) {\n\t\t\tconsole.error('Network error:', error);\n\t\t\tthrow error;\n\t\t}\n\t},\n\n\tgetAllPosts: async (page) => {\n\t\tconst response = await fetch(`${API_URL}/posts?page=${page}&pageSize=10`, {\n\t\t\theaders: await authHeaders(),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\n\t},\n\n\tgetPost: async (postId) => {\n\t\tconst response = await fetch(`${API_URL}/post/${postId}`, {\n\t\t\theaders: await authHeaders(),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tdeletePost: async (postId) => {\n\t\tconst response = await fetch(`${API_URL}/posts`, {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: await authHeaders(),\n\t\t\tbody: JSON.stringify({ postId: postId }),\n\t\t})\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tgetFollowingPosts: async (page) => {\n\t\tconst response = await fetch(`${API_URL}/following-posts?page=${page}&pageSize=10`, {\n\t\t\theaders: await authHeaders(),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\n\t},\n\n\tgetAllComments: async (page) => {\n\t\tconst response = await fetch(`${API_URL}/comments?page=${page}&pageSize=10`, {\n\t\t\theaders: await authHeaders(),\n\t\t})\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tgetPostComments: async (postId) => {\n\t\tconst response = await fetch(`${API_URL}/post/${postId}/comments`, {\n\t\t\theaders: await authHeaders(),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tgetPostCommentsCount: async (postId) => {\n\t\tconst response = await fetch(`${API_URL}/post/${postId}/comments-count`, {\n\t\t\theaders: await authHeaders(),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\taddComment: async ({ postId, content }) => {\n\t\tconst response = await fetch(`${API_URL}/comments`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: await authHeaders(),\n\t\t\tbody: JSON.stringify({ postId, content }),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tlikePost: async (postId) => {\n\t\tconst response = await fetch(`${API_URL}/like-post`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: await authHeaders(),\n\t\t\tbody: JSON.stringify({ postId }),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tgetLikePost: async (postId) => {\n\t\tconst response = await fetch(`${API_URL}/like-post?idPost=${postId}`, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: await authHeaders(),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tunlikePost: async (postId) => {\n\t\tconst response = await fetch(`${API_URL}/unlike-post`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: await authHeaders(),\n\t\t\tbody: JSON.stringify({ postId }),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tgetCommentLikes: async (commentId) => {\n\t\tconst response = await fetch(`${API_URL}/get-comment-likes`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: await authHeaders(),\n\t\t\tbody: JSON.stringify({ commentId }),\n\t\t})\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tlikeComment: async (commentId) => {\n\t\tconst response = await fetch(`${API_URL}/like-comment`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: await authHeaders(),\n\t\t\tbody: JSON.stringify({ commentId }),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tunlikeComment: async (commentId) => {\n\t\tconst response = await fetch(`${API_URL}/unlike-comment`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: await authHeaders(),\n\t\t\tbody: JSON.stringify({ commentId }),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tfollowTag: async (tagName) => {\n\t\tconst response = await fetch(`${API_URL}/follow-tag`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: await authHeaders(),\n\t\t\tbody: JSON.stringify({ tagName }),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tunfollowTag: async (tagName) => {\n\t\tconst response = await fetch(`${API_URL}/unfollow-tag`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: await authHeaders(),\n\t\t\tbody: JSON.stringify({ tagName }),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tgetFollowedTags: async () => {\n\t\tconst response = await fetch(`${API_URL}/followed-tags`, {\n\t\t\theaders: await authHeaders(),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\taddCommentBase64: async ({ postId, content, isAnonymous, imageBase64 }) => {\n\t\tconst token = await AsyncStorage.getItem('token');\n\n\t\tconst payload = {\n\t\t\tpostId,\n\t\t\tcontent,\n\t\t\tisAnonymous,\n\t\t\timageBase64,\n\t\t};\n\n\t\tconst response = await fetch(`${API_URL}/comments`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(payload),\n\t\t});\n\n\t\tif (!response.ok) {throw new Error(await response.text());}\n\n\t\tconst result = await response.json();\n\t\treturn result;\n\t},\n};\n\nDatabase.init();\n\nexport default Database;","// screens/LoginScreen.js\n\nimport { StyleSheet } from 'react-native'; // Ensure StyleSheet is included\n\n\nexport const styles = StyleSheet.create({\n  container: { flex: 1, justifyContent: 'center', padding: 20 },\n  title: { fontSize: 24, fontWeight: 'bold', textAlign: 'center', marginBottom: 20 },\n  input: { borderWidth: 1, padding: 10, marginBottom: 10, borderRadius: 5 },\n  error: { color: 'red', textAlign: 'center', marginBottom: 10 },\n});","// screens/LoginScreen.js\n\nimport React, {useState, useEffect} from 'react';\nimport {View, Text, TextInput, Button, Alert, Keyboard, Vibration, Platform} from 'react-native'; // Ensure StyleSheet is included\nimport {useSelector} from 'react-redux';\nimport Database from '../database';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {styles} from '../styles/screens/LoginScreen';\nimport Modal from \"react-native-modal\";\n\nexport default function LoginScreen({navigation}) {\n    const {current, colors} = useSelector((state) => state.theme);\n    const theme = colors[current];\n    const [isLogin, setIsLogin] = useState(true);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [realName, setRealName] = useState('');\n    const [group, setGroup] = useState('');\n    const [displayedName, setDisplayedName] = useState('');\n    const [error, setError] = useState(null);\n    const [showPrompt, setShowPrompt] = useState(false);\n\n    useEffect(() => {\n        async function check() {\n            const user = await AsyncStorage.getItem('token');\n            if (user) {\n                navigation.replace('Main');\n            }\n        }\n\n        check();\n        // Check if running on iOS in a browser (not standalone mode)\n        const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n        const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n        const isStandalone = \"standalone\" in window.navigator && window.navigator.standalone;\n\n        if (isIOS && isSafari && !isStandalone) {\n            setShowPrompt(true);\n        }\n    }, []);\n    ;\n    const handleSubmit = async () => {\n        setError(null);\n        try {\n            let user;\n            if (isLogin) {\n                user = await Database.login({email, password});\n            } else {\n                if ((password.length > 7) && (displayedName.length > 1)) {\n                    user = await Database.register({email, password, realName, group, displayedName});\n                } else {\n                    alert('Password or Displayed Name Too Short!');\n                }\n            }\n            navigation.replace('Main');\n        } catch (err) {\n            setError(err.message);\n            console.error('Auth error:', err.message);\n        }\n    };\n\n\n    return (\n        <View style={[styles.container, {backgroundColor: theme.background}]}>\n            <Text style={[styles.title, {color: theme.text}]}>\n                {isLogin ? 'Login' : 'Sign Up'}\n            </Text>\n            {error && <Text style={styles.error}>{error}</Text>}\n            <TextInput\n                style={[styles.input, {borderColor: theme.border, color: theme.text}]}\n                placeholder=\"Email\"\n                value={email}\n                onChangeText={setEmail}\n                autoCapitalize=\"none\"\n                placeholderTextColor={theme.text === '#000' ? '#666' : '#ccc'}\n            />\n            <TextInput\n                style={[styles.input, {borderColor: theme.border, color: theme.text}]}\n                placeholder=\"Password\"\n                value={password}\n                onChangeText={setPassword}\n                secureTextEntry\n                placeholderTextColor={theme.text === '#000' ? '#666' : '#ccc'}\n            />\n            {!isLogin && (\n                <>\n                    <TextInput\n                        style={[styles.input, {borderColor: theme.border, color: theme.text}]}\n                        placeholder=\"Real Name\"\n                        value={realName}\n                        onChangeText={setRealName}\n                        placeholderTextColor={theme.text === '#000' ? '#666' : '#ccc'}\n                    />\n                    <TextInput\n                        style={[styles.input, {borderColor: theme.border, color: theme.text}]}\n                        placeholder=\"Group (e.g., student)\"\n                        value={group}\n                        onChangeText={setGroup}\n                        placeholderTextColor={theme.text === '#000' ? '#666' : '#ccc'}\n                    />\n                    <TextInput\n                        style={[styles.input, {borderColor: theme.border, color: theme.text}]}\n                        placeholder=\"Displayed Name\"\n                        value={displayedName}\n                        onChangeText={setDisplayedName}\n                        placeholderTextColor={theme.text === '#000' ? '#666' : '#ccc'}\n                    />\n                </>\n            )}\n            <Button title={isLogin ? 'Login' : 'Sign Up'} onPress={handleSubmit}/>\n            <Button\n                title={`Switch to ${isLogin ? 'Sign Up' : 'Login'}`}\n                onPress={() => {\n                    setIsLogin(!isLogin);\n                    setError(null);\n                    setEmail('');\n                    setPassword('');\n                    setRealName('');\n                    setGroup('');\n                    setDisplayedName('');\n                }}\n            />\n            <Modal visible={showPrompt} style={{backgroundColor: \"#111\"}}>\n                <View style={{alignItems: 'center', alignSelf: 'center', alignContent: 'center'}}>\n                    <Text style={{color: \"#fff\", fontSize: 20, alignSelf: 'center', alignItems: 'center', alignContent: 'center', justifyContent: 'center'}}>\n                        Нажми на кнопку поделиться, потом выбери \"Add to Home Screen\" чтобы установить\n                    </Text>\n                    {/* Add an image or icon here */}\n                    <Button title=\"Got it\" onPress={() => setShowPrompt(false)} />\n                </View>\n            </Modal>\n        </View>\n    );\n}\n","import { Dimensions, StyleSheet } from 'react-native';\n\nexport const styles = StyleSheet.create({\n  container: { flex: 1, padding: 10, width: '100%' },\n  title: { fontSize: 24, fontWeight: 'bold', marginBottom: 10 },\n  input: { borderWidth: 1, padding: 10, marginBottom: 10, borderRadius: 5 },\n  previewImage: { width: 100, height: 100, marginRight: 10, marginBottom: 10 },\n  error: { color: 'red', marginBottom: 10 },\n  postList: { marginTop: 10},\n  post: { marginBottom: 10 },\n});","import React, {useEffect, useRef} from \"react\";\nimport {Animated, Dimensions, Platform, Text, TouchableOpacity} from \"react-native\";\n\nexport const FloatingButton = ({ onPress, visible }) => {\n    const slideAnim = useRef(new Animated.Value(0)).current;\n\n    useEffect(() => {\n        Animated.timing(slideAnim, {\n            toValue: visible ? 0 : 300,\n            duration: 500,\n            useNativeDriver: true,\n        }).start();\n    }, [visible, slideAnim]);\n\n    return (\n        <Animated.View\n            style={{\n                position: 'absolute',\n                top: Platform.OS === 'web' ? Dimensions.get('window').height * 0.85 : '80%',\n                right: Platform.OS === 'web' ? Dimensions.get('window').width * 0.02 : '3%',\n                zIndex: 999,\n                transform: [{ translateY: slideAnim }],\n            }}\n        >\n            <TouchableOpacity\n                style={{\n                    backgroundColor: '#000',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    padding: 10,\n                    borderRadius: 50,\n                    width: 60,\n                    height: 60,\n                }}\n                onPress={onPress}\n            >\n                <Text style={{ fontSize: 30, color: '#FFF' }}>σ</Text>\n            </TouchableOpacity>\n        </Animated.View>\n    );\n};\n","// components/Tag.js\n\nimport React, { useState, useEffect } from 'react';\nimport { TouchableOpacity, Text } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport Database from '../database';\n\nexport default function Tag({ tag, onRefresh }) {\n  const theme = useSelector((state) => state.theme);\n  const [isFollowed, setIsFollowed] = useState(false);\n\n  useEffect(() => {\n    Database.getFollowedTags().then(tags => setIsFollowed(tags.includes(tag)));\n  }, [tag]);\n\n  const handleTagPress = async () => {\n    try {\n      if (isFollowed) {\n        await Database.unfollowTag(tag);\n      } else {\n        await Database.followTag(tag);\n      }\n      setIsFollowed(!isFollowed);\n      onRefresh(isFollowed);\n    } catch (err) {\n      console.error('Error toggling tag:', err);\n    }\n  };\n\n  return (\n    <TouchableOpacity onPress={handleTagPress} style={{\n      marginRight: 5,\n      backgroundColor: '#BBB',\n      borderRadius: 10,\n      padding: 5,\n      alignContent: \"center\",\n      height: \"100%\",\n    }}>\n      <Text style={{ \n        color: isFollowed ? theme.colors.text : '#888', \n        fontWeight: isFollowed ? 'bold' : 'normal',\n        textAlign: 'center',\n        textAlignVertical: 'center',\n        alignContent: 'center',\n        alignSelf: 'center',\n        alignItems: 'center',\n      }}>\n        {tag.substring(0, 20) || 'unknown'}\n      </Text>\n    </TouchableOpacity>\n  );\n}","import React, {useEffect, useState, useRef} from 'react';\nimport {\n    View,\n    Text,\n    FlatList,\n    TouchableOpacity,\n    ActivityIndicator,\n    Dimensions,\n    Image,\n    StyleSheet,\n    ScrollView,\n    Pressable,\n} from 'react-native';\nimport {Video} from 'react-native-video';\nimport {Avatar} from 'react-native-elements';\nimport {Ionicons} from '@expo/vector-icons';\nimport {useSelector} from 'react-redux';\nimport Database, {BASE_URL} from '../database';\nimport Tag from \"./Tag\";\nimport Modal from \"react-native-modal\";\n\nconst {width: SCREEN_WIDTH} = Dimensions.get('window');\n\nfunction findURLs(text) {\n    // Regular expression for matching URLs\n    const urlPattern = /(https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*))/gi;\n\n    // Find all matches in the text\n    const urls = text.match(urlPattern) || [];\n\n    return urls;\n}\n\nconst Post = ({navigation, post, refresher}) => {\n    const theme = useSelector((state) => state.theme);\n    const [liked, setLiked] = useState(post.likedByCurrentUser || false);\n    const [creator, setCreator] = useState({displayedName: 'Loading...', pic: null});\n    const [myPost, setMyPost] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const [open, setOpen] = useState(false);\n    const flatListRef = useRef(null);\n    const [commentsCount, setCommentsCount] = useState(0);\n    const [urls, setUrls] = useState([]);\n    const [content, setContent] = useState('');\n\n    useEffect(() => {\n        let mounted = true;\n\n        const fetchPostData = async () => {\n            try {\n                setIsLoading(true);\n                const [user, me] = await Promise.all([Database.getUser(post.createdByIdUser), Database.getCurrentUser(),]);\n\n                const likeStatus = await Database.getLikePost(Number(post.idPost));\n                setLiked(likeStatus);\n                if (mounted) {\n                    setCreator(user || {displayedName: 'Unknown', pic: null});\n                    setMyPost(me?.idUser === post.createdByIdUser);\n                }\n                const t = await Database.getPostCommentsCount(post.idPost);\n                setCommentsCount(t.count);\n                if (post.content) {\n                    const url1 = findURLs(post.content);\n                    setUrls(url1);\n                    let temp = post.content;\n                    url1.forEach(url => {\n                        temp = temp.replace(url, `(${urls.indexOf(url) + 2})`);\n                    })\n                    setContent(temp);\n                }\n            } catch (error) {\n                console.error('Error fetching post data:', error);\n            } finally {\n                if (mounted) setIsLoading(false);\n            }\n        };\n\n        fetchPostData();\n        return () => {\n            mounted = false;\n        };\n    }, [post.createdByIdUser, post.idPost]);\n\n    useEffect(() => {\n        const interval = setInterval(async () => {\n            await updateCommentsCount();\n        }, 1000)\n        return () => clearInterval(interval)\n    }, []);\n\n    const updateCommentsCount = async () => {\n        const t = await Database.getPostCommentsCount(post.idPost);\n        setCommentsCount(t.count);\n    }\n\n    const handleLike = async () => {\n        try {\n            if (liked) {\n                await Database.unlikePost(post.idPost);\n                setLiked(false);\n                post.likes--;\n            } else {\n                await Database.likePost(post.idPost);\n                setLiked(true);\n                post.likes++;\n            }\n        } catch (err) {\n            console.error('Error handling like:', err);\n        }\n    };\n\n    const deletePost = async () => {\n        if (!myPost) {\n            alert('You are not the creator');\n            return;\n        }\n\n        try {\n            const resp = await Database.deletePost(post.idPost);\n            if (resp.success) {\n                refresher();\n            }\n        } catch (error) {\n            console.error('Error deleting post:', error);\n            alert('Failed to delete post');\n        }\n    };\n\n    // const onViewableItemsChanged = useRef(({ viewableItems }) => {\n    //     if (viewableItems.length > 0) {\n    //         setCurrentIndex(viewableItems[0].index);\n    //     }\n    // }).current;\n\n    if (isLoading) {\n        return (<View style={styles.container}>\n                <ActivityIndicator size=\"large\" color={theme.colors.primary}/>\n            </View>);\n    }\n\n    const renderUrl = ({item}) => {\n        return (<View style={{width: 80, height: 25, backgroundColor: \"#222\", borderRadius: 5, alignSelf: 'center', alignItems: 'center'}}>\n                <a href={item} style={{color:\"#FFFFFF\"}} target=\"_blank\">{item.slice(8, 18)}</a>\n            </View>);\n    }\n\n    const mediaItems = Array.isArray(post.images) ? post.images : post.images?.split(',').filter(Boolean) || [];\n\n    return (<View style={[styles.container, {backgroundColor: theme.colors.background}]}>\n            <Modal isVisible={open}>\n                <Image\n                    style={{width: \"100%\", height: \"100%\", resizeMode: \"center\"}}\n                    source={creator.pic ? {uri: creator.pic} : require('../assets/default-avatar.png')}/>\n\n            </Modal>\n            {/* Header */}\n            <View style={styles.header}>\n                <View style={{flexDirection: 'row', alignItems: 'flex-start'}}>\n                    <Avatar\n                        source={creator.pic ? {uri: creator.pic} : require('../assets/default-avatar.png')}\n                        rounded\n                        size=\"medium\"\n                        containerStyle={styles.avatar}\n                        onLongPress={() => setOpen(true)}\n                        onPressOut={() => setOpen(false)}\n                    />\n                    <TouchableOpacity\n                        style={styles.userInfo}\n                        onPress={() => navigation.navigate('UserProfile', {userId: post.createdByIdUser})}\n                    >\n                        <View>\n                            <Text style={styles.username}>\n                                {post.isAnonymous ? 'Anonymous' : creator.displayedName}\n                            </Text>\n                            <Text style={styles.timestamp}>\n                                {new Date(post.createdAt).toLocaleDateString()}\n                            </Text>\n                        </View>\n\n                    </TouchableOpacity>\n                </View>\n                {/* Tags */}\n                {post.tags?.length > 0 && (<View style={styles.tagsContainer && {flex: 1}}>\n                        <FlatList\n                            style={{flexDirection: 'row-reverse'}}\n                            data={Array.isArray(post.tags) ? post.tags.slice(0, 4).reverse() : post.tags.split(',').slice(0, 4).reverse()}\n                            renderItem={({item}) => (<Tag tag={item}/>)}\n                            horizontal\n                            showsHorizontalScrollIndicator={false}\n                            keyExtractor={(item, index) => `${item}-${index}`}\n                        />\n                    </View>)}\n                {myPost && (<TouchableOpacity onPress={deletePost}>\n                        <Ionicons name=\"trash-outline\" size={24} color=\"#ff4444\"/>\n                    </TouchableOpacity>)}\n            </View>\n            {/* Content */}\n            {content && (<View style={styles.contentContainer}>\n                    <Text style={styles.content}>{content}</Text>\n                </View>)}\n            {}\n\n            {/* Media */}\n            {mediaItems.length > 0 && (<View>\n                    <ScrollView\n                        ref={flatListRef}\n                        horizontal\n                        pagingEnabled\n                        showsHorizontalScrollIndicator={false}\n                        scrollEventThrottle={1}\n                        onScroll={(e) => {\n                            const newIndex = Math.round((e.nativeEvent.contentOffset.x + 100) / SCREEN_WIDTH);\n                            setCurrentIndex(newIndex);\n                        }}\n                        style={styles.mediaScroll}\n                        contentContainerStyle={styles.mediaScrollContent}\n                    >\n                        {mediaItems.map((item, index) => (<View key={`${item}-${index}`} style={styles.mediaContainer}>\n                                {/\\.(mp4|mov|m4v)$/.test(item) ? (<Video\n                                        source={{uri: `${BASE_URL}${item}`}}\n                                        style={styles.media}\n                                        resizeMode=\"cover\"\n                                        shouldPlay={currentIndex === index}\n                                        isLooping\n                                        useNativeControls={false}\n                                        onError={(e) => console.error('Video error:', e)}\n                                    />) : (<Image\n                                        source={{uri: `${BASE_URL}${item}`}}\n                                        style={styles.media}\n                                        resizeMode=\"cover\"\n                                        onError={(e) => console.error('Image error:', e)}\n                                    />)}\n\n                            </View>))}\n                    </ScrollView>\n                    {mediaItems.length > 1 && (<View style={styles.pagination}>\n                            {mediaItems.map((_, i) => (<Pressable\n                                    key={i}\n                                    onPress={() => {\n                                        flatListRef.current?.scrollTo({x: i * SCREEN_WIDTH, animated: true});\n                                        setCurrentIndex(i);\n                                    }}\n                                    style={[styles.dot, {backgroundColor: i === currentIndex ? '#fff' : 'rgba(255,255,255,0.5)'},]}\n                                />))}\n                        </View>)}\n                </View>)}\n\n            {urls.length > 0 && (<View style={styles.actions}>\n                    <FlatList\n                        data={urls}\n                        renderItem={renderUrl}\n                        horizontal\n                        showsHorizontalScrollIndicator={false}\n                    />\n                </View>)}\n\n            {/* Actions */}\n            <View style={styles.actions}>\n                <TouchableOpacity onPress={handleLike} style={styles.actionButton}>\n                    <Ionicons\n                        name={liked ? 'heart' : 'heart-outline'}\n                        size={28}\n                        color={liked ? '#ff4444' : '#666'}\n                    />\n                    <Text style={styles.actionText}>{post.likes}</Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                    onPress={() => navigation.navigate('PostDetail', {postId: post.idPost, navigation: navigation})}\n                    style={styles.actionButton}\n                >\n                    <Ionicons name=\"chatbubble-outline\" size={28} color=\"#666\"/>\n                    <Text style={styles.actionText}>{commentsCount}</Text>\n                </TouchableOpacity>\n            </View>\n\n\n        </View>);\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        maxWidth: 660,\n        width: Dimensions.get('window').width * 0.9, // height: Dimensions.get('window').height * 0.8,\n        marginVertical: 8,\n        borderRadius: 12,\n        shadowColor: '#000',\n        shadowOffset: {width: 0, height: 2},\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n        elevation: 3,\n    }, header: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        padding: 12,\n        borderBottomWidth: 1,\n        borderBottomColor: 'rgba(255,255,255,0.1)',\n    }, userInfo: {\n        flexDirection: 'row', alignItems: 'center',\n    }, avatar: {\n        marginRight: 12, borderWidth: 2, borderColor: '#fff',\n    }, username: {\n        color: '#fff', fontSize: 16, fontWeight: '600',\n    }, timestamp: {\n        color: '#aaa', fontSize: 12, marginTop: 2,\n    }, mediaScroll: {\n        width: '100%', padding: 0, alignSelf: 'center', flex: 1,\n    }, mediaScrollContent: {\n        flexDirection: 'row', padding: 0,\n    }, mediaContainer: {\n        alignItems: 'center', justifyContent: 'center', width: SCREEN_WIDTH, maxWidth: 660, // height: SCREEN_WIDTH,\n    }, media: {\n        width: SCREEN_WIDTH, height: SCREEN_WIDTH, maxWidth: 660, maxHeight: 660, overflow: \"hidden\",\n    }, pagination: {\n        position: 'absolute', bottom: 10, flexDirection: 'row', alignSelf: 'center',\n    }, dot: {\n        height: 8, width: 8, borderRadius: 4, margin: 4,\n    }, contentContainer: {\n        padding: 12,\n    }, content: {\n        color: '#fff', fontSize: 14, lineHeight: 20,\n    }, actions: {\n        flexDirection: 'row', padding: 12, borderTopWidth: 1, borderTopColor: 'rgba(255,255,255,0.1)',\n    }, actionButton: {\n        flexDirection: 'row', alignItems: 'center', marginRight: 20,\n    }, actionText: {\n        color: '#fff', marginLeft: 8, fontSize: 14,\n    }, tagsContainer: {\n        paddingHorizontal: 12, paddingBottom: 12,\n    }, tag: {\n        color: '#4CAF50', marginRight: 8, fontSize: 14,\n    },\n});\n\nexport default Post;","import React, {forwardRef} from 'react';\nimport {\n    View,\n    FlatList,\n    Text,\n    Dimensions, SafeAreaView,\n} from 'react-native';\nimport {styles} from '../styles/screens/FeedScreen';\nimport {FloatingButton} from '../components/FloatingButton';\nimport Database from '../database';\nimport Post from '../components/Post';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\n\nconst FeedScreen = forwardRef((props, ref) => {\n    class FeedScreenClass extends React.Component {\n        constructor(props) {\n            super(props);\n            this.state = {\n                data: [],\n                page: 1,\n                isLoading: false,\n                hasMore: true,\n                navigation: props.navigation,\n                currentScreen: props.currentScreen,\n            };\n            this.flatListRef = React.createRef();\n        }\n\n        componentDidMount() {\n            this.fetchData();\n        }\n\n        fetchData = async () => {\n            if (this.state.isLoading || !this.state.hasMore) return;\n\n            this.setState({ isLoading: true });\n            try {\n                const res = await Database.getAllPosts(this.state.page);\n                const newPosts = res.posts || [];\n\n                this.setState(prevState => ({\n                    data: prevState.page === 1 ? newPosts : [...prevState.data, ...newPosts],\n                    isLoading: false,\n                    hasMore: newPosts.length > 0\n                }));\n            } catch (error) {\n                console.error('Error fetching posts:', error);\n                if (error.message === \"{\\\"error\\\":\\\"Access denied, no valid Bearer token provided\\\"}\") {\n                    this.state.navigation.navigate('Login');\n                    await AsyncStorage.removeItem('token');\n                }\n                this.setState({ isLoading: false });\n            }\n        };\n\n        handleLoadMore = () => {\n            if (!this.state.isLoading && this.state.hasMore) {\n                this.setState(\n                    prevState => ({ page: prevState.page + 1 }),\n                    () => this.fetchData()\n                );\n            }\n        };\n\n        // Add this to debug scroll position\n        handleScroll = (event) => {\n            const { contentOffset, contentSize, layoutMeasurement } = event.nativeEvent;\n            const distanceFromBottom = contentSize.height - contentOffset.y - layoutMeasurement.height;\n        };\n\n        renderRow = ({ item }) => {\n            return (\n                <View style={{ minHeight: 50 }}> {/* Ensure items have minimum height */}\n                    <Post post={item} navigation={this.props.navigation} currentScreen={this.props.currentScreen} />\n                </View>\n            );\n        };\n\n        renderList = () => {\n            return (\n                <FlatList\n                    ref={this.flatListRef}\n                    data={this.state.data}\n                    renderItem={this.renderRow}\n                    keyExtractor={(item, index) => item.id ? item.id.toString() : index.toString()}\n                    onEndReached={this.handleLoadMore}\n                    onEndReachedThreshold={0.1}\n                    style={{ backgroundColor: \"#000\", flex: 1, alignSelf: 'center' }}\n                    onScroll={this.handleScroll} // Add scroll debugging\n                    ListFooterComponent={this.renderFooter}\n                    showsVerticalScrollIndicator={false} // Make scroll indicator visible for debugging\n                    contentContainerStyle={{ flexGrow: 1 }} // Ensure content takes up space\n                    extraData={this.state.page} // Force re-render on page change\n                />\n            );\n        };\n\n        renderFooter = () => {\n            if (!this.state.isLoading) return null;\n            return (\n                <View style={{ padding: 20 }}>\n                    <Text>Loading more posts...</Text>\n                </View>\n            );\n        };\n\n        renderEmpty = () => {\n            if (this.state.isLoading) return null;\n            return (\n                <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n                    <Text>No posts available</Text>\n                </View>\n            );\n        };\n\n        render() {\n            const { navigation } = this.props;\n            return (\n                <SafeAreaView style={[styles.container, { backgroundColor: \"#000\" }]}>\n                    {this.state.data.length === 0 ? this.renderEmpty() : this.renderList()}\n                    <FloatingButton\n                        onPress={() => navigation.navigate('CreatePost')}\n                        visible={true}\n                    />\n                </SafeAreaView>\n            );\n        }\n    }\n    const FeedScreenInstance = React.createRef();\n    React.useImperativeHandle(ref, () => ({\n        fetchData: () => FeedScreenInstance.current?.fetchData(),\n        listRef: FeedScreenInstance.current?.flatListRef,\n    }));\n\n    return <FeedScreenClass ref={FeedScreenInstance} {...props} />;\n})\nexport default FeedScreen;","import React, {forwardRef} from 'react';\nimport {\n    View,\n    FlatList,\n    Text,\n    Dimensions, SafeAreaView,\n} from 'react-native';\nimport {styles} from '../styles/screens/FeedScreen';\nimport {FloatingButton} from '../components/FloatingButton';\nimport Database from '../database';\nimport Post from '../components/Post';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\n\nconst FollowingScreen = forwardRef((props, ref) => {\n    class FollowingScreenClass extends React.Component {\n        constructor(props) {\n            super(props);\n            this.state = {\n                data: [],\n                page: 1,\n                isLoading: false,\n                hasMore: true,\n                navigation: props.navigation,\n                currentScreen: props.currentScreen,\n            };\n            this.flatListRef = React.createRef();\n        }\n\n        componentDidMount() {\n            this.fetchData();\n        }\n\n        fetchData = async () => {\n            if (this.state.isLoading || !this.state.hasMore) return;\n\n            this.setState({ isLoading: true });\n            try {\n                const res = await Database.getFollowingPosts(this.state.page);\n                const newPosts = res.posts || [];\n\n                this.setState(prevState => ({\n                    data: prevState.page === 1 ? newPosts : [...prevState.data, ...newPosts],\n                    isLoading: false,\n                    hasMore: newPosts.length > 0\n                }));\n            } catch (error) {\n                console.error('Error fetching posts:', error);\n                if (error.message === \"{\\\"error\\\":\\\"Access denied, no valid Bearer token provided\\\"}\") {\n                    this.state.navigation.navigate('Login');\n                    await AsyncStorage.removeItem('token');\n                }\n                this.setState({ isLoading: false });\n            }\n        };\n\n        handleLoadMore = () => {\n            if (!this.state.isLoading && this.state.hasMore) {\n                this.setState(\n                    prevState => ({ page: prevState.page + 1 }),\n                    () => this.fetchData()\n                );\n            }\n        };\n\n        // Add this to debug scroll position\n        handleScroll = (event) => {\n            const { contentOffset, contentSize, layoutMeasurement } = event.nativeEvent;\n            const distanceFromBottom = contentSize.height - contentOffset.y - layoutMeasurement.height;\n        };\n\n        renderRow = ({ item }) => {\n            return (\n                <View style={{ minHeight: 50 }}> {/* Ensure items have minimum height */}\n                    <Post post={item} navigation={this.props.navigation} currentScreen={this.props.currentScreen} />\n                </View>\n            );\n        };\n\n        renderList = () => {\n            return (\n                <FlatList\n                    ref={this.flatListRef}\n                    data={this.state.data}\n                    renderItem={this.renderRow}\n                    keyExtractor={(item, index) => item.id ? item.id.toString() : index.toString()}\n                    onEndReached={this.handleLoadMore}\n                    onEndReachedThreshold={0.1}\n                    style={{ backgroundColor: \"#000\", flex: 1, alignSelf: 'center' }}\n                    onScroll={this.handleScroll} // Add scroll debugging\n                    ListFooterComponent={this.renderFooter}\n                    showsVerticalScrollIndicator={false} // Make scroll indicator visible for debugging\n                    contentContainerStyle={{ flexGrow: 1 }} // Ensure content takes up space\n                    extraData={this.state.page} // Force re-render on page change\n                />\n            );\n        };\n\n        renderFooter = () => {\n            if (!this.state.isLoading) return null;\n            return (\n                <View style={{ padding: 20 }}>\n                    <Text>Loading more posts...</Text>\n                </View>\n            );\n        };\n\n        renderEmpty = () => {\n            if (this.state.isLoading) return null;\n            return (\n                <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n                    <Text>No posts available</Text>\n                </View>\n            );\n        };\n\n        render() {\n            const { navigation } = this.props;\n            return (\n                <View style={[styles.container, { backgroundColor: \"#000\" }]}>\n                    {this.state.data.length === 0 ? this.renderEmpty() : this.renderList()}\n                </View>\n            );\n        }\n    }\n    const FollowingScreenInstance = React.createRef();\n    React.useImperativeHandle(ref, () => ({\n        fetchData: () => FollowingScreenInstance.current?.fetchData(),\n        listRef: FollowingScreenInstance.current?.flatListRef,\n    }));\n\n    return <FollowingScreenClass ref={FollowingScreenInstance} {...props} />;\n})\nexport default FollowingScreen;","// screens/ProfileSettingsScreen.js\n\nimport { StyleSheet } from 'react-native'; // Ensure StyleSheet is included\n\nexport const styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    alignItems: 'center',\n  },\n  header: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  menuItem: {\n    padding: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc',\n    width: '100%',\n  },\n});","// components/ProfileModal.js\nimport { StyleSheet } from 'react-native';\n\n\nexport const styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    borderTopLeftRadius: 10,\n    borderTopRightRadius: 10,\n    maxHeight: '50%',\n  },\n  closeButton: {\n    alignSelf: 'flex-end',\n    padding: 10,\n  },\n  header: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  menuItem: {\n    padding: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc',\n  },\n  image: {\n    width: 100,\n    height: 100,\n    alignSelf: 'center',\n  }\n});","// components/ProfileModal.js\n\nimport React, {useEffect, useState} from 'react';\nimport {Text, TouchableOpacity, SafeAreaView, TextInput, Alert, Platform, Image} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport Database from '../database';\nimport {styles} from '../styles/components/ProfileModal';\nimport * as ImagePicker from \"expo-image-picker\";\nimport database from \"../database\";\nimport {Avatar} from \"react-native-elements\";\n\nexport default function ProfileModal({navigation}) {\n    const theme = useSelector((state) => state.theme);\n    const [editMode, setEditMode] = useState(false);\n    const [imageEditMode, setImageEditMode] = useState(false);\n    const [media, setMedia] = useState([]);\n    const [username, setUsername] = useState('');\n    const [user, setUser] = useState({});\n\n    useEffect(() => {\n        fetchUser();\n    }, []);\n\n    const fetchUser = async () => {\n        const userid = await Database.getUsername(setUsername);\n        const use = await database.getUser(userid);\n        setUser(use);\n        setMedia([{uri: use.pic}]);\n        console.log(use);\n    }\n\n    const handleEditProfile = async () => {\n        if (editMode) {\n            if (username.length > 1) {\n                const newUser = await Database.changeUsername(username);\n                alert('Profile Updated', `Username saved as: ${newUser.displayedName}`);\n\n            } else {\n                alert(\"Invalid length\");\n                useEffect(() => {\n                    Database.getUsername(setUsername);\n                }, []);\n            }\n        }\n        setEditMode(!editMode);\n    };\n\n    const handleLogout = async () => {\n        if (Platform.OS === \"web\") {\n            try {\n                await Database.logout();\n                await navigation.navigate('Login');\n\n            } catch (err) {\n                console.error('Logout error:', err);\n            }\n        } else {\n            Alert.alert(\n                'Logout',\n                'Are you sure you want to logout?',\n                [\n                    {text: 'Cancel', style: 'cancel'},\n                    {\n                        text: 'Yes', onPress: async () => {\n                            try {\n                                await Database.logout();\n                                onClose();\n                            } catch (err) {\n                                console.error('Logout error:', err);\n                            }\n                        }\n                    },\n                ]\n            );\n        }\n    };\n\n    const handleImageChange = async () => {\n        console.log(media);\n        if (imageEditMode) {\n            const mediaWithBase64 = await Promise.all(\n                media.map(async (item, index) => {\n                    const response = await fetch(item.uri);\n                    const blob = await response.blob();\n                    const base64 = await new Promise((resolve) => {\n                        const reader = new FileReader();\n                        reader.onloadend = () => resolve(reader.result.split(',')[1]);\n                        reader.readAsDataURL(blob);\n                    });\n                    const extension = item.mimeType?.split('/')[1] || 'jpg';\n                    const fileName = `${item.type}-${Date.now()}-${index}.${extension}`;\n                    return {\n                        name: fileName,\n                        type: 'image/jpeg',\n                        base64: base64,\n                    };\n                })\n            );\n            const payload = {\n                image: mediaWithBase64,\n            }\n            const res = await Database.changeImage(payload);\n            console.log(res);\n            setImageEditMode(false);\n        } else {\n            await pickMedia();\n        }\n\n    }\n\n    const pickMedia = async () => {\n        setImageEditMode(true);\n        const result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsMultipleSelection: false,\n            quality: 0.7,\n            allowsEditing: true,\n        });\n\n        if (!result.canceled) {\n            const newMedia = result.assets.map((asset) => ({\n                uri: asset.uri,\n                type: 'image',\n                mimeType: asset.mimeType || (asset.type === 'image/jpeg'),\n            }));\n            console.log(newMedia);\n            setMedia(newMedia);\n        }\n    };\n\n    return (\n        <SafeAreaView style={[styles.container, {backgroundColor: theme.colors.background}]}>\n            <Text style={[styles.header, {color: '#fff', fontSize: 18}]}>\n                Profile\n            </Text>\n            <Avatar rounded\n                    source={{uri: media.length > 0 ? media[0].uri : media.uri}}\n                    style={styles.image}/>\n\n            {editMode ? (\n                <TextInput\n                    value={username}\n                    onChangeText={setUsername}\n                    style={{\n                        borderWidth: 1,\n                        padding: 10,\n                        marginBottom: 20,\n                        color: '#fff',\n                        borderColor: '#ccc',\n                        width: '100%',\n                    }}\n                />\n            ) : (\n                <Text style={{color: '#fff', marginBottom: 20}}>\n                    Username: {username}\n                </Text>\n            )}\n            <TouchableOpacity style={styles.menuItem} onPress={handleEditProfile}>\n                <Text style={{color: '#fff'}}>\n                    {editMode ? 'Save Profile' : 'Edit Profile'}\n                </Text>\n            </TouchableOpacity>\n            <TouchableOpacity onPress={handleImageChange} style={styles.menuItem}>\n                <Text style={{color: \"#fff\"}}>\n                    {imageEditMode ? \"Upload Picture\" : \"Choose Profile Pic\"}\n                </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n                style={styles.menuItem}\n                onPress={() => {\n                    navigation.navigate('Settings');\n                    onClose();\n                }}\n            >\n                <Text style={{color: '#fff'}}>Settings</Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={styles.menuItem} onPress={handleLogout}>\n                <Text style={{color: '#fff'}}>Logout</Text>\n            </TouchableOpacity>\n        </SafeAreaView>\n    );\n}","// screens/ProfileSettingsScreen.js\n\nimport React from 'react';\nimport { View, Text, TouchableOpacity } from 'react-native'; // Ensure StyleSheet is included\nimport { useSelector } from 'react-redux';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { styles } from '../styles/screens/ProfileScreen';\nimport ProfileModal from '../components/ProfileModal';\nimport {Menu} from \"../MainNavigator\";\n\nexport default function ProfileSettingsScreen({navigation}) {\n  const { current, colors } = useSelector((state) => state.theme);\n  const theme = colors[current];\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.background }]}>\n      <Menu navigation={navigation} header={true}/>\n      <ProfileModal navigation={navigation} />\n    </View>\n  );\n}","import React, {useRef, useState, useCallback, useEffect} from 'react';\nimport {\n    View, Dimensions, Button, TouchableOpacity, FlatList, Text, Pressable, SafeAreaView,\n} from 'react-native';\nimport Modal from 'react-native-modal';\nimport FeedScreen from './screens/FeedScreen';\nimport FollowingScreen from './screens/FollowingScreen';\nimport ProfileSettingsScreen from './screens/ProfileSettingsScreen';\n\nconst screens = [{key: 'Feed', component: FeedScreen, title: 'Feed'}, {\n    key: 'Following', component: FollowingScreen, title: 'Following'\n}];\n\nexport function Menu({navigation, header, scrollToPage, activeScreen, setActiveScreen}) {\n    const [showMenu, setShowMenu] = useState(false);\n\n    const openMenu = () => setShowMenu(true);\n    const closeMenu = () => setShowMenu(false);\n\n    const handleNavigation = useCallback((screenName, index) => {\n        setActiveScreen(screenName);\n        scrollToPage(index);\n    }, [scrollToPage, setActiveScreen]);\n\n    return (<View>\n        <Modal\n            testID={'modal'}\n            deviceHeight={Dimensions.get('window').height}\n            deviceWidth={Dimensions.get('window').width}\n            animationIn=\"slideInLeft\"\n            animationOut=\"slideOutLeft\"\n            transparent\n            isVisible={showMenu}\n            onRequestClose={closeMenu}\n            style={{\n                width: Dimensions.get('window').width,\n                height: Dimensions.get('window').height,\n                flexDirection: 'row',\n                margin: 0,\n            }}\n        >\n            <SafeAreaView\n                style={{\n                    backgroundColor: '#000',\n                    width: Dimensions.get('window').width * 0.3,\n                    height: Dimensions.get('window').height,\n                    flexDirection: 'column',\n                }}\n            >\n                <View style={{flex: 3}}>\n                    <TouchableOpacity\n                        onPress={() => {\n                            closeMenu();\n                        }}\n                        style={{\n                            marginTop: 5,\n                            borderRadius: 5,\n                            backgroundColor: '#222',\n                            height: 30,\n                            width: Dimensions.get('window').width * 0.3,\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                            maxWidth: 200,\n                            alignSelf: 'center',\n                        }}\n                    >\n                        <Text style={{color: '#FFF'}}>\n                            Close\n                        </Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        onPress={() => {\n                            closeMenu();\n                            navigation.navigate('Main');\n                            navigation.navigate('ProfileSettings');\n                        }}\n                        style={{\n                            marginTop: 5,\n                            borderRadius: 5,\n                            backgroundColor: '#111',\n                            height: 50,\n                            width: Dimensions.get('window').width * 0.3,\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                            alignSelf: 'center',\n                            maxWidth: 200\n                        }}\n                    >\n                        <Text style={{color: '#fff'}}>Settings</Text>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity\n                        onPress={() => {\n                            closeMenu();\n                            navigation.navigate('Main');\n                            navigation.navigate('Profile');\n                        }}\n                        style={{\n                            marginTop: 5,\n                            borderRadius: 5,\n                            backgroundColor: '#111',\n                            height: 50,\n                            width: Dimensions.get('window').width * 0.3,\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                            alignSelf: 'center',\n                            maxWidth: 200\n                        }}\n                    >\n                        <Text style={{color: '#fff'}}>Profile</Text>\n                    </TouchableOpacity>\n                </View>\n                <View style={{flex: 10}}></View>\n                <View style={{flex: 1, alignSelf: 'center', alignItems: 'center'}}>\n                    <Text style={{color: '#FFF'}}>\n                        SigmaLTD community\n                    </Text>\n                    <Text style={{color: '#555'}}>\n                        We trust in you\n                    </Text>\n                </View>\n\n            </SafeAreaView>\n            <TouchableOpacity\n                style={{\n                    width: Dimensions.get('window').width * 0.7, height: Dimensions.get('window').height,\n                }}\n                onPress={closeMenu}\n            />\n        </Modal>\n        <View style={{flexDirection: 'row', backgroundColor: '#000', width: Dimensions.get('window').width}}>\n\n            {header ? <>\n                <Pressable\n                    style={{\n                        flex: 2, alignItems: 'center', alignSelf: 'center', justifyContent: 'center',\n                    }}\n                    onPress={openMenu}\n                >\n                    <Text style={{fontSize: 30, color: \"#FFF\", fontWeight: \"bold\"}}>Σ</Text>\n                </Pressable>\n                <View\n                    style={{\n                        flex: 20, alignItems: 'center', alignSelf: 'center', justifyContent: 'center',\n                    }}/>\n                <TouchableOpacity onPress={navigation.goBack}\n                                  style={{flex: 2, justifyContent: 'center', alignItems: 'center', marginRight: 5}}>\n                    <Text style={{color: \"#FFF\"}}>Close</Text>\n                </TouchableOpacity>\n\n            </> : <>\n                <Pressable\n                    style={{\n                        flex: 2, alignItems: 'center', alignSelf: 'center', justifyContent: 'center',\n                    }}\n                    onPress={openMenu}\n                >\n                    <Text style={{fontSize: 30, color: \"#FFF\", fontWeight: \"bold\"}}>Σ</Text>\n                </Pressable>\n                <TouchableOpacity\n                    style={{\n                        flex: 10, alignItems: 'center', justifyContent: 'center',\n                    }}\n                    onPress={() => handleNavigation('Feed', 0)}\n                >\n                    <Text\n                        style={{\n                            fontSize: activeScreen === 'Feed' ? 20 : 16,\n                            fontWeight: activeScreen === 'Feed' ? 'bold' : 'normal',\n                            color: \"#FFF\"\n                        }}\n                    >\n                        Feed\n                    </Text>\n                </TouchableOpacity><TouchableOpacity\n                style={{\n                    flex: 10, alignItems: 'center', justifyContent: 'center',\n                }}\n                onPress={() => handleNavigation('Following', 1)}\n            >\n                <Text\n                    style={{\n                        fontSize: activeScreen === 'Following' ? 20 : 16,\n                        fontWeight: activeScreen === 'Following' ? 'bold' : 'normal',\n                        color: \"#FFF\"\n                    }}\n                >\n                    Following\n                </Text>\n            </TouchableOpacity>\n                <View\n                    style={{\n                        flex: 2, alignItems: 'center', alignSelf: 'center', justifyContent: 'center',\n                    }}/></>}\n        </View>\n    </View>);\n}\n\nfunction MainNavigator({navigation}) {\n    const flatListRef = useRef(null);\n    const [activeScreen, setActiveScreen] = useState('Feed');\n    const refList = [];\n    useEffect(() => {\n        navigation.addListener('focus', () => {\n            setActiveScreen('Feed');\n        })\n    })\n\n    const scrollToPage = useCallback((index) => {\n        if (flatListRef.current) {\n            flatListRef.current.scrollToIndex({\n                animated: true, index,\n            });\n        }\n    }, []);\n\n    const getItemLayout = useCallback((data, index) => ({\n        length: Dimensions.get('window').width, offset: Dimensions.get('window').width * index, index,\n    }), []);\n\n    const onScrollToIndexFailed = useCallback((info) => {\n        console.warn('Scroll to index failed:', info);\n        const wait = new Promise((resolve) => setTimeout(resolve, 500));\n        wait.then(() => {\n            flatListRef.current?.scrollToIndex({\n                index: info.index, animated: true,\n            });\n        });\n    }, []);\n\n    const setActiveScreenRef = useRef(setActiveScreen);\n    setActiveScreenRef.current = setActiveScreen;\n\n    const onViewableItemsChanged = useRef(({viewableItems}) => {\n        if (viewableItems.length > 0) {\n            const visibleScreen = viewableItems[0].item;\n            setActiveScreenRef.current(visibleScreen.key);\n        }\n    }).current;\n\n    const viewabilityConfig = useRef({\n        itemVisiblePercentThreshold: 50,\n    }).current;\n\n\n    return (<SafeAreaView style={{flex: 1}}>\n        <Menu\n            navigation={navigation}\n            scrollToPage={scrollToPage}\n            activeScreen={activeScreen}\n            setActiveScreen={setActiveScreen}\n        />\n        <FlatList\n            ref={flatListRef}\n            data={screens}\n            horizontal\n            pagingEnabled\n            showsHorizontalScrollIndicator={false}\n            renderItem={({item}) => (<View\n                style={{\n                    width: Dimensions.get('window').width, height: Dimensions.get('window').height,\n                }}\n            >\n                <item.component\n                    navigation={navigation}\n                    currentScreen={activeScreen === item.key}\n                    setActiveScreen={setActiveScreen}// Pass currentScreen prop\n                />\n            </View>)}\n            keyExtractor={(item) => item.key}\n            getItemLayout={getItemLayout}\n            onScrollToIndexFailed={onScrollToIndexFailed}\n            initialNumToRender={1}\n            maxToRenderPerBatch={1}\n            windowSize={2}\n            onViewableItemsChanged={onViewableItemsChanged}\n            viewabilityConfig={viewabilityConfig}\n        />\n    </SafeAreaView>);\n}\n\nexport default MainNavigator;","// components/Comment.js\n\nimport React, {useEffect, useState} from 'react';\nimport {View, Text, TouchableOpacity, Image, StyleSheet} from 'react-native';\n\nimport Database, {BASE_URL} from '../database';\n\nexport default function Comment({ comment, currentUser, toggleLike }) {\n\tconst isMine = comment.createdByIdUser === currentUser.idUser;\n\tconst [likes, setLikes] = useState([]);\n\tconst [likedByMe , setLikedByMe] = useState(false);\n\tuseEffect(() => {\n\t\tgetLikes();\n\t})\n\tconst getLikes = async () => {\n\t\tconst data = await Database.getCommentLikes(Number(comment.idComment));\n\t\tsetLikes(data);\n\t\tlet tested = true;\n\t\tdata.forEach((item) => {\n\t\t\tif (item.idUser === currentUser.idUser){\n\t\t\t\tsetLikedByMe(true);\n\t\t\t\ttested = false;\n\t\t\t}\n\t\t})\n\t\tif (tested) {\n\t\t\tsetLikedByMe(false);\n\t\t}\n\t}\n\n\treturn (\n\t\t<View\n\t\t\tstyle={[\n\t\t\t\tstyles.commentBubble,\n\t\t\t\tisMine ? styles.myComment : styles.otherComment,\n\t\t\t]}\n\t\t>\n\t\t\t<Text style={styles.author}>{comment.displayedName}</Text>\n\t\t\t<Text style={styles.commentText}>{comment.text}</Text>\n\n\t\t\t{comment.images?.map((src, i) => (\n\t\t\t\t<Image\n\t\t\t\t\tkey={i}\n\t\t\t\t\tsource={{uri: BASE_URL + src}}\n\t\t\t\t\tstyle={{width: 200, height: 200, marginTop: 6, borderRadius: 8}}\n\t\t\t\t\tresizeMode=\"cover\"\n\t\t\t\t/>\n\t\t\t))}\n\n\t\t\t<TouchableOpacity onPress={() => toggleLike(comment)}>\n\t\t\t\t<Text style={{color: likedByMe ? 'red' : '#555'}}>\n\t\t\t\t\t❤️ {likes.length || 0}\n\t\t\t\t</Text>\n\t\t\t</TouchableOpacity>\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: '#fff',\n\t},\n\tcentered: {\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t},\n\tcommentsContainer: {\n\t\tpadding: 12,\n\t},\n\tcommentBubble: {\n\t\tmarginBottom: 10,\n\t\tpadding: 12,\n\t\tborderRadius: 12,\n\t\tmaxWidth: '90%',\n\t},\n\tmyComment: {\n\t\talignSelf: 'flex-end',\n\t\tbackgroundColor: '#d0f0c0',\n\t},\n\totherComment: {\n\t\talignSelf: 'flex-start',\n\t\tbackgroundColor: '#e6e6e6',\n\t},\n\tauthor: {\n\t\tfontWeight: 'bold',\n\t\tcolor: '#333',\n\t\tmarginBottom: 4,\n\t},\n\tcommentText: {\n\t\tcolor: '#000',\n\t\tfontSize: 15,\n\t\tmarginBottom: 4,\n\t},\n\tinputContainer: {\n\t\tflexDirection: 'row',\n\t\tpadding: 10,\n\t\tborderTopWidth: 1,\n\t\tborderColor: '#ccc',\n\t\tbackgroundColor: '#f9f9f9',\n\t\talignItems: 'center',\n\t\tflexWrap: 'wrap',\n\t},\n\ttextInput: {\n\t\tflex: 1,\n\t\tborderColor: '#ccc',\n\t\tborderWidth: 1,\n\t\tborderRadius: 10,\n\t\tpaddingHorizontal: 12,\n\t\tpaddingVertical: 8,\n\t\tmarginRight: 10,\n\t\tfontSize: 15,\n\t\tbackgroundColor: '#fff',\n\t\tcolor: '#000',\n\t},\n});\n","import React, { useEffect, useState, useRef } from 'react';\nimport {\n    View,\n    TextInput,\n    FlatList,\n    Button,\n    Text,\n    Image,\n    ActivityIndicator,\n    Platform,\n    StyleSheet,\n    KeyboardAvoidingView,\n    Switch, Dimensions,\n} from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport { useSelector } from 'react-redux';\nimport Database, { BASE_URL } from '../database';\nimport { Menu } from '../MainNavigator';\nimport Comment from '../components/Comment';\n\nexport default function PostDetailScreen({ route }) {\n    const { current, colors } = useSelector((state) => state.theme) || {\n        current: 'light',\n        colors: { light: { text: '#000', background: '#FFF' } },\n    };\n    const theme = colors[current] || { text: '#000', background: '#FFF' };\n\n    const [post, setPost] = useState(null);\n    const [comments, setComments] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [newComment, setNewComment] = useState('');\n    const [isAnonymous, setIsAnonymous] = useState(false);\n    const [selectedImages, setSelectedImages] = useState([]);\n    const [currentUser, setCurrentUser] = useState(null);\n    const flatListRef = useRef(null);\n\n    // Fetch initial data\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const postData = await Database.getPost(route.params.postId);\n                const loadedComments = await Database.getPostComments(route.params.postId);\n                const currentUse = await Database.getCurrentUser();\n                setPost(postData);\n                setComments(loadedComments);\n                setCurrentUser(currentUse);\n            } catch (err) {\n                console.error('❌ Ошибка загрузки:', err);\n            } finally {\n                setLoading(false);\n            }\n        };\n        fetchData();\n    }, [route.params.postId]);\n\n    // Scroll to end when comments update\n    useEffect(() => {\n        if (comments.length > 0) {\n            flatListRef.current?.scrollToEnd({ animated: true });\n        }\n    }, [comments.length]);\n\n    // Poll for new comments\n    useEffect(() => {\n        const interval = setInterval(async () => {\n            const loadedComments = await Database.getPostComments(route.params.postId);\n            setComments(loadedComments);\n        }, 1000);\n        return () => clearInterval(interval);\n    }, [route.params.postId]);\n\n    const pickImage = async () => {\n        const result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            quality: 0.7,\n            base64: true,\n        });\n\n        if (!result.canceled) {\n            const asset = result.assets?.[0];\n            if (!asset || !asset.base64) return;\n\n            const fullDataUri = `data:image/jpeg;base64,${asset.base64}`;\n            setSelectedImages([{ uri: fullDataUri }]);\n        }\n    };\n\n    const sendComment = async () => {\n        const content = newComment.trim();\n        if (!content && selectedImages.length === 0) return;\n\n        try {\n            const imageBase64 = selectedImages[0]?.uri || null;\n\n            const newC = await Database.addCommentBase64({\n                postId: post.idPost || post.id,\n                content,\n                isAnonymous: isAnonymous,\n                imageBase64,\n            });\n\n            setComments((prev) => [...prev, newC]);\n            setNewComment('');\n            setSelectedImages([]);\n        } catch (err) {\n            console.error('❌ Ошибка отправки комментария:', err);\n        }\n    };\n\n    const toggleLike = async (item) => {\n        try {\n            const updatedComments = [...comments];\n            const index = updatedComments.findIndex((c) => c.idComment === item.idComment);\n            if (index === -1) return;\n\n            const current = updatedComments[index];\n            if (current.likedByMe) {\n                await Database.unlikeComment(current.idComment);\n                current.likes = Number(current.likes) - 1;\n                current.likedByMe = false;\n            } else {\n                await Database.likeComment(current.idComment);\n                current.likes = Number(current.likes) + 1;\n                current.likedByMe = true;\n            }\n\n            setComments(updatedComments);\n        } catch (err) {\n            console.error('❌ Ошибка лайка:', err);\n        }\n    };\n\n    if (loading) {\n        return (\n            <View style={[styles.container, styles.centered]}>\n                <ActivityIndicator size=\"large\" color={theme.text} />\n            </View>\n        );\n    }\n\n    const Wrapper = Platform.OS === 'ios' ? KeyboardAvoidingView : View;\n\n    return (\n        <Wrapper\n            style={styles.container}\n            behavior={Platform.OS === 'ios' ? 'padding' : undefined}\n            keyboardVerticalOffset={Platform.OS === 'ios' ? 100 : 0}\n        >\n            <Menu navigation={route.params.navigation} header={true} />\n            <FlatList\n                ref={flatListRef}\n                data={comments}\n                keyExtractor={(item, index) => `${item.idComment || index}`}\n                renderItem={({ item }) => (\n                    <Comment comment={item} currentUser={currentUser} toggleLike={toggleLike} />\n                )}\n                style={styles.mediaScroll}\n                contentContainerStyle={{ paddingBottom: 20, maxHeight: Dimensions.get('window').height * 0.9 }}\n                ListEmptyComponent={<Text style={styles.emptyText}>No comments yet.</Text>}\n            />\n            {selectedImages.length > 0 && (\n                <View style={{ flexDirection: 'row', flexWrap: 'wrap', padding: 8 }}>\n                    {selectedImages.map((img, i) => (\n                        <Image\n                            key={i}\n                            source={{ uri: img.uri }}\n                            style={{ width: 80, height: 80, margin: 4, borderRadius: 8 }}\n                        />\n                    ))}\n                </View>\n            )}\n            <View style={styles.inputContainer}>\n                <TextInput\n                    value={newComment}\n                    onChangeText={setNewComment}\n                    style={styles.textInput}\n                    placeholder=\"Ваш комментарий...\"\n                    placeholderTextColor=\"#888\"\n                />\n                <Text>Анонимно?</Text>\n                <Switch\n                    value={isAnonymous}\n                    onValueChange={setIsAnonymous}\n                    style={{ marginHorizontal: 10 }}\n                />\n                <Button title=\"Медиа\" onPress={pickImage} />\n                <Button title=\"Отправить\" onPress={sendComment} />\n            </View>\n        </Wrapper>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        maxWidth: Dimensions.get('screen').width,\n        maxHeight: Dimensions.get('screen').height,\n    },\n    centered: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    mediaScroll: {\n        flex: 1,\n    },\n    inputContainer: {\n        flexDirection: 'row',\n        padding: 10,\n        marginBottom: 20,\n        borderTopWidth: 1,\n        borderColor: '#ccc',\n        backgroundColor: '#f9f9f9',\n        alignItems: 'center',\n    },\n    textInput: {\n        flex: 1,\n        borderColor: '#ccc',\n        borderWidth: 1,\n        borderRadius: 10,\n        paddingHorizontal: 12,\n        paddingVertical: 8,\n        marginRight: 10,\n        fontSize: 15,\n        backgroundColor: '#fff',\n        color: '#000',\n    },\n    emptyText: {\n        textAlign: 'center',\n        padding: 20,\n        color: '#888',\n    },\n});","import { Dimensions, StyleSheet } from 'react-native';\n\nexport const styles = StyleSheet.create({\n  container: { flex: 1, padding: 10 },\n  title: { fontSize: 24, fontWeight: 'bold', marginBottom: 10 },\n  input: { borderWidth: 1, padding: 10, marginBottom: 10, borderRadius: 5 },\n  previewImage: { width: 100, height: 100, marginRight: 10, marginBottom: 10 },\n  error: { color: 'red', marginBottom: 10 },\n  postList: { marginTop: 10 },\n  post: { marginBottom: 10 },\n  postImage: {\n    width: '100%',\n    height: Dimensions.get('window').width * 0.9,\n    borderRadius: 5,\n  },\n});","import {\n\tView,\n\tText,\n\tTextInput,\n\tButton,\n\tImage,\n\tFlatList,\n\tTouchableOpacity,\n\tScrollView,\n\tKeyboardAvoidingView,\n} from 'react-native';\nimport { useSelector } from 'react-redux';\nimport * as ImagePicker from 'expo-image-picker';\nimport { useRef, useState } from 'react';\nimport Database from '../database';\nimport { styles } from '../styles/components/CreatePost';\n\nexport function CreatePost({ navigation }) {\n\tconst [content, setContent] = useState('');\n\tconst [posts, setPosts] = useState([]);\n\tconst { current, colors } = useSelector((state) => state.theme);\n\tconst theme = colors[current];\n\tconst [media, setMedia] = useState([]);\n\tconst [inputs, setInputs] = useState(['']); // Dynamic tags inputs\n\tconst [error, setError] = useState(null);\n\tconst [showReadMore, setShowReadMore] = useState(false);\n\tconst [isExpanded, setIsExpanded] = useState(false);\n\tconst textInputRef = useRef(null);\n\tconst [inputHeight, setInputHeight] = useState(0);\n\tconst [contentHeight, setContentHeight] = useState(0);\n\tconst scrollViewRef = useRef(null);\n\tconst [isDisabled, setDisabled] = useState(false);\n\n\tconst handleInputChange = (index, value) => {\n\t\tconst newInputs = [...inputs];\n\t\tnewInputs[index] = value;\n\t\tsetInputs(newInputs);\n\t};\n\n\tconst addInput = () => {\n\t\tif (inputs.length < 4) {\n\t\t\tsetInputs([...inputs, '']);\n\t\t}\n\t};\n\n\tconst handleReadMore = () => {\n\t\tsetIsExpanded(true);\n\t\tsetShowReadMore(false);\n\t\tsetTimeout(() => {\n\t\t\tscrollViewRef.current?.scrollToEnd({ animated: true });\n\t\t}, 100);\n\t};\n\n\tconst handleReadLess = () => {\n\t\tsetIsExpanded(false);\n\t\tsetShowReadMore(contentHeight > inputHeight);\n\t};\n\n\tconst handleKeyDown = (e) => {\n\t\tif (e.key === 'Enter' && !e.shiftKey) {\n\t\t\te.preventDefault();\n\t\t}\n\t};\n\n\tconst pickMedia = async () => {\n\t\tconst result = await ImagePicker.launchImageLibraryAsync({\n\t\t\tmediaTypes: ImagePicker.MediaTypeOptions.All,\n\t\t\tallowsMultipleSelection: true,\n\t\t\tquality: 0.7,\n\t\t\tallowsEditing: true,\n\t\t});\n\n\t\tif (!result.canceled) {\n\t\t\tconst newMedia = result.assets.map((asset) => ({\n\t\t\t\turi: asset.uri,\n\t\t\t\ttype: asset.type === 'video' ? 'video' : 'image',\n\t\t\t\tmimeType: asset.mimeType || (asset.type === 'image' ? 'image/jpeg' : 'video/mp4'),\n\t\t\t}));\n\t\t\tsetMedia([...media, ...newMedia]);\n\t\t}\n\t};\n\n\tconst submitPost = async (isAnonymous = false) => {\n\t\tsetDisabled(true);\n\t\tif (!content.trim() && media.length === 0) {\n\t\t\tsetError('Content or media is required');\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\t// Use the dynamic inputs array instead of the old tags string\n\t\t\tconst tagArray = inputs\n\t\t\t\t.filter(tag => tag.trim()) // Remove empty tags\n\t\t\t\t.map(tag => tag.trim());\n\n\t\t\tconst mediaWithBase64 = await Promise.all(\n\t\t\t\tmedia.map(async (item, index) => {\n\t\t\t\t\tconst response = await fetch(item.uri);\n\t\t\t\t\tconst blob = await response.blob();\n\t\t\t\t\tconst base64 = await new Promise((resolve) => {\n\t\t\t\t\t\tconst reader = new FileReader();\n\t\t\t\t\t\treader.onloadend = () => resolve(reader.result.split(',')[1]);\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t});\n\t\t\t\t\tconst extension = item.mimeType?.split('/')[1] || 'jpg';\n\t\t\t\t\tconst fileName = `${item.type}-${Date.now()}-${index}.${extension}`;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: fileName,\n\t\t\t\t\t\ttype: item.mimeType || 'application/octet-stream',\n\t\t\t\t\t\tbase64: base64,\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tconst payload = {\n\t\t\t\tcontent: content.trim() || '',\n\t\t\t\ttags: tagArray.join(','), // Join tags with commas for the payload\n\t\t\t\tisAnonymous: isAnonymous,\n\t\t\t\timages: mediaWithBase64,\n\t\t\t};\n\n\t\t\tconst newPost = await Database.addPost(payload);\n\n\t\t\tsetPosts([newPost, ...posts]);\n\t\t\tsetContent('');\n\t\t\tsetMedia([]);\n\t\t\tsetInputs(['']); // Reset to one empty input\n\t\t\tsetError(null);\n\t\t\tnavigation.navigate('Main');\n\n\t\t\treturn newPost;\n\t\t} catch (err) {\n\t\t\tconst errorMessage = err.message || 'Failed to submit post';\n\t\t\tsetError(errorMessage);\n\t\t\tconsole.error('Error submitting post:', err);\n\t\t}\n\t};\n\n\tconst uriToBlob = async (uri) => {\n\t\tconst response = await fetch(uri);\n\t\tconst blob = await response.blob();\n\t\treturn blob;\n\t};\n\n\treturn (\n\t\t<KeyboardAvoidingView\n\t\t\tbehavior=\"padding\"\n\t\t\tstyle={{ flex: 1 }}\n\t\t\tkeyboardVerticalOffset={20}\n\t\t>\n\t\t\t<ScrollView\n\t\t\t\tref={scrollViewRef}\n\t\t\t\tstyle={{ flex: 1, backgroundColor: 'black' }}\n\t\t\t\tcontentContainerStyle={{\n\t\t\t\t\tflexGrow: 1,\n\t\t\t\t\tpadding: 10,\n\t\t\t\t\tpaddingBottom: 100,\n\t\t\t\t}}\n\t\t\t\tkeyboardShouldPersistTaps=\"handled\"\n\t\t\t\tscrollEnabled={true}\n\t\t\t>\n\t\t\t\t<View>\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tref={textInputRef}\n\t\t\t\t\t\tstyle={[\n\t\t\t\t\t\t\tstyles.input,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tborderColor: theme.border,\n\t\t\t\t\t\t\t\tcolor: theme.text,\n\t\t\t\t\t\t\t\theight: isExpanded ? contentHeight : 80,\n\t\t\t\t\t\t\t\tminHeight: 80,\n\t\t\t\t\t\t\t\tborderRadius: 20,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tplaceholder=\"What's on your mind?\"\n\t\t\t\t\t\tvalue={content}\n\t\t\t\t\t\tonChangeText={(NewText) => {\n\t\t\t\t\t\t\tif (NewText.length <= 10000) {\n\t\t\t\t\t\t\t\tsetContent(NewText);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonContentSizeChange={(e) => {\n\t\t\t\t\t\t\tconst newContentHeight = e.nativeEvent.contentSize.height;\n\t\t\t\t\t\t\tsetContentHeight(newContentHeight);\n\t\t\t\t\t\t\tif (!isExpanded) {\n\t\t\t\t\t\t\t\tsetShowReadMore(newContentHeight > inputHeight);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonLayout={(e) => {\n\t\t\t\t\t\t\tif (!isExpanded) {\n\t\t\t\t\t\t\t\tsetInputHeight(e.nativeEvent.layout.height);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tplaceholderTextColor={theme.text === '#000' ? '#666' : '#ccc'}\n\t\t\t\t\t\tnumberOfLines={3}\n\t\t\t\t\t\tmultiline={true}\n\t\t\t\t\t\tscrollEnabled={true}\n\t\t\t\t\t/>\n\t\t\t\t\t{showReadMore && !isExpanded && (\n\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\tonPress={handleReadMore}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tmarginTop: 5,\n\t\t\t\t\t\t\t\tpadding: 5,\n\t\t\t\t\t\t\t\talignSelf: 'flex-start',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tcolor: theme.text === '#000' ? '#0066cc' : '#4da8ff',\n\t\t\t\t\t\t\t\t\tfontSize: 14,\n\t\t\t\t\t\t\t\t\tfontWeight: '500',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tRead More\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t)}\n\t\t\t\t\t{isExpanded && (\n\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\tonPress={handleReadLess}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tmarginTop: 5,\n\t\t\t\t\t\t\t\tpadding: 5,\n\t\t\t\t\t\t\t\talignSelf: 'flex-start',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tcolor: theme.text === '#000' ? '#0066cc' : '#4da8ff',\n\t\t\t\t\t\t\t\t\tfontSize: 14,\n\t\t\t\t\t\t\t\t\tfontWeight: '500',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tRead Less\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t)}\n\t\t\t\t\t{/* Dynamic Tags Inputs */}\n\t\t\t\t\t{inputs.map((input, index) => (\n\t\t\t\t\t\t<View\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t\t\tmarginBottom: 10,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\tstyle={[\n\t\t\t\t\t\t\t\t\tstyles.input,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tborderColor: theme.border,\n\t\t\t\t\t\t\t\t\t\tcolor: theme.text,\n\t\t\t\t\t\t\t\t\t\tflex: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\tplaceholder={`Tag ${index + 1}`}\n\t\t\t\t\t\t\t\tvalue={input}\n\t\t\t\t\t\t\t\tonChangeText={(value) => handleInputChange(index, value)}\n\t\t\t\t\t\t\t\tplaceholderTextColor={theme.text === '#000' ? '#666' : '#ccc'}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{index === inputs.length - 1 && inputs.length < 4 && (\n\t\t\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\t\t\tonPress={addInput}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tmarginLeft: 10,\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: '#4CAF50',\n\t\t\t\t\t\t\t\t\t\tpadding: 10,\n\t\t\t\t\t\t\t\t\t\tborderRadius: 5,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Text style={{ color: 'white', fontSize: 16 }}>+</Text>\n\t\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</View>\n\t\t\t\t\t))}\n\t\t\t\t\t{media.length > 0 && (\n\t\t\t\t\t\t<FlatList\n\t\t\t\t\t\t\tdata={media}\n\t\t\t\t\t\t\trenderItem={({ item }) => (\n\t\t\t\t\t\t\t\t<Image source={{ uri: item.uri }} style={styles.previewImage} />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tkeyExtractor={(item, index) => index.toString()}\n\t\t\t\t\t\t\thorizontal\n\t\t\t\t\t\t\tpagingEnabled\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<Button title=\"Pick Media\" onPress={pickMedia} />\n\t\t\t\t\t<Button title=\"Post\" disabled={isDisabled} onPress={() => submitPost(false)} />\n\t\t\t\t\t<Button title=\"Anon Post\" disabled={isDisabled} onPress={() => submitPost(true)} />\n\t\t\t\t</View>\n\t\t\t</ScrollView>\n\t\t</KeyboardAvoidingView>\n\t);\n}","import {SafeAreaView} from \"react-native\";\nimport {CreatePost} from \"../components/CreatePost\";\nimport {Menu} from \"../MainNavigator\";\nimport React from \"react\";\n\n\nexport const CreatePostScreen = ({navigation}) => {\n    return (\n        <SafeAreaView style={{backgroundColor: \"#000\", flex: 1}}>\n            <Menu navigation={navigation} header={true}/>\n            <CreatePost navigation={navigation} />\n        </SafeAreaView>\n    );\n}","import React, {useEffect, useRef, useState} from \"react\";\nimport {StyleSheet, View, Text, Animated} from \"react-native\";\n\nexport default function SplashScreen({navigation}) {\n    const slideAnim = useRef(new Animated.Value(0)).current;\n    useEffect(() => {\n        Animated.loop(\n            Animated.sequence([\n                Animated.timing(slideAnim, {\n                    toValue: 1,\n                    duration: 500,\n                    useNativeDriver: true,\n                }),\n                Animated.timing(slideAnim, {\n                    toValue: 0.5,\n                    duration: 500,\n                    useNativeDriver: true,\n                })\n            ]),\n            {iterations: -1} // Infinite loop\n        ).start();\n\n        const timer = setTimeout(() => {\n            navigation.replace('Main');\n        }, 2000);\n\n        return () => clearTimeout(timer);\n    }, [slideAnim, navigation]);\n\n    return (\n        <View style={styles.container}>\n            <Animated.Image style={[styles.image, {opacity: slideAnim}]} source={require('../public/logo-rb.png')} />\n            <Text style={styles.text}>Open beta now!</Text>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#000000',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    image: {\n        alignSelf: 'center',\n        alignItems: 'center',\n        width: 100,\n        height: 100,\n        marginBottom: 20,\n\n    },\n    text: {\n        fontWeight: 'bold',\n        color: '#222',\n        fontSize: 18,\n        marginBottom: 20,\n        alignSelf: 'center',\n        alignItems: 'center',\n    }\n});","// screens/ProfileSettingsScreen.js\n\nimport React, {useEffect, useState} from 'react';\nimport {View, Text, TouchableOpacity} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport {styles} from '../styles/screens/ProfileScreen';\nimport {Menu} from \"../MainNavigator\";\nimport Database from \"../database\";\n\nexport default function ProfileScreen({navigation}) {\n    const {current, colors} = useSelector((state) => state.theme);\n    const theme = colors[current];\n    const [user, setUser] = useState({});\n\n    useEffect(() => {\n        Database.getCurrentUser()\n    })\n\n    return (\n        <View style={[styles.container, {backgroundColor: theme.background}]}>\n            <Menu navigation={navigation} header={true}/>\n            <Text style={[styles.header, {color: theme.text}]}>\n                Profile\n            </Text>\n            <Text style={{color: theme.text, marginBottom: 20}}>\n                Username: CurrentUser\n            </Text>\n        </View>\n    );\n}","import React, {useRef, useEffect, useState} from 'react';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport {GestureHandlerRootView} from 'react-native-gesture-handler';\nimport {Provider} from 'react-redux';\nimport {store} from './redux/store';\nimport SettingsScreen from './screens/SettingsScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport PostDetailScreen from './screens/CommentScreen';\nimport {CreatePostScreen} from './screens/CreatePostScreen';\nimport MainNavigator from './MainNavigator';\nimport SplashScreen from \"./screens/SplashScreen\";\nimport ProfileSettingsScreen from \"./screens/ProfileSettingsScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\n\nconst Stack = createStackNavigator();\n\n\nexport default function App() {\n    const navigationRef = useRef(null);\n\n    return (<Provider store={store}>\n        <GestureHandlerRootView style={{flex: 1}}>\n            <NavigationContainer ref={navigationRef}>\n                <Stack.Navigator initialRouteName=\"Splash\">\n\n                    <Stack.Screen\n                        name=\"Splash\"\n                        component={SplashScreen}\n                        options={{headerShown: false}}/>\n                    <Stack.Screen\n                        name=\"Login\"\n                        component={LoginScreen}\n                        options={{headerShown: false}}\n                    />\n                    <Stack.Screen\n                        name=\"Main\"\n                        component={MainNavigator}\n                        options={{headerShown: false}}\n                    />\n                    <Stack.Screen\n                        name={\"ProfileSettings\"}\n                        component={ProfileSettingsScreen}\n                        options={{headerShown: false}}/>\n                    <Stack.Screen\n                        name={\"Profile\"}\n                        component={ProfileScreen}\n                        options={{headerShown: false}}\n                    />\n                    <Stack.Screen\n                        name=\"Settings\"\n                        component={SettingsScreen}\n                        options={{headerShown: false}} // You can customize this\n                    />\n                    <Stack.Screen\n                        name=\"PostDetail\"\n                        component={PostDetailScreen}\n                        options={{headerShown: false}}\n                    />\n                    <Stack.Screen\n                        name=\"CreatePost\"\n                        component={CreatePostScreen}\n                        options={{headerShown: false}}\n                    />\n                </Stack.Navigator>\n            </NavigationContainer>\n        </GestureHandlerRootView>\n    </Provider>);\n}","// index.js\n\nimport { registerRootComponent, registerWebModule } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nif ('serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n        navigator.serviceWorker.register('service-worker.js');\n    });\n}\n\nregisterRootComponent(App);","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [316], () => (__webpack_require__(3811)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["initialThemeState","current","colors","light","background","text","border","dark","rootReducer","combineReducers","theme","themeReducer","state","action","type","Object","assign","payload","store","createStore","styles","StyleSheet","create","container","flex","padding","title","fontSize","fontWeight","marginBottom","subtitle","SettingsScreen","navigation","dispatch","useDispatch","useSelector","_jsxs","View","style","backgroundColor","children","_jsx","Text","color","Button","onPress","setTheme","marginTop","goBack","BASE_URL","API_URL","authHeaders","async","token","AsyncStorage","getItem","getToken","console","warn","Database","init","log","register","email","password","realName","group","displayedName","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","setItem","user","login","logout","removeItem","getCurrentUser","getUser","id","getUsername","setUsername","idUser","changeUsername","username","changeImage","addPost","responseText","error","parse","getAllPosts","page","getPost","postId","deletePost","getFollowingPosts","getAllComments","getPostComments","getPostCommentsCount","addComment","content","likePost","getLikePost","unlikePost","getCommentLikes","commentId","likeComment","unlikeComment","followTag","tagName","unfollowTag","getFollowedTags","addCommentBase64","isAnonymous","imageBase64","Authorization","justifyContent","textAlign","input","borderWidth","borderRadius","LoginScreen","isLogin","setIsLogin","useState","setEmail","setPassword","setRealName","setGroup","setDisplayedName","setError","showPrompt","setShowPrompt","useEffect","replace","check","isIOS","test","navigator","userAgent","window","MSStream","isSafari","isStandalone","standalone","TextInput","borderColor","placeholder","value","onChangeText","autoCapitalize","placeholderTextColor","secureTextEntry","_Fragment","length","alert","err","message","Modal","visible","alignItems","alignSelf","alignContent","width","previewImage","height","marginRight","postList","post","FloatingButton","slideAnim","useRef","Animated","Value","timing","toValue","duration","useNativeDriver","start","position","top","Dimensions","get","right","zIndex","transform","translateY","TouchableOpacity","Tag","tag","onRefresh","isFollowed","setIsFollowed","then","tags","includes","textAlignVertical","substring","SCREEN_WIDTH","maxWidth","marginVertical","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","header","flexDirection","borderBottomWidth","borderBottomColor","userInfo","avatar","timestamp","mediaScroll","mediaScrollContent","mediaContainer","media","maxHeight","overflow","pagination","bottom","dot","margin","contentContainer","lineHeight","actions","borderTopWidth","borderTopColor","actionButton","actionText","marginLeft","tagsContainer","paddingHorizontal","paddingBottom","Post","refresher","liked","setLiked","likedByCurrentUser","creator","setCreator","pic","myPost","setMyPost","isLoading","setIsLoading","currentIndex","setCurrentIndex","open","setOpen","flatListRef","commentsCount","setCommentsCount","urls","setUrls","setContent","mounted","me","Promise","all","createdByIdUser","likeStatus","Number","idPost","t","count","url1","match","temp","forEach","url","indexOf","fetchPostData","interval","setInterval","updateCommentsCount","clearInterval","ActivityIndicator","size","primary","mediaItems","Array","isArray","images","split","filter","Boolean","isVisible","Image","resizeMode","source","uri","require","Avatar","rounded","containerStyle","onLongPress","onPressOut","navigate","userId","Date","createdAt","toLocaleDateString","FlatList","slice","reverse","renderItem","item","horizontal","showsHorizontalScrollIndicator","keyExtractor","index","success","Ionicons","name","ScrollView","ref","pagingEnabled","scrollEventThrottle","onScroll","e","newIndex","Math","round","nativeEvent","contentOffset","x","contentContainerStyle","map","Video","shouldPlay","isLooping","useNativeControls","onError","_","i","Pressable","scrollTo","animated","renderUrl","href","target","likes","forwardRef","props","FeedScreenClass","React","constructor","super","this","hasMore","currentScreen","componentDidMount","fetchData","setState","newPosts","posts","prevState","handleLoadMore","handleScroll","event","contentSize","layoutMeasurement","y","renderRow","minHeight","renderList","toString","onEndReached","onEndReachedThreshold","ListFooterComponent","renderFooter","showsVerticalScrollIndicator","flexGrow","extraData","renderEmpty","render","SafeAreaView","FeedScreenInstance","listRef","FollowingScreenClass","FollowingScreenInstance","menuItem","borderTopLeftRadius","borderTopRightRadius","closeButton","image","ProfileModal","editMode","setEditMode","imageEditMode","setImageEditMode","setMedia","setUser","fetchUser","userid","use","database","pickMedia","result","ImagePicker","launchImageLibraryAsync","mediaTypes","Images","allowsMultipleSelection","quality","allowsEditing","canceled","newMedia","assets","asset","mimeType","newUser","blob","base64","resolve","reader","FileReader","onloadend","readAsDataURL","extension","now","res","onClose","ProfileSettingsScreen","Menu","screens","key","component","FeedScreen","FollowingScreen","scrollToPage","activeScreen","setActiveScreen","showMenu","setShowMenu","openMenu","closeMenu","handleNavigation","useCallback","screenName","testID","deviceHeight","deviceWidth","animationIn","animationOut","transparent","onRequestClose","addListener","scrollToIndex","getItemLayout","offset","onScrollToIndexFailed","info","setTimeout","setActiveScreenRef","onViewableItemsChanged","viewableItems","visibleScreen","viewabilityConfig","itemVisiblePercentThreshold","initialNumToRender","maxToRenderPerBatch","windowSize","Comment","comment","currentUser","toggleLike","isMine","setLikes","likedByMe","setLikedByMe","getLikes","idComment","tested","commentBubble","myComment","otherComment","author","commentText","src","centered","commentsContainer","inputContainer","flexWrap","textInput","paddingVertical","PostDetailScreen","route","setPost","comments","setComments","loading","setLoading","newComment","setNewComment","setIsAnonymous","selectedImages","setSelectedImages","setCurrentUser","postData","params","loadedComments","currentUse","scrollToEnd","updatedComments","findIndex","c","Wrapper","behavior","undefined","keyboardVerticalOffset","ListEmptyComponent","emptyText","img","Switch","onValueChange","marginHorizontal","fullDataUri","trim","newC","prev","postImage","CreatePost","setPosts","inputs","setInputs","showReadMore","setShowReadMore","isExpanded","setIsExpanded","textInputRef","inputHeight","setInputHeight","contentHeight","setContentHeight","scrollViewRef","isDisabled","setDisabled","addInput","submitPost","tagArray","mediaWithBase64","join","newPost","errorMessage","KeyboardAvoidingView","keyboardShouldPersistTaps","scrollEnabled","NewText","onContentSizeChange","newContentHeight","onLayout","layout","numberOfLines","multiline","handleReadMore","handleReadLess","handleInputChange","newInputs","All","disabled","CreatePostScreen","SplashScreen","loop","sequence","iterations","timer","clearTimeout","opacity","ProfileScreen","Stack","createStackNavigator","addEventListener","serviceWorker","registerRootComponent","navigationRef","Provider","GestureHandlerRootView","NavigationContainer","Navigator","initialRouteName","Screen","options","headerShown","MainNavigator","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}