{"version":3,"file":"static/js/main.21ed5363.js","mappings":"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","sources":["redux/store.js","styles/screens/SettingsScreen.js","screens/SettingsScreen.js","database.js","styles/screens/LoginScreen.js","screens/LoginScreen.js","styles/screens/FeedScreen.js","components/FloatingButton.js","components/Tag.js","components/Post.js","components/SuperScrollList.js","screens/FeedScreen.js","screens/FollowingScreen.js","styles/screens/ProfileScreen.js","styles/components/ProfileModal.js","components/ProfileModal.js","screens/ProfileSettingsScreen.js","MainNavigator.js","components/Comment.js","screens/CommentScreen.js","styles/components/CreatePost.js","components/CreatePost.js","screens/CreatePostScreen.js","screens/SplashScreen.js","screens/ProfileScreen.js","screens/StaticSystemMessageScreen.js","App.js","index.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["// redux/store.js\n\nimport { createStore, combineReducers } from 'redux';\n\n// Theme reducer\nconst initialThemeState = {\n  current: 'dark',\n  colors: {\n    light: { background: '#fff', text: '#000', border: '#ccc' },\n    dark: { background: '#000', text: '#fff', border: '#666' },\n  },\n};\n\nconst themeReducer = (state = initialThemeState, action) => {\n  switch (action.type) {\n    case 'SET_THEME':\n      return { ...state, current: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  theme: themeReducer,\n});\n\nexport const store = createStore(rootReducer);\n\nexport const setTheme = (theme) => ({\n  type: 'SET_THEME',\n  payload: theme,\n});","// screens/SettingsScreen.js\n\nimport { StyleSheet } from 'react-native'; // Ensure StyleSheet is included\n\n\nexport const styles = StyleSheet.create({\n  container: { flex: 1, padding: 20 },\n  title: { fontSize: 24, fontWeight: 'bold', marginBottom: 20 },\n  subtitle: { fontSize: 18, marginBottom: 10 },\n});","// screens/SettingsScreen.js\n\nimport React from 'react';\nimport { View, Text, Button } from 'react-native'; // Ensure StyleSheet is included\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setTheme } from '../redux/store';\nimport { styles } from '../styles/screens/SettingsScreen';\n\nexport default function SettingsScreen({ navigation }) {\n    const dispatch = useDispatch();\n    const { current, colors } = useSelector((state) => state.theme);\n    const theme = colors[current];\n\n    const handleThemeChange = (selectedTheme) => {\n        dispatch(setTheme(selectedTheme));\n    };\n\n    return (\n        <View style={[styles.container, { backgroundColor: theme.background }]}>\n            <Text style={[styles.title, { color: theme.text }]}>Settings</Text>\n            {/*<Text style={[styles.subtitle, { color: theme.text }]}>Choose Theme</Text>*/}\n            {/*<Button title=\"Light Theme\" onPress={() => handleThemeChange('light')} />*/}\n            <Button title=\"Dark Theme\" onPress={() => handleThemeChange('dark')} />\n            <Text style={{ color: theme.text, marginTop: 10 }}>\n                Current Theme: {current}\n            </Text>\n            <Button title=\"Go Back\" onPress={() => navigation.goBack()} />\n        </View>\n    );\n}","import AsyncStorage from \"@react-native-async-storage/async-storage\";\n\n// export const BASE_URL = 'https://www.sigmaltd.space';\nexport const BASE_URL = \"http://localhost:3000\";\nexport const API_URL = BASE_URL ; // + '/api';\n\n// Helper to get the token from AsyncStorage\nconst getToken = async () => {\n\treturn await AsyncStorage.getItem('token');\n};\n\n// Helper to add Authorization header with token\nconst authHeaders = async () => {\n\tconst token = await getToken();\n\n\tif (!token || token === 'undefined' || token === 'null') {\n\t\tconsole.warn('Token is empty or invalid:', token);\n\t\treturn { 'Content-Type': 'application/json' };\n\t}\n\n\treturn {\n\t\t'Authorization': `Bearer ${token}`,\n\t\t'Content-Type': 'application/json'\n\t};\n};\n\nconst Database = {\n\tinit: async () => {\n\t\tconsole.log('Database initialized (API mode with JWT)');\n\t},\n\n\tregister: async ({ email, password, realName, group, displayedName }) => {\n\t\tconst response = await fetch(`${API_URL}/register`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify({ email, password, realName, group, displayedName }),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\tconst data = await response.json();\n\t\tawait AsyncStorage.setItem('token', data.token); // Store token\n\t\treturn data.user; // Return user data\n\t},\n\n\tlogin: async ({ email, password }) => {\n\t\tconst response = await fetch(`${API_URL}/login`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify({ email, password }),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\tconst data = await response.json();\n\t\tawait AsyncStorage.setItem('token', data.token); // Store token\n\t\treturn data.user; // Return user data\n\t},\n\n\tlogout: async () => {\n\t\tawait AsyncStorage.removeItem('token'); // Remove token client-side\n\t\tconst response = await fetch(`${API_URL}/logout`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tgetCurrentUser: async () => {\n\t\tconst response = await fetch(`${API_URL}/current-user`, {\n\t\t\theaders: await authHeaders(),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tgetUser: async (id, full) => {\n\t\tconst response = await fetch(`${API_URL}/user/${id}?full=${full}`, {\n\t\t\theaders: await authHeaders(),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tgetUsername: async (setUsername) => {\n\t\tconst user = await Database.getCurrentUser();\n\t\tsetUsername && setUsername(user.displayedName);\n\t\treturn user.idUser;\n\t},\n\t\n\tchangeUsername: async (username) => {\n\t\tconst response = await fetch(`${API_URL}/current-user`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: await authHeaders(),\n\t\t\tbody: JSON.stringify({ username }),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tchangeImage: async (payload) => {\n\t\tconst response = await fetch(`${API_URL}/current-user`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: await authHeaders(),\n\t\t\tbody: JSON.stringify(payload),\n\t\t})\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\taddPost: async (payload) => {\n\t\ttry {\n\t\t\tconst response = await fetch(`${API_URL}/posts`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: await authHeaders(),\n\t\t\t\tbody: JSON.stringify(payload),\n\n\t\t\t});\n\n\t\t\tconst responseText = await response.text();\n\n\t\t\tif (!response.ok) {\n\t\t\t\tconsole.error('Post error response:', responseText);\n\t\t\t\tthrow new Error(responseText || 'Failed to upload post');\n\t\t\t}\n\t\t\treturn JSON.parse(responseText);\n\t\t} catch (error) {\n\t\t\tconsole.error('Network error:', error);\n\t\t\tthrow error;\n\t\t}\n\t},\n\n\tgetAllPosts: async (page) => {\n\t\tconst response = await fetch(`${API_URL}/posts?page=${page}&pageSize=10`, {\n\t\t\theaders: await authHeaders(),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\n\t},\n\n\tgetPost: async (postId) => {\n\t\tconst response = await fetch(`${API_URL}/post/${postId}`, {\n\t\t\theaders: await authHeaders(),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tdeletePost: async (postId) => {\n\t\tconst response = await fetch(`${API_URL}/posts`, {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: await authHeaders(),\n\t\t\tbody: JSON.stringify({ postId: postId }),\n\t\t})\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tgetFollowingPosts: async (page) => {\n\t\tconst response = await fetch(`${API_URL}/following-posts?page=${page}&pageSize=10`, {\n\t\t\theaders: await authHeaders(),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\n\t},\n\n\tgetAllComments: async (page) => {\n\t\tconst response = await fetch(`${API_URL}/comments?page=${page}&pageSize=10`, {\n\t\t\theaders: await authHeaders(),\n\t\t})\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tgetPostComments: async (postId) => {\n\t\tconst response = await fetch(`${API_URL}/post/${postId}/comments`, {\n\t\t\theaders: await authHeaders(),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tgetPostCommentsCount: async (postId) => {\n\t\tconst response = await fetch(`${API_URL}/post/${postId}/comments-count`, {\n\t\t\theaders: await authHeaders(),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\taddComment: async ({ postId, content }) => {\n\t\tconst response = await fetch(`${API_URL}/comments`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: await authHeaders(),\n\t\t\tbody: JSON.stringify({ postId, content }),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tlikePost: async (postId) => {\n\t\tconst response = await fetch(`${API_URL}/like-post`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: await authHeaders(),\n\t\t\tbody: JSON.stringify({ postId }),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tgetLikePost: async (postId) => {\n\t\tconst response = await fetch(`${API_URL}/like-post?idPost=${postId}`, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: await authHeaders(),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tunlikePost: async (postId) => {\n\t\tconst response = await fetch(`${API_URL}/unlike-post`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: await authHeaders(),\n\t\t\tbody: JSON.stringify({ postId }),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tgetCommentLikes: async (commentId) => {\n\t\tconst response = await fetch(`${API_URL}/get-comment-likes`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: await authHeaders(),\n\t\t\tbody: JSON.stringify({ commentId }),\n\t\t})\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tlikeComment: async (commentId) => {\n\t\tconst response = await fetch(`${API_URL}/like-comment`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: await authHeaders(),\n\t\t\tbody: JSON.stringify({ commentId }),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tunlikeComment: async (commentId) => {\n\t\tconst response = await fetch(`${API_URL}/unlike-comment`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: await authHeaders(),\n\t\t\tbody: JSON.stringify({ commentId }),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tfollowTag: async (tagName) => {\n\t\tconst response = await fetch(`${API_URL}/follow-tag`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: await authHeaders(),\n\t\t\tbody: JSON.stringify({ tagName }),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tunfollowTag: async (tagName) => {\n\t\tconst response = await fetch(`${API_URL}/unfollow-tag`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: await authHeaders(),\n\t\t\tbody: JSON.stringify({ tagName }),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\tgetFollowedTags: async () => {\n\t\tconst response = await fetch(`${API_URL}/followed-tags`, {\n\t\t\theaders: await authHeaders(),\n\t\t});\n\t\tif (!response.ok) throw new Error(await response.text());\n\t\treturn await response.json();\n\t},\n\n\taddCommentBase64: async ({ postId, content, isAnonymous, imageBase64 }) => {\n\t\tconst token = await AsyncStorage.getItem('token');\n\n\t\tconst payload = {\n\t\t\tpostId,\n\t\t\tcontent,\n\t\t\tisAnonymous,\n\t\t\timageBase64,\n\t\t};\n\n\t\tconst response = await fetch(`${API_URL}/comments`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(payload),\n\t\t});\n\n\t\tif (!response.ok) {throw new Error(await response.text());}\n\n\t\tconst result = await response.json();\n\t\treturn result;\n\t},\n};\n\nDatabase.init();\n\nexport default Database;","// screens/LoginScreen.js\n\nimport { StyleSheet } from 'react-native'; // Ensure StyleSheet is included\n\n\nexport const styles = StyleSheet.create({\n  container: { flex: 1, justifyContent: 'center', padding: 20 },\n  title: { fontSize: 24, fontWeight: 'bold', textAlign: 'center', marginBottom: 20 },\n  input: { borderWidth: 1, padding: 10, marginBottom: 10, borderRadius: 5 },\n  error: { color: 'red', textAlign: 'center', marginBottom: 10 },\n});","// screens/LoginScreen.js\n\nimport React, {useState, useEffect} from 'react';\nimport {View, Text, TextInput, Button, Alert, Keyboard, Vibration, Platform} from 'react-native'; // Ensure StyleSheet is included\nimport {useSelector} from 'react-redux';\nimport Database from '../database';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {styles} from '../styles/screens/LoginScreen';\nimport Modal from \"react-native-modal\";\n\nexport default function LoginScreen({navigation}) {\n    const {current, colors} = useSelector((state) => state.theme);\n    const theme = colors[current];\n    const [isLogin, setIsLogin] = useState(true);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [realName, setRealName] = useState('');\n    const [group, setGroup] = useState('');\n    const [displayedName, setDisplayedName] = useState('');\n    const [error, setError] = useState(null);\n    const [showPrompt, setShowPrompt] = useState(false);\n\n    useEffect(() => {\n        async function check() {\n            const user = await AsyncStorage.getItem('token');\n            if (user) {\n                navigation.replace('Main');\n            }\n        }\n\n        check();\n        // Check if running on iOS in a browser (not standalone mode)\n        const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n        const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n        const isStandalone = \"standalone\" in window.navigator && window.navigator.standalone;\n\n        if (isIOS && isSafari && !isStandalone) {\n            setShowPrompt(true);\n        }\n    }, []);\n    ;\n    const handleSubmit = async () => {\n        setError(null);\n        try {\n            let user;\n            if (isLogin) {\n                user = await Database.login({email, password});\n            } else {\n                if ((password.length > 7) && (displayedName.length > 1)) {\n                    user = await Database.register({email, password, realName, group, displayedName});\n                } else {\n                    alert('Password or Displayed Name Too Short!');\n                }\n            }\n            navigation.replace('Main');\n        } catch (err) {\n            setError(err.message);\n            console.error('Auth error:', err.message);\n        }\n    };\n\n\n    return (\n        <View style={[styles.container, {backgroundColor: theme.background}]}>\n            <Text style={[styles.title, {color: theme.text}]}>\n                {isLogin ? 'Login' : 'Sign Up'}\n            </Text>\n            {error && <Text style={styles.error}>{error}</Text>}\n            <TextInput\n                style={[styles.input, {borderColor: theme.border, color: theme.text}]}\n                placeholder=\"Email\"\n                value={email}\n                onChangeText={setEmail}\n                autoCapitalize=\"none\"\n                placeholderTextColor={theme.text === '#000' ? '#666' : '#ccc'}\n            />\n            <TextInput\n                style={[styles.input, {borderColor: theme.border, color: theme.text}]}\n                placeholder=\"Password\"\n                value={password}\n                onChangeText={setPassword}\n                secureTextEntry\n                placeholderTextColor={theme.text === '#000' ? '#666' : '#ccc'}\n            />\n            {!isLogin && (\n                <>\n                    <TextInput\n                        style={[styles.input, {borderColor: theme.border, color: theme.text}]}\n                        placeholder=\"Real Name\"\n                        value={realName}\n                        onChangeText={setRealName}\n                        placeholderTextColor={theme.text === '#000' ? '#666' : '#ccc'}\n                    />\n                    <TextInput\n                        style={[styles.input, {borderColor: theme.border, color: theme.text}]}\n                        placeholder=\"Group (e.g., student)\"\n                        value={group}\n                        onChangeText={setGroup}\n                        placeholderTextColor={theme.text === '#000' ? '#666' : '#ccc'}\n                    />\n                    <TextInput\n                        style={[styles.input, {borderColor: theme.border, color: theme.text}]}\n                        placeholder=\"Displayed Name\"\n                        value={displayedName}\n                        onChangeText={setDisplayedName}\n                        placeholderTextColor={theme.text === '#000' ? '#666' : '#ccc'}\n                    />\n                </>\n            )}\n            <Button title={isLogin ? 'Login' : 'Sign Up'} onPress={handleSubmit}/>\n            <Button\n                title={`Switch to ${isLogin ? 'Sign Up' : 'Login'}`}\n                onPress={() => {\n                    setIsLogin(!isLogin);\n                    setError(null);\n                    setEmail('');\n                    setPassword('');\n                    setRealName('');\n                    setGroup('');\n                    setDisplayedName('');\n                }}\n            />\n            <Modal visible={showPrompt} style={{backgroundColor: \"#111\"}}>\n                <View style={{alignItems: 'center', alignSelf: 'center', alignContent: 'center'}}>\n                    <Text style={{color: \"#fff\", fontSize: 20, alignSelf: 'center', alignItems: 'center', alignContent: 'center', justifyContent: 'center'}}>\n                        Нажми на кнопку поделиться, потом выбери \"Add to Home Screen\" чтобы установить\n                    </Text>\n                    {/* Add an image or icon here */}\n                    <Button title=\"Got it\" onPress={() => setShowPrompt(false)} />\n                </View>\n            </Modal>\n        </View>\n    );\n}\n","import { Dimensions, StyleSheet } from 'react-native';\n\nexport const styles = StyleSheet.create({\n  container: { flex: 1, padding: 10, width: '100%' },\n  title: { fontSize: 24, fontWeight: 'bold', marginBottom: 10 },\n  input: { borderWidth: 1, padding: 10, marginBottom: 10, borderRadius: 5 },\n  previewImage: { width: 100, height: 100, marginRight: 10, marginBottom: 10 },\n  error: { color: 'red', marginBottom: 10 },\n  postList: { marginTop: 10},\n  post: { marginBottom: 10 },\n});","import React, {useEffect, useRef} from \"react\";\nimport {Animated, Dimensions, Platform, Text, TouchableOpacity} from \"react-native\";\n\nexport const FloatingButton = ({ onPress, visible }) => {\n    const slideAnim = useRef(new Animated.Value(0)).current;\n\n    useEffect(() => {\n        Animated.timing(slideAnim, {\n            toValue: visible ? 0 : 300,\n            duration: 500,\n            useNativeDriver: true,\n        }).start();\n    }, [visible, slideAnim]);\n\n    return (\n        <Animated.View\n            style={{\n                position: 'absolute',\n                top: Platform.OS === 'web' ? Dimensions.get('window').height * 0.85 : '80%',\n                right: Platform.OS === 'web' ? Dimensions.get('window').width * 0.02 : '3%',\n                zIndex: 999,\n                transform: [{ translateY: slideAnim }],\n            }}\n        >\n            <TouchableOpacity\n                style={{\n                    backgroundColor: '#000',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    padding: 10,\n                    borderRadius: 50,\n                    width: 60,\n                    height: 60,\n                }}\n                onPress={onPress}\n            >\n                <Text style={{ fontSize: 30, color: '#FFF' }}>σ</Text>\n            </TouchableOpacity>\n        </Animated.View>\n    );\n};\n","// components/Tag.js\n\nimport React, { useState, useEffect } from 'react';\nimport { TouchableOpacity, Text } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport Database from '../database';\n\nexport default function Tag({ tag, onRefresh }) {\n  const theme = useSelector((state) => state.theme);\n  const [isFollowed, setIsFollowed] = useState(false);\n\n  useEffect(() => {\n    Database.getFollowedTags().then(tags => setIsFollowed(tags.includes(tag)));\n  }, [tag]);\n\n  const handleTagPress = async () => {\n    try {\n      if (isFollowed) {\n        await Database.unfollowTag(tag);\n      } else {\n        await Database.followTag(tag);\n      }\n      setIsFollowed(!isFollowed);\n      onRefresh(isFollowed);\n    } catch (err) {\n      console.error('Error toggling tag:', err);\n    }\n  };\n\n  return (\n    <TouchableOpacity onPress={handleTagPress} style={{\n      marginRight: 5,\n      backgroundColor: '#BBB',\n      borderRadius: 10,\n      padding: 5,\n      alignContent: \"center\",\n      height: \"100%\",\n    }}>\n      <Text style={{ \n        color: isFollowed ? theme.colors.text : '#888', \n        fontWeight: isFollowed ? 'bold' : 'normal',\n        textAlign: 'center',\n        textAlignVertical: 'center',\n        alignContent: 'center',\n        alignSelf: 'center',\n        alignItems: 'center',\n      }}>\n        {tag.substring(0, 20) || 'unknown'}\n      </Text>\n    </TouchableOpacity>\n  );\n}","import React, {useEffect, useState, useRef} from 'react';\nimport {\n    View,\n    Text,\n    FlatList,\n    TouchableOpacity,\n    ActivityIndicator,\n    Dimensions,\n    Image,\n    StyleSheet,\n    ScrollView,\n    Pressable,\n} from 'react-native';\nimport {Video} from 'react-native-video';\nimport {Avatar} from 'react-native-elements';\nimport {Ionicons} from '@expo/vector-icons';\nimport {useSelector} from 'react-redux';\nimport Database, {BASE_URL} from '../database';\nimport Tag from \"./Tag\";\nimport Modal from \"react-native-modal\";\n\nconst {width: SCREEN_WIDTH} = Dimensions.get('window');\n\nfunction findURLs(text) {\n    // Regular expression for matching URLs\n    const urlPattern = /(https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*))/gi;\n\n    // Find all matches in the text\n    const urls = text.match(urlPattern) || [];\n\n    return urls;\n}\n\nconst Post = ({navigation, post, refresher}) => {\n    const theme = useSelector((state) => state.theme);\n    const [liked, setLiked] = useState(post.likedByCurrentUser || false);\n    const [creator, setCreator] = useState({displayedName: 'Loading...', pic: null});\n    const [myPost, setMyPost] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const [open, setOpen] = useState(false);\n    const flatListRef = useRef(null);\n    const [commentsCount, setCommentsCount] = useState(0);\n    const [urls, setUrls] = useState([]);\n    const [content, setContent] = useState('');\n\n    useEffect(() => {\n        let mounted = true;\n\n        const fetchPostData = async () => {\n            try {\n                setIsLoading(true);\n                const [user, me] = await Promise.all([Database.getUser(post.createdByIdUser), Database.getCurrentUser(),]);\n                console.log(user);\n                const likeStatus = await Database.getLikePost(Number(post.idPost));\n                setLiked(likeStatus);\n                if (mounted) {\n                    setCreator(user || {displayedName: 'Unknown', pic: null});\n                    setMyPost(me?.idUser === post.createdByIdUser);\n                }\n                const t = await Database.getPostCommentsCount(post.idPost);\n                setCommentsCount(t.count);\n                if (post.content) {\n                    const url1 = findURLs(post.content);\n                    setUrls(url1);\n                    let temp = post.content;\n                    url1.forEach(url => {\n                        temp = temp.replace(url, `(${urls.indexOf(url) + 2})`);\n                    })\n                    setContent(temp);\n                }\n            } catch (error) {\n                console.error('Error fetching post data:', error);\n            } finally {\n                if (mounted) setIsLoading(false);\n            }\n        };\n\n        fetchPostData();\n        return () => {\n            mounted = false;\n        };\n    }, [post.createdByIdUser, post.idPost]);\n\n    useEffect(() => {\n        const interval = setInterval(async () => {\n            await updateCommentsCount();\n        }, 1000)\n        return () => clearInterval(interval)\n    }, []);\n\n    const updateCommentsCount = async () => {\n        const t = await Database.getPostCommentsCount(post.idPost);\n        setCommentsCount(t.count);\n    }\n\n    const handleLike = async () => {\n        try {\n            if (liked) {\n                await Database.unlikePost(post.idPost);\n                setLiked(false);\n                post.likes--;\n            } else {\n                await Database.likePost(post.idPost);\n                setLiked(true);\n                post.likes++;\n            }\n        } catch (err) {\n            console.error('Error handling like:', err);\n        }\n    };\n\n    const deletePost = async () => {\n        if (!myPost) {\n            alert('You are not the creator');\n            return;\n        }\n\n        try {\n            const resp = await Database.deletePost(post.idPost);\n            if (resp.success) {\n                refresher();\n            }\n        } catch (error) {\n            console.error('Error deleting post:', error);\n            alert('Failed to delete post');\n        }\n    };\n\n    // const onViewableItemsChanged = useRef(({ viewableItems }) => {\n    //     if (viewableItems.length > 0) {\n    //         setCurrentIndex(viewableItems[0].index);\n    //     }\n    // }).current;\n\n    if (isLoading) {\n        return (<View style={styles.container}>\n                <ActivityIndicator size=\"large\" color={theme.colors.primary}/>\n            </View>);\n    }\n\n    const renderUrl = ({item}) => {\n        return (<View style={{width: 80, height: 25, backgroundColor: \"#222\", borderRadius: 5, alignSelf: 'center', alignItems: 'center'}}>\n                <a href={item} style={{color:\"#FFFFFF\"}} target=\"_blank\">{item.slice(8, 18)}</a>\n            </View>);\n    }\n\n    const mediaItems = Array.isArray(post.images) ? post.images : post.images?.split(',').filter(Boolean) || [];\n\n    return (<View style={[styles.container, {backgroundColor: theme.colors.background}]}>\n            <Modal isVisible={open}>\n                <Image\n                    style={{width: \"100%\", height: \"100%\", resizeMode: \"center\"}}\n                    source={creator.pic ? {uri: creator.pic} : require('../assets/default-avatar.png')}/>\n\n            </Modal>\n            {/* Header */}\n            <View style={styles.header}>\n                <View style={{flexDirection: 'row', alignItems: 'flex-start'}}>\n                    <Avatar\n                        source={creator.pic ? {uri: creator.pic} : require('../assets/default-avatar.png')}\n                        rounded\n                        size=\"medium\"\n                        containerStyle={styles.avatar}\n                        onLongPress={() => setOpen(true)}\n                        onPressOut={() => setOpen(false)}\n                    />\n                    <TouchableOpacity\n                        style={styles.userInfo}\n                        onPress={() => navigation.navigate('UserProfile', {userId: post.createdByIdUser})}\n                    >\n                        <View>\n                            <Text style={styles.username}>\n                                {post.isAnonymous ? 'Anonymous' : creator.displayedName}\n                            </Text>\n                            <Text style={styles.timestamp}>\n                                {new Date(post.createdAt).toLocaleDateString()}\n                            </Text>\n                        </View>\n\n                    </TouchableOpacity>\n                </View>\n                {/* Tags */}\n                {post.tags?.length > 0 && (<View style={styles.tagsContainer && {flex: 1}}>\n                        <FlatList\n                            style={{flexDirection: 'row-reverse'}}\n                            data={Array.isArray(post.tags) ? post.tags.slice(0, 4).reverse() : post.tags.split(',').slice(0, 4).reverse()}\n                            renderItem={({item}) => (<Tag tag={item}/>)}\n                            horizontal\n                            showsHorizontalScrollIndicator={false}\n                            keyExtractor={(item, index) => `${item}-${index}`}\n                        />\n                    </View>)}\n                {myPost && (<TouchableOpacity onPress={deletePost}>\n                        <Ionicons name=\"trash-outline\" size={24} color=\"#ff4444\"/>\n                    </TouchableOpacity>)}\n            </View>\n            {/* Content */}\n            {content && (<View style={styles.contentContainer}>\n                    <Text style={styles.content}>{content}</Text>\n                </View>)}\n            {}\n\n            {/* Media */}\n            {mediaItems.length > 0 && (<View>\n                    <ScrollView\n                        ref={flatListRef}\n                        horizontal\n                        pagingEnabled\n                        showsHorizontalScrollIndicator={false}\n                        scrollEventThrottle={1}\n                        onScroll={(e) => {\n                            const newIndex = Math.round((e.nativeEvent.contentOffset.x + 100) / SCREEN_WIDTH);\n                            setCurrentIndex(newIndex);\n                        }}\n                        style={styles.mediaScroll}\n                        contentContainerStyle={styles.mediaScrollContent}\n                    >\n                        {mediaItems.map((item, index) => (<View key={`${item}-${index}`} style={styles.mediaContainer}>\n                                {/\\.(mp4|mov|m4v)$/.test(item) ? (<Video\n                                        source={{uri: `${BASE_URL}${item}`}}\n                                        style={styles.media}\n                                        resizeMode=\"cover\"\n                                        shouldPlay={currentIndex === index}\n                                        isLooping\n                                        useNativeControls={false}\n                                        onError={(e) => console.error('Video error:', e)}\n                                    />) : (<Image\n                                        source={{uri: `${BASE_URL}${item}`}}\n                                        style={styles.media}\n                                        resizeMode=\"cover\"\n                                        onError={(e) => console.error('Image error:', e)}\n                                    />)}\n\n                            </View>))}\n                    </ScrollView>\n                    {mediaItems.length > 1 && (<View style={styles.pagination}>\n                            {mediaItems.map((_, i) => (<Pressable\n                                    key={i}\n                                    onPress={() => {\n                                        flatListRef.current?.scrollTo({x: i * SCREEN_WIDTH, animated: true});\n                                        setCurrentIndex(i);\n                                    }}\n                                    style={[styles.dot, {backgroundColor: i === currentIndex ? '#fff' : 'rgba(255,255,255,0.5)'},]}\n                                />))}\n                        </View>)}\n                </View>)}\n\n            {urls.length > 0 && (<View style={styles.actions}>\n                    <FlatList\n                        data={urls}\n                        renderItem={renderUrl}\n                        horizontal\n                        showsHorizontalScrollIndicator={false}\n                    />\n                </View>)}\n\n            {/* Actions */}\n            <View style={styles.actions}>\n                <TouchableOpacity onPress={handleLike} style={styles.actionButton}>\n                    <Ionicons\n                        name={liked ? 'heart' : 'heart-outline'}\n                        size={28}\n                        color={liked ? '#ff4444' : '#666'}\n                    />\n                    <Text style={styles.actionText}>{post.likes}</Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                    onPress={() => navigation.navigate('PostDetail', {postId: post.idPost, navigation: navigation})}\n                    style={styles.actionButton}\n                >\n                    <Ionicons name=\"chatbubble-outline\" size={28} color=\"#666\"/>\n                    <Text style={styles.actionText}>{commentsCount}</Text>\n                </TouchableOpacity>\n            </View>\n\n\n        </View>);\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        maxWidth: 660,\n        width: Dimensions.get('window').width * 0.9, // height: Dimensions.get('window').height * 0.8,\n        marginVertical: 8,\n        borderRadius: 12,\n        shadowColor: '#000',\n        shadowOffset: {width: 0, height: 2},\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n        elevation: 3,\n    }, header: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        padding: 12,\n        borderBottomWidth: 1,\n        borderBottomColor: 'rgba(255,255,255,0.1)',\n    }, userInfo: {\n        flexDirection: 'row', alignItems: 'center',\n    }, avatar: {\n        marginRight: 12, borderWidth: 2, borderColor: '#fff',\n    }, username: {\n        color: '#fff', fontSize: 16, fontWeight: '600',\n    }, timestamp: {\n        color: '#aaa', fontSize: 12, marginTop: 2,\n    }, mediaScroll: {\n        width: '100%', padding: 0, alignSelf: 'center', flex: 1,\n    }, mediaScrollContent: {\n        flexDirection: 'row', padding: 0,\n    }, mediaContainer: {\n        alignItems: 'center', justifyContent: 'center', width: SCREEN_WIDTH, maxWidth: 660, // height: SCREEN_WIDTH,\n    }, media: {\n        width: SCREEN_WIDTH, height: SCREEN_WIDTH, maxWidth: 660, maxHeight: 660, overflow: \"hidden\",\n    }, pagination: {\n        position: 'absolute', bottom: 10, flexDirection: 'row', alignSelf: 'center',\n    }, dot: {\n        height: 8, width: 8, borderRadius: 4, margin: 4,\n    }, contentContainer: {\n        padding: 12,\n    }, content: {\n        color: '#fff', fontSize: 14, lineHeight: 20,\n    }, actions: {\n        flexDirection: 'row', padding: 12, borderTopWidth: 1, borderTopColor: 'rgba(255,255,255,0.1)',\n    }, actionButton: {\n        flexDirection: 'row', alignItems: 'center', marginRight: 20,\n    }, actionText: {\n        color: '#fff', marginLeft: 8, fontSize: 14,\n    }, tagsContainer: {\n        paddingHorizontal: 12, paddingBottom: 12,\n    }, tag: {\n        color: '#4CAF50', marginRight: 8, fontSize: 14,\n    },\n});\n\nexport default Post;","import React from 'react';\nimport {\n    View,\n    FlatList,\n    Text,\n    SafeAreaView,\n} from 'react-native';\nimport {styles} from '../styles/screens/FeedScreen';\nimport {FloatingButton} from './FloatingButton';\nimport Post from './Post';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport default class SuperScrollList extends React.Component {\n    navigation = null;\n    loader = null;\n    constructor(props) {\n        super(props);\n        this.navigation = props.navigation;\n        this.loader = props.loader;\n        this.state = {\n            data: [],\n            page: 1,\n            isLoading: false,\n            hasMore: true,\n        };\n        this.flatListRef = React.createRef();\n    }\n\n    componentDidMount() {\n        (this.loader && this.fetchData().then(() => console.log(\"Fetched data!\")));\n    }\n\n    fetchData = async () => {\n        if (this.state.isLoading || !this.state.hasMore) return;\n\n        this.setState({isLoading: true});\n        try {\n            const res = await this.loader(this.state.page);\n            const newPosts = res.posts || [];\n\n            this.setState(prevState => ({\n                data: prevState.page === 1 ? newPosts : [...prevState.data, ...newPosts],\n                isLoading: false,\n                hasMore: newPosts.length > 0\n            }));\n        } catch (error) {\n            console.error('Error fetching posts:', error);\n            if (error.message === \"{\\\"error\\\":\\\"Access denied, no valid Bearer token provided\\\"}\") {\n                this.navigation.replace('Login');\n                await AsyncStorage.removeItem('token');\n            }\n            this.setState({isLoading: false});\n        }\n    };\n\n    handleLoadMore = () => {\n        if (!this.state.isLoading && this.state.hasMore) {\n            this.setState(\n                prevState => ({page: prevState.page + 1}),\n                () => this.fetchData()\n            );\n        }\n    };\n\n    // Add this to debug scroll position\n    handleScroll = (event) => {\n        const {contentOffset, contentSize, layoutMeasurement} = event.nativeEvent;\n        const distanceFromBottom = contentSize.height - contentOffset.y - layoutMeasurement.height;\n    };\n\n    renderRow = ({item}) => {\n        return (\n            <View style={{minHeight: 50}}> {/* Ensure items have minimum height */}\n                <Post post={item} navigation={this.navigation} />\n            </View>\n        );\n    };\n\n    renderList = () => {\n        return (\n            <FlatList\n                ref={this.flatListRef}\n                data={this.state.data}\n                renderItem={this.renderRow}\n                keyExtractor={(item, index) => item.id ? item.id.toString() : index.toString()}\n                onEndReached={this.handleLoadMore}\n                onEndReachedThreshold={0.1}\n                style={{backgroundColor: \"#000\", flex: 1, alignSelf: 'center'}}\n                onScroll={this.handleScroll} // Add scroll debugging\n                ListFooterComponent={this.renderFooter}\n                showsVerticalScrollIndicator={false} // Make scroll indicator visible for debugging\n                contentContainerStyle={{flexGrow: 1}} // Ensure content takes up space\n                extraData={this.state.page} // Force re-render on page change\n            />\n        );\n    };\n\n    renderFooter = () => {\n        if (!this.state.isLoading) return null;\n        return (\n            <View style={{padding: 20}}>\n                <Text>Loading more posts...</Text>\n            </View>\n        );\n    };\n\n    renderEmpty = () => {\n        if (this.state.isLoading) return null;\n        return (\n            <View style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n                <Text>No posts available</Text>\n            </View>\n        );\n    };\n\n    render() {\n        return (\n            <SafeAreaView style={[styles.container, {backgroundColor: \"#000\"}]}>\n                {this.state.data.length === 0 ? this.renderEmpty() : this.renderList()}\n                <FloatingButton\n                    onPress={() => this.navigation.navigate('CreatePost')}\n                    visible={true}\n                />\n            </SafeAreaView>\n        );\n    }\n}\n","import React from 'react';\nimport {SafeAreaView, View} from 'react-native';\nimport { styles } from '../styles/screens/FeedScreen';\nimport { FloatingButton } from '../components/FloatingButton';\nimport Database from '../database';\nimport SuperScrollList from \"../components/SuperScrollList\";\n\nexport default class FeedScreen extends React.Component {\n    navigation = null;\n    constructor(props) {\n        super(props);\n        this.navigation = props.navigation;\n        this.flatListRef = React.createRef();\n    }\n\n    render() {\n        return (\n            <SafeAreaView style={[styles.container, {backgroundColor: \"#000\"}]}>\n                <SuperScrollList navigation={this.navigation} loader={Database.getAllPosts}/>\n                <FloatingButton\n                    onPress={() => this.navigation.navigate('CreatePost')}\n                    visible={true}\n                />\n            </SafeAreaView>\n        );\n    }\n}\n","import React from 'react';\nimport {SafeAreaView, View} from 'react-native';\nimport { styles } from '../styles/screens/FeedScreen';\nimport Database from '../database';\nimport SuperScrollList from \"../components/SuperScrollList\";\n\nexport default class FollowingScreen extends React.Component {\n    navigation = null;\n    constructor(props) {\n        super(props);\n        this.navigation = props.navigation;\n        this.flatListRef = React.createRef();\n    }\n\n    render() {\n        return (\n            <SafeAreaView style={[styles.container, {backgroundColor: \"#000\"}]}>\n                <SuperScrollList navigation={this.navigation} loader={Database.getFollowingPosts}/>\n            </SafeAreaView>\n        );\n    }\n}\n","// screens/ProfileSettingsScreen.js\n\nimport { StyleSheet } from 'react-native'; // Ensure StyleSheet is included\n\nexport const styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    alignItems: 'center',\n  },\n  header: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  menuItem: {\n    padding: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc',\n    width: '100%',\n  },\n});","// components/ProfileModal.js\nimport { StyleSheet } from 'react-native';\n\n\nexport const styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    borderTopLeftRadius: 10,\n    borderTopRightRadius: 10,\n    maxHeight: '50%',\n  },\n  closeButton: {\n    alignSelf: 'flex-end',\n    padding: 10,\n  },\n  header: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  menuItem: {\n    padding: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc',\n  },\n  image: {\n    width: 100,\n    height: 100,\n    alignSelf: 'center',\n  }\n});","// components/ProfileModal.js\n\nimport React, {useEffect, useState} from 'react';\nimport {Text, TouchableOpacity, SafeAreaView, TextInput, Alert, Platform, Image} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport Database from '../database';\nimport {styles} from '../styles/components/ProfileModal';\nimport * as ImagePicker from \"expo-image-picker\";\nimport database from \"../database\";\nimport {Avatar} from \"react-native-elements\";\n\nexport default function ProfileModal({navigation}) {\n    const theme = useSelector((state) => state.theme);\n    const [editMode, setEditMode] = useState(false);\n    const [imageEditMode, setImageEditMode] = useState(false);\n    const [media, setMedia] = useState([]);\n    const [username, setUsername] = useState('');\n    const [user, setUser] = useState({});\n\n    useEffect(() => {\n        fetchUser();\n    }, []);\n\n    const fetchUser = async () => {\n        const userid = await Database.getUsername(setUsername);\n        const use = await database.getUser(userid);\n        setUser(use);\n        setMedia([{uri: use.pic}]);\n        console.log(use);\n    }\n\n    const handleEditProfile = async () => {\n        if (editMode) {\n            if (username.length > 1) {\n                const newUser = await Database.changeUsername(username);\n                alert('Profile Updated', `Username saved as: ${newUser.displayedName}`);\n\n            } else {\n                alert(\"Invalid length\");\n                useEffect(() => {\n                    Database.getUsername(setUsername);\n                }, []);\n            }\n        }\n        setEditMode(!editMode);\n    };\n\n    const handleLogout = async () => {\n        if (Platform.OS === \"web\") {\n            try {\n                await Database.logout();\n                await navigation.navigate('Login');\n\n            } catch (err) {\n                console.error('Logout error:', err);\n            }\n        } else {\n            Alert.alert(\n                'Logout',\n                'Are you sure you want to logout?',\n                [\n                    {text: 'Cancel', style: 'cancel'},\n                    {\n                        text: 'Yes', onPress: async () => {\n                            try {\n                                await Database.logout();\n                                onClose();\n                            } catch (err) {\n                                console.error('Logout error:', err);\n                            }\n                        }\n                    },\n                ]\n            );\n        }\n    };\n\n    const handleImageChange = async () => {\n        console.log(media);\n        if (imageEditMode) {\n            const mediaWithBase64 = await Promise.all(\n                media.map(async (item, index) => {\n                    const response = await fetch(item.uri);\n                    const blob = await response.blob();\n                    const base64 = await new Promise((resolve) => {\n                        const reader = new FileReader();\n                        reader.onloadend = () => resolve(reader.result.split(',')[1]);\n                        reader.readAsDataURL(blob);\n                    });\n                    const extension = item.mimeType?.split('/')[1] || 'jpg';\n                    const fileName = `${item.type}-${Date.now()}-${index}.${extension}`;\n                    return {\n                        name: fileName,\n                        type: 'image/jpeg',\n                        base64: base64,\n                    };\n                })\n            );\n            const payload = {\n                image: mediaWithBase64,\n            }\n            const res = await Database.changeImage(payload);\n            console.log(res);\n            setImageEditMode(false);\n        } else {\n            await pickMedia();\n        }\n\n    }\n\n    const pickMedia = async () => {\n        setImageEditMode(true);\n        const result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsMultipleSelection: false,\n            quality: 0.7,\n            allowsEditing: true,\n        });\n\n        if (!result.canceled) {\n            const newMedia = result.assets.map((asset) => ({\n                uri: asset.uri,\n                type: 'image',\n                mimeType: asset.mimeType || (asset.type === 'image/jpeg'),\n            }));\n            console.log(newMedia);\n            setMedia(newMedia);\n        }\n    };\n\n    return (\n        <SafeAreaView style={[styles.container, {backgroundColor: theme.colors.background}]}>\n            <Text style={[styles.header, {color: '#fff', fontSize: 18}]}>\n                Profile\n            </Text>\n            <Avatar rounded\n                    source={{uri: media.length > 0 ? media[0].uri : media.uri}}\n                    style={styles.image}/>\n\n            {editMode ? (\n                <TextInput\n                    value={username}\n                    onChangeText={setUsername}\n                    style={{\n                        borderWidth: 1,\n                        padding: 10,\n                        marginBottom: 20,\n                        color: '#fff',\n                        borderColor: '#ccc',\n                        width: '100%',\n                    }}\n                />\n            ) : (\n                <Text style={{color: '#fff', marginBottom: 20}}>\n                    Username: {username}\n                </Text>\n            )}\n            <TouchableOpacity style={styles.menuItem} onPress={handleEditProfile}>\n                <Text style={{color: '#fff'}}>\n                    {editMode ? 'Save Profile' : 'Edit Profile'}\n                </Text>\n            </TouchableOpacity>\n            <TouchableOpacity onPress={handleImageChange} style={styles.menuItem}>\n                <Text style={{color: \"#fff\"}}>\n                    {imageEditMode ? \"Upload Picture\" : \"Choose Profile Pic\"}\n                </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n                style={styles.menuItem}\n                onPress={() => {\n                    navigation.navigate('Settings');\n                    onClose();\n                }}\n            >\n                <Text style={{color: '#fff'}}>Settings</Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={styles.menuItem} onPress={handleLogout}>\n                <Text style={{color: '#fff'}}>Logout</Text>\n            </TouchableOpacity>\n        </SafeAreaView>\n    );\n}","// screens/ProfileSettingsScreen.js\n\nimport React from 'react';\nimport { View, Text, TouchableOpacity } from 'react-native'; // Ensure StyleSheet is included\nimport { useSelector } from 'react-redux';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { styles } from '../styles/screens/ProfileScreen';\nimport ProfileModal from '../components/ProfileModal';\nimport {Menu} from \"../MainNavigator\";\n\nexport default function ProfileSettingsScreen({navigation}) {\n  const { current, colors } = useSelector((state) => state.theme);\n  const theme = colors[current];\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.background }]}>\n      <Menu navigation={navigation} header={true}/>\n      <ProfileModal navigation={navigation} />\n    </View>\n  );\n}","import React, {useRef, useState, useCallback, useEffect} from 'react';\nimport {\n    View, Dimensions, Button, TouchableOpacity, FlatList, Text, Pressable, SafeAreaView,\n} from 'react-native';\nimport Modal from 'react-native-modal';\nimport FeedScreen from './screens/FeedScreen';\nimport FollowingScreen from './screens/FollowingScreen';\nimport ProfileSettingsScreen from './screens/ProfileSettingsScreen';\nimport Database from \"./database\";\n\nconst screens = [{key: 'Feed', component: FeedScreen, title: 'Feed'}, {\n    key: 'Following', component: FollowingScreen, title: 'Following'\n}];\n\nexport function Menu({navigation, header, scrollToPage, activeScreen, setActiveScreen}) {\n    const [showMenu, setShowMenu] = useState(false);\n\n    const openMenu = () => setShowMenu(true);\n    const closeMenu = () => setShowMenu(false);\n\n    const handleNavigation = useCallback((screenName, index) => {\n        setActiveScreen(screenName);\n        scrollToPage(index);\n    }, [scrollToPage, setActiveScreen]);\n\n    return (<View>\n        <Modal\n            testID={'modal'}\n            deviceHeight={Dimensions.get('window').height}\n            deviceWidth={Dimensions.get('window').width}\n            animationIn=\"slideInLeft\"\n            animationOut=\"slideOutLeft\"\n            transparent\n            isVisible={showMenu}\n            onRequestClose={closeMenu}\n            style={{\n                width: Dimensions.get('window').width,\n                height: Dimensions.get('window').height,\n                flexDirection: 'row',\n                margin: 0,\n            }}\n        >\n            <SafeAreaView\n                style={{\n                    backgroundColor: '#000',\n                    width: Dimensions.get('window').width * 0.3,\n                    height: Dimensions.get('window').height,\n                    flexDirection: 'column',\n                }}\n            >\n                <View style={{flex: 3}}>\n                    <TouchableOpacity\n                        onPress={() => {\n                            closeMenu();\n                        }}\n                        style={{\n                            marginTop: 5,\n                            borderRadius: 5,\n                            backgroundColor: '#222',\n                            height: 30,\n                            width: Dimensions.get('window').width * 0.3,\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                            maxWidth: 200,\n                            alignSelf: 'center',\n                        }}\n                    >\n                        <Text style={{color: '#FFF'}}>\n                            Close\n                        </Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        onPress={() => {\n                            closeMenu();\n                            navigation.navigate('Main');\n                            navigation.navigate('ProfileSettings');\n                        }}\n                        style={{\n                            marginTop: 5,\n                            borderRadius: 5,\n                            backgroundColor: '#111',\n                            height: 50,\n                            width: Dimensions.get('window').width * 0.3,\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                            alignSelf: 'center',\n                            maxWidth: 200\n                        }}\n                    >\n                        <Text style={{color: '#fff'}}>Settings</Text>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity\n                        onPress={() => {\n                            closeMenu();\n                            navigation.navigate('Main');\n                            navigation.navigate('Profile');\n                        }}\n                        style={{\n                            marginTop: 5,\n                            borderRadius: 5,\n                            backgroundColor: '#111',\n                            height: 50,\n                            width: Dimensions.get('window').width * 0.3,\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                            alignSelf: 'center',\n                            maxWidth: 200\n                        }}\n                    >\n                        <Text style={{color: '#fff'}}>Profile</Text>\n                    </TouchableOpacity>\n                </View>\n                <View style={{flex: 10}}></View>\n                <View style={{flex: 1, alignSelf: 'center', alignItems: 'center'}}>\n                    <Text style={{color: '#FFF'}}>\n                        SigmaLTD community\n                    </Text>\n                    <Text style={{color: '#555'}}>\n                        We trust in you\n                    </Text>\n                </View>\n\n            </SafeAreaView>\n            <TouchableOpacity\n                style={{\n                    width: Dimensions.get('window').width * 0.7, height: Dimensions.get('window').height,\n                }}\n                onPress={closeMenu}\n            />\n        </Modal>\n        <View style={{flexDirection: 'row', backgroundColor: '#000', width: Dimensions.get('window').width}}>\n\n            {header ? <>\n                <Pressable\n                    style={{\n                        flex: 2, alignItems: 'center', alignSelf: 'center', justifyContent: 'center',\n                    }}\n                    onPress={openMenu}\n                >\n                    <Text style={{fontSize: 30, color: \"#FFF\", fontWeight: \"bold\"}}>Σ</Text>\n                </Pressable>\n                <View\n                    style={{\n                        flex: 20, alignItems: 'center', alignSelf: 'center', justifyContent: 'center',\n                    }}/>\n                <TouchableOpacity onPress={navigation.goBack}\n                                  style={{flex: 2, justifyContent: 'center', alignItems: 'center', marginRight: 5}}>\n                    <Text style={{color: \"#FFF\"}}>Close</Text>\n                </TouchableOpacity>\n\n            </> : <>\n                <Pressable\n                    style={{\n                        flex: 2, alignItems: 'center', alignSelf: 'center', justifyContent: 'center',\n                    }}\n                    onPress={openMenu}\n                >\n                    <Text style={{fontSize: 30, color: \"#FFF\", fontWeight: \"bold\"}}>Σ</Text>\n                </Pressable>\n                <TouchableOpacity\n                    style={{\n                        flex: 10, alignItems: 'center', justifyContent: 'center',\n                    }}\n                    onPress={() => handleNavigation('Feed', 0)}\n                >\n                    <Text\n                        style={{\n                            fontSize: activeScreen === 'Feed' ? 20 : 16,\n                            fontWeight: activeScreen === 'Feed' ? 'bold' : 'normal',\n                            color: \"#FFF\"\n                        }}\n                    >\n                        Feed\n                    </Text>\n                </TouchableOpacity><TouchableOpacity\n                style={{\n                    flex: 10, alignItems: 'center', justifyContent: 'center',\n                }}\n                onPress={() => handleNavigation('Following', 1)}\n            >\n                <Text\n                    style={{\n                        fontSize: activeScreen === 'Following' ? 20 : 16,\n                        fontWeight: activeScreen === 'Following' ? 'bold' : 'normal',\n                        color: \"#FFF\"\n                    }}\n                >\n                    Following\n                </Text>\n            </TouchableOpacity>\n                <View\n                    style={{\n                        flex: 2, alignItems: 'center', alignSelf: 'center', justifyContent: 'center',\n                    }}/></>}\n        </View>\n    </View>);\n}\n\nfunction MainNavigator({navigation}) {\n    const flatListRef = useRef(null);\n    const [activeScreen, setActiveScreen] = useState('Feed');\n    const refList = [];\n    useEffect(() => {\n        navigation.addListener('focus', () => {\n            setActiveScreen('Feed');\n        })\n        checkAuth().then();\n    })\n\n    const checkAuth = async () => {\n        try {\n            await Database.getAllPosts(1);\n        } catch (error) {\n            navigation.replace('Login');\n        }\n    }\n\n    const scrollToPage = useCallback((index) => {\n        if (flatListRef.current) {\n            flatListRef.current.scrollToIndex({\n                animated: true, index,\n            });\n        }\n    }, []);\n\n    const getItemLayout = useCallback((data, index) => ({\n        length: Dimensions.get('window').width, offset: Dimensions.get('window').width * index, index,\n    }), []);\n\n    const onScrollToIndexFailed = useCallback((info) => {\n        console.warn('Scroll to index failed:', info);\n        const wait = new Promise((resolve) => setTimeout(resolve, 500));\n        wait.then(() => {\n            flatListRef.current?.scrollToIndex({\n                index: info.index, animated: true,\n            });\n        });\n    }, []);\n\n    const setActiveScreenRef = useRef(setActiveScreen);\n    setActiveScreenRef.current = setActiveScreen;\n\n    const onViewableItemsChanged = useRef(({viewableItems}) => {\n        if (viewableItems.length > 0) {\n            const visibleScreen = viewableItems[0].item;\n            setActiveScreenRef.current(visibleScreen.key);\n        }\n    }).current;\n\n    const viewabilityConfig = useRef({\n        itemVisiblePercentThreshold: 50,\n    }).current;\n\n\n    return (<SafeAreaView style={{flex: 1}}>\n        <Menu\n            navigation={navigation}\n            scrollToPage={scrollToPage}\n            activeScreen={activeScreen}\n            setActiveScreen={setActiveScreen}\n        />\n        <FlatList\n            ref={flatListRef}\n            data={screens}\n            horizontal\n            pagingEnabled\n            showsHorizontalScrollIndicator={false}\n            renderItem={({item}) => (<View\n                style={{\n                    width: Dimensions.get('window').width, height: Dimensions.get('window').height,\n                }}\n            >\n                <item.component\n                    navigation={navigation}\n                    currentScreen={activeScreen === item.key}\n                    setActiveScreen={setActiveScreen}// Pass currentScreen prop\n                />\n            </View>)}\n            keyExtractor={(item) => item.key}\n            getItemLayout={getItemLayout}\n            onScrollToIndexFailed={onScrollToIndexFailed}\n            initialNumToRender={1}\n            maxToRenderPerBatch={1}\n            windowSize={2}\n            onViewableItemsChanged={onViewableItemsChanged}\n            viewabilityConfig={viewabilityConfig}\n        />\n    </SafeAreaView>);\n}\n\nexport default MainNavigator;","// components/Comment.js\n\nimport React, {useEffect, useState} from 'react';\nimport {View, Text, TouchableOpacity, Image, StyleSheet} from 'react-native';\n\nimport Database, {BASE_URL} from '../database';\n\n\nexport default function Comment({ comment, currentUser, toggleLike }) {\n\tconst isMine = comment.createdByIdUser === currentUser.idUser;\n\tconst [likes, setLikes] = useState([]);\n\tconst [likedByMe , setLikedByMe] = useState(false);\n\tuseEffect(() => {\n\t\tgetLikes();\n\t})\n\tconst getLikes = async () => {\n\t\tconst data = await Database.getCommentLikes(Number(comment.idComment));\n\t\tsetLikes(data);\n\t\tlet tested = true;\n\t\tdata.forEach((item) => {\n\t\t\tif (item.idUser === currentUser.idUser){\n\t\t\t\tsetLikedByMe(true);\n\t\t\t\ttested = false;\n\t\t\t}\n\t\t})\n\t\tif (tested) {\n\t\t\tsetLikedByMe(false);\n\t\t}\n\t}\n\n\treturn (\n\t\t<View\n\t\t\tstyle={[\n\t\t\t\tstyles.commentBubble,\n\t\t\t\tisMine ? styles.myComment : styles.otherComment,\n\t\t\t]}\n\t\t>\n\t\t\t<Text style={styles.author}>{comment.displayedName}</Text>\n\t\t\t<Text style={styles.commentText}>{comment.text}</Text>\n\n\t\t\t{comment.images?.map((src, i) => (\n\t\t\t\t<Image\n\t\t\t\t\tkey={i}\n\t\t\t\t\tsource={{uri: BASE_URL + src}}\n\t\t\t\t\tstyle={{width: 200, height: 200, marginTop: 6, borderRadius: 8}}\n\t\t\t\t\tresizeMode=\"cover\"\n\t\t\t\t/>\n\t\t\t))}\n\n\t\t\t<TouchableOpacity onPress={() => toggleLike(comment)}>\n\t\t\t\t<Text style={{color: likedByMe ? 'red' : '#555'}}>\n\t\t\t\t\t❤️ {likes.length || 0}\n\t\t\t\t</Text>\n\t\t\t</TouchableOpacity>\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: '#fff',\n\t},\n\tcentered: {\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t},\n\tcommentsContainer: {\n\t\tpadding: 12,\n\t},\n\tcommentBubble: {\n\t\tmarginBottom: 10,\n\t\tpadding: 12,\n\t\tborderRadius: 12,\n\t\tmaxWidth: '90%',\n\t},\n\tmyComment: {\n\t\talignSelf: 'flex-end',\n\t\tbackgroundColor: '#d0f0c0',\n\t},\n\totherComment: {\n\t\talignSelf: 'flex-start',\n\t\tbackgroundColor: '#e6e6e6',\n\t},\n\tauthor: {\n\t\tfontWeight: 'bold',\n\t\tcolor: '#333',\n\t\tmarginBottom: 4,\n\t},\n\tcommentText: {\n\t\tcolor: '#000',\n\t\tfontSize: 15,\n\t\tmarginBottom: 4,\n\t},\n\tinputContainer: {\n\t\tflexDirection: 'row',\n\t\tpadding: 10,\n\t\tborderTopWidth: 1,\n\t\tborderColor: '#ccc',\n\t\tbackgroundColor: '#f9f9f9',\n\t\talignItems: 'center',\n\t\tflexWrap: 'wrap',\n\t},\n\ttextInput: {\n\t\tflex: 1,\n\t\tborderColor: '#ccc',\n\t\tborderWidth: 1,\n\t\tborderRadius: 10,\n\t\tpaddingHorizontal: 12,\n\t\tpaddingVertical: 8,\n\t\tmarginRight: 10,\n\t\tfontSize: 15,\n\t\tbackgroundColor: '#fff',\n\t\tcolor: '#000',\n\t},\n});\n","import React, { useEffect, useState, useRef } from 'react';\nimport {\n    View,\n    TextInput,\n    FlatList,\n    Button,\n    Text,\n    Image,\n    ActivityIndicator,\n    Platform,\n    StyleSheet,\n    KeyboardAvoidingView,\n    Switch, Dimensions,\n} from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport { useSelector } from 'react-redux';\nimport Database, { BASE_URL } from '../database';\nimport { Menu } from '../MainNavigator';\nimport Comment from '../components/Comment';\nimport {Avatar} from \"@rneui/base\";\n\nexport default function PostDetailScreen({ route }) {\n    const { current, colors } = useSelector((state) => state.theme) || {\n        current: 'light',\n        colors: { light: { text: '#000', background: '#FFF' } },\n    };\n    const theme = colors[current] || { text: '#000', background: '#FFF' };\n\n    const [post, setPost] = useState(null);\n    const [comments, setComments] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [newComment, setNewComment] = useState('');\n    const [isAnonymous, setIsAnonymous] = useState(false);\n    const [selectedImages, setSelectedImages] = useState([]);\n    const [currentUser, setCurrentUser] = useState(null);\n    const flatListRef = useRef(null);\n    const [inputHeight, setInputHeight] = useState(40);\n\n    // Fetch initial data\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const postData = await Database.getPost(route.params.postId);\n                const loadedComments = await Database.getPostComments(route.params.postId);\n                const currentUse = await Database.getCurrentUser();\n                setPost(postData);\n                setComments(loadedComments);\n                setCurrentUser(currentUse);\n            } catch (err) {\n                console.error('❌ Ошибка загрузки:', err);\n            } finally {\n                setLoading(false);\n            }\n        };\n        fetchData();\n    }, [route.params.postId]);\n\n    // Scroll to end when comments update\n    useEffect(() => {\n        if (comments.length > 0) {\n            flatListRef.current?.scrollToEnd({ animated: true });\n        }\n    }, [comments.length]);\n\n    // Poll for new comments\n    useEffect(() => {\n        const interval = setInterval(async () => {\n            const loadedComments = await Database.getPostComments(route.params.postId);\n            setComments(loadedComments);\n        }, 1000);\n        return () => clearInterval(interval);\n    }, [route.params.postId]);\n\n    const pickImage = async () => {\n        const result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            quality: 0.7,\n            base64: true,\n        });\n\n        if (!result.canceled) {\n            const asset = result.assets?.[0];\n            if (!asset || !asset.base64) return;\n\n            const fullDataUri = `data:image/jpeg;base64,${asset.base64}`;\n            setSelectedImages([{ uri: fullDataUri }]);\n        }\n    };\n\n    const sendComment = async () => {\n        const content = newComment.trim();\n        if (!content && selectedImages.length === 0) return;\n\n        try {\n            const imageBase64 = selectedImages[0]?.uri || null;\n\n            const newC = await Database.addCommentBase64({\n                postId: post.idPost || post.id,\n                content,\n                isAnonymous: isAnonymous,\n                imageBase64,\n            });\n\n            setComments((prev) => [newC, ...prev]);\n            setNewComment('');\n            setSelectedImages([]);\n        } catch (err) {\n            console.error('❌ Ошибка отправки комментария:', err);\n        }\n    };\n\n    const toggleLike = async (item) => {\n        try {\n            const updatedComments = [...comments];\n            const index = updatedComments.findIndex((c) => c.idComment === item.idComment);\n            if (index === -1) return;\n\n            const current = updatedComments[index];\n            if (current.likedByMe) {\n                await Database.unlikeComment(current.idComment);\n                current.likes = Number(current.likes) - 1;\n                current.likedByMe = false;\n            } else {\n                await Database.likeComment(current.idComment);\n                current.likes = Number(current.likes) + 1;\n                current.likedByMe = true;\n            }\n\n            setComments(updatedComments);\n        } catch (err) {\n            console.error('❌ Ошибка лайка:', err);\n        }\n    };\n\n    if (loading) {\n        return (\n            <View style={[styles.container, styles.centered]}>\n                <ActivityIndicator size=\"large\" color={theme.text} />\n            </View>\n        );\n    }\n\n    const Wrapper = Platform.OS === 'ios' ? KeyboardAvoidingView : View;\n\n    return (\n        <Wrapper\n            style={styles.container}\n            behavior={Platform.OS === 'ios' ? 'padding' : undefined}\n            keyboardVerticalOffset={Platform.OS === 'ios' ? 100 : 0}\n        >\n            <Menu navigation={route.params.navigation} header={true} />\n            <FlatList\n                ref={flatListRef}\n                data={comments}\n                keyExtractor={(item, index) => `${item.idComment || index}`}\n                renderItem={({ item }) => (\n                    <Comment comment={item} currentUser={currentUser} toggleLike={toggleLike} />\n                )}\n                style={styles.mediaScroll}\n                contentContainerStyle={{ paddingBottom: 20, maxHeight: Dimensions.get('window').height * 0.9 }}\n                ListEmptyComponent={<Text style={styles.emptyText}>No comments yet.</Text>}\n            />\n            {selectedImages.length > 0 && (\n                <View style={{ flexDirection: 'row', flexWrap: 'wrap', padding: 8 }}>\n                    {selectedImages.map((img, i) => (\n                        <Image\n                            key={i}\n                            source={{ uri: img.uri }}\n                            style={{ width: 80, height: 80, margin: 4, borderRadius: 8 }}\n                        />\n                    ))}\n                </View>\n            )}\n            <View style={styles.inputContainer}>\n                <Avatar activeOpacity={0.2} containerStyle={{ backgroundColor: \"#20C0B0\" }} icon={{ name: \"upload\" }} onPress={pickImage} rounded size=\"medium\"/>\n                <TextInput\n                    value={newComment}\n                    onChangeText={setNewComment}\n                    style={[styles.textInput, {height: inputHeight}]}\n                    placeholder=\"Ваш комментарий...\"\n                    placeholderTextColor=\"#888\"\n                    multiline={true}\n                    onContentSizeChange={(e) =>\n                        setInputHeight(Math.max(40, e.nativeEvent.contentSize.height))}\n                />\n                <Text>Анон?</Text>\n                <Switch\n                    value={isAnonymous}\n                    onValueChange={setIsAnonymous}\n                    style={{ marginHorizontal: 5 }}\n                />\n                {/*<Button title=\"Медиа\" onPress={pickImage} />*/}\n                {/*<Button title=\"Отправить\" onPress={sendComment} />*/}\n                <Avatar activeOpacity={0.2} containerStyle={{ backgroundColor: \"#40E0D0\" }} icon={{ name: \"send\" }} onPress={sendComment} rounded size=\"medium\"/>\n            </View>\n        </Wrapper>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        maxWidth: Dimensions.get('screen').width,\n        maxHeight: Dimensions.get('screen').height,\n    },\n    centered: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    mediaScroll: {\n        flex: 1,\n    },\n    inputContainer: {\n        flexDirection: 'row',\n        padding: 10,\n        marginBottom: 20,\n        borderTopWidth: 1,\n        borderColor: '#ccc',\n        backgroundColor: '#f9f9f9',\n        alignItems: 'center',\n    },\n    textInput: {\n        flex: 1,\n        borderColor: '#ccc',\n        borderWidth: 1,\n        borderRadius: 10,\n        paddingHorizontal: 12,\n        paddingVertical: 8,\n        marginRight: 10,\n        fontSize: 15,\n        backgroundColor: '#fff',\n        color: '#000',\n    },\n    emptyText: {\n        textAlign: 'center',\n        padding: 20,\n        color: '#888',\n    },\n});","import { Dimensions, StyleSheet } from 'react-native';\n\nexport const styles = StyleSheet.create({\n  container: { flex: 1, padding: 10 },\n  title: { fontSize: 24, fontWeight: 'bold', marginBottom: 10 },\n  input: { borderWidth: 1, padding: 10, marginBottom: 10, borderRadius: 5 },\n  previewImage: { width: 100, height: 100, marginRight: 10, marginBottom: 10 },\n  error: { color: 'red', marginBottom: 10 },\n  postList: { marginTop: 10 },\n  post: { marginBottom: 10 },\n  postImage: {\n    width: '100%',\n    height: Dimensions.get('window').width * 0.9,\n    borderRadius: 5,\n  },\n});","import {\n\tView,\n\tText,\n\tTextInput,\n\tButton,\n\tImage,\n\tFlatList,\n\tTouchableOpacity,\n\tScrollView,\n\tKeyboardAvoidingView,\n} from 'react-native';\nimport { useSelector } from 'react-redux';\nimport * as ImagePicker from 'expo-image-picker';\nimport { useRef, useState } from 'react';\nimport Database from '../database';\nimport { styles } from '../styles/components/CreatePost';\n\nexport function CreatePost({ navigation }) {\n\tconst [content, setContent] = useState('');\n\tconst [posts, setPosts] = useState([]);\n\tconst { current, colors } = useSelector((state) => state.theme);\n\tconst theme = colors[current];\n\tconst [media, setMedia] = useState([]);\n\tconst [inputs, setInputs] = useState(['']); // Dynamic tags inputs\n\tconst [error, setError] = useState(null);\n\tconst [showReadMore, setShowReadMore] = useState(false);\n\tconst [isExpanded, setIsExpanded] = useState(false);\n\tconst textInputRef = useRef(null);\n\tconst [inputHeight, setInputHeight] = useState(0);\n\tconst [contentHeight, setContentHeight] = useState(0);\n\tconst scrollViewRef = useRef(null);\n\tconst [isDisabled, setDisabled] = useState(false);\n\n\tconst handleInputChange = (index, value) => {\n\t\tconst newInputs = [...inputs];\n\t\tnewInputs[index] = value;\n\t\tsetInputs(newInputs);\n\t};\n\n\tconst addInput = () => {\n\t\tif (inputs.length < 4) {\n\t\t\tsetInputs([...inputs, '']);\n\t\t}\n\t};\n\n\tconst handleReadMore = () => {\n\t\tsetIsExpanded(true);\n\t\tsetShowReadMore(false);\n\t\tsetTimeout(() => {\n\t\t\tscrollViewRef.current?.scrollToEnd({ animated: true });\n\t\t}, 100);\n\t};\n\n\tconst handleReadLess = () => {\n\t\tsetIsExpanded(false);\n\t\tsetShowReadMore(contentHeight > inputHeight);\n\t};\n\n\tconst pickMedia = async () => {\n\t\tconst result = await ImagePicker.launchImageLibraryAsync({\n\t\t\tmediaTypes: ImagePicker.MediaTypeOptions.Images, // Restrict to images only\n\t\t\tallowsMultipleSelection: true,\n\t\t\tquality: 0.7, // Compress to 70% quality\n\t\t\tallowsEditing: true,\n\t\t});\n\n\t\tif (!result.canceled) {\n\t\t\tconst newMedia = result.assets.map((asset) => ({\n\t\t\t\turi: asset.uri,\n\t\t\t\ttype: 'image',\n\t\t\t\tmimeType: asset.mimeType || 'image/jpeg',\n\t\t\t}));\n\t\t\tsetMedia([...media, ...newMedia]);\n\t\t}\n\t};\n\n\tconst submitPost = async (isAnonymous = false) => {\n\t\tsetDisabled(true);\n\t\tif (!content.trim() && media.length === 0) {\n\t\t\tsetError('Content or media is required');\n\t\t\tsetDisabled(false);\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst tagArray = inputs\n\t\t\t\t.filter((tag) => tag.trim())\n\t\t\t\t.map((tag) => tag.trim());\n\n\t\t\tconst mediaWithBase64 = await Promise.all(\n\t\t\t\tmedia.map(async (item, index) => {\n\t\t\t\t\tconst response = await fetch(item.uri);\n\t\t\t\t\tconst blob = await response.blob();\n\t\t\t\t\tconst base64 = await new Promise((resolve) => {\n\t\t\t\t\t\tconst reader = new FileReader();\n\t\t\t\t\t\treader.onloadend = () => resolve(reader.result.split(',')[1]);\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t});\n\n\t\t\t\t\tconst extension = item.mimeType?.split('/')[1] || 'jpg';\n\t\t\t\t\tconst fileName = `image-${Date.now()}-${index}.${extension}`;\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: fileName,\n\t\t\t\t\t\ttype: item.mimeType || 'image/jpeg',\n\t\t\t\t\t\tbase64,\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tconst payload = {\n\t\t\t\tcontent: content.trim() || '',\n\t\t\t\ttags: tagArray.join(','),\n\t\t\t\tisAnonymous,\n\t\t\t\timages: mediaWithBase64,\n\t\t\t};\n\n\t\t\tconst newPost = await Database.addPost(payload);\n\n\t\t\tsetPosts([newPost, ...posts]);\n\t\t\tsetContent('');\n\t\t\tsetMedia([]);\n\t\t\tsetInputs(['']);\n\t\t\tsetError(null);\n\t\t\tnavigation.navigate('Main');\n\t\t\tsetDisabled(false);\n\n\t\t\treturn newPost;\n\t\t} catch (err) {\n\t\t\tconst errorMessage = err.message || 'Failed to submit post';\n\t\t\tsetError(errorMessage);\n\t\t\tconsole.error('Error submitting post:', err);\n\t\t\tsetDisabled(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<KeyboardAvoidingView\n\t\t\tbehavior=\"padding\"\n\t\t\tstyle={{ flex: 1 }}\n\t\t\tkeyboardVerticalOffset={20}\n\t\t>\n\t\t\t<ScrollView\n\t\t\t\tref={scrollViewRef}\n\t\t\t\tstyle={{ flex: 1, backgroundColor: 'black' }}\n\t\t\t\tcontentContainerStyle={{\n\t\t\t\t\tflexGrow: 1,\n\t\t\t\t\tpadding: 10,\n\t\t\t\t\tpaddingBottom: 100,\n\t\t\t\t}}\n\t\t\t\tkeyboardShouldPersistTaps=\"handled\"\n\t\t\t\tscrollEnabled={true}\n\t\t\t>\n\t\t\t\t<View>\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tref={textInputRef}\n\t\t\t\t\t\tstyle={[\n\t\t\t\t\t\t\tstyles.input,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tborderColor: theme.border,\n\t\t\t\t\t\t\t\tcolor: theme.text,\n\t\t\t\t\t\t\t\theight: isExpanded ? contentHeight : 80,\n\t\t\t\t\t\t\t\tminHeight: 80,\n\t\t\t\t\t\t\t\tborderRadius: 20,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tplaceholder=\"What's on your mind?\"\n\t\t\t\t\t\tvalue={content}\n\t\t\t\t\t\tonChangeText={(newText) => {\n\t\t\t\t\t\t\tif (newText.length <= 10000) {\n\t\t\t\t\t\t\t\tsetContent(newText);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonContentSizeChange={(e) => {\n\t\t\t\t\t\t\tconst newContentHeight = e.nativeEvent.contentSize.height;\n\t\t\t\t\t\t\tsetContentHeight(newContentHeight);\n\t\t\t\t\t\t\tif (!isExpanded) {\n\t\t\t\t\t\t\t\tsetShowReadMore(newContentHeight > inputHeight);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonLayout={(e) => {\n\t\t\t\t\t\t\tif (!isExpanded) {\n\t\t\t\t\t\t\t\tsetInputHeight(e.nativeEvent.layout.height);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tplaceholderTextColor={theme.text === '#000' ? '#666' : '#ccc'}\n\t\t\t\t\t\tnumberOfLines={3}\n\t\t\t\t\t\tmultiline={true}\n\t\t\t\t\t\tscrollEnabled={true}\n\t\t\t\t\t/>\n\t\t\t\t\t{showReadMore && !isExpanded && (\n\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\tonPress={handleReadMore}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tmarginTop: 5,\n\t\t\t\t\t\t\t\tpadding: 5,\n\t\t\t\t\t\t\t\talignSelf: 'flex-start',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tcolor: theme.text === '#000' ? '#0066cc' : '#4da8ff',\n\t\t\t\t\t\t\t\t\tfontSize: 14,\n\t\t\t\t\t\t\t\t\tfontWeight: '500',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tRead More\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t)}\n\t\t\t\t\t{isExpanded && (\n\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\tonPress={handleReadLess}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tmarginTop: 5,\n\t\t\t\t\t\t\t\tpadding: 5,\n\t\t\t\t\t\t\t\talignSelf: 'flex-start',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tcolor: theme.text === '#000' ? '#0066cc' : '#4da8ff',\n\t\t\t\t\t\t\t\t\tfontSize: 14,\n\t\t\t\t\t\t\t\t\tfontWeight: '500',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tRead Less\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t)}\n\t\t\t\t\t{inputs.map((input, index) => (\n\t\t\t\t\t\t<View\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t\t\tmarginBottom: 10,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\tstyle={[\n\t\t\t\t\t\t\t\t\tstyles.input,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tborderColor: theme.border,\n\t\t\t\t\t\t\t\t\t\tcolor: theme.text,\n\t\t\t\t\t\t\t\t\t\tflex: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\tplaceholder={`Tag ${index + 1}`}\n\t\t\t\t\t\t\t\tvalue={input}\n\t\t\t\t\t\t\t\tonChangeText={(value) => handleInputChange(index, value)}\n\t\t\t\t\t\t\t\tplaceholderTextColor={theme.text === '#000' ? '#666' : '#ccc'}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{index === inputs.length - 1 && inputs.length < 4 && (\n\t\t\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\t\t\tonPress={addInput}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tmarginLeft: 10,\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: '#4CAF50',\n\t\t\t\t\t\t\t\t\t\tpadding: 10,\n\t\t\t\t\t\t\t\t\t\tborderRadius: 5,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Text style={{ color: 'white', fontSize: 16 }}>+</Text>\n\t\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</View>\n\t\t\t\t\t))}\n\t\t\t\t\t{media.length > 0 && (\n\t\t\t\t\t\t<FlatList\n\t\t\t\t\t\t\tdata={media}\n\t\t\t\t\t\t\trenderItem={({ item }) => (\n\t\t\t\t\t\t\t\t<Image source={{ uri: item.uri }} style={styles.previewImage} />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tkeyExtractor={(item, index) => index.toString()}\n\t\t\t\t\t\t\thorizontal\n\t\t\t\t\t\t\tpagingEnabled\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<Button title=\"Pick Media\" onPress={pickMedia} />\n\t\t\t\t\t<Button title=\"Post\" disabled={isDisabled} onPress={() => submitPost(false)} />\n\t\t\t\t\t<Button title=\"Anon Post\" disabled={isDisabled} onPress={() => submitPost(true)} />\n\t\t\t\t</View>\n\t\t\t</ScrollView>\n\t\t</KeyboardAvoidingView>\n\t);\n}","import {SafeAreaView} from \"react-native\";\nimport {CreatePost} from \"../components/CreatePost\";\nimport {Menu} from \"../MainNavigator\";\nimport React from \"react\";\n\n\nexport const CreatePostScreen = ({navigation}) => {\n    return (\n        <SafeAreaView style={{backgroundColor: \"#000\", flex: 1}}>\n            <Menu navigation={navigation} header={true}/>\n            <CreatePost navigation={navigation} />\n        </SafeAreaView>\n    );\n}","import React, {useEffect, useRef, useState} from \"react\";\nimport {StyleSheet, View, Text, Animated} from \"react-native\";\n\nexport default function SplashScreen({navigation}) {\n    const slideAnim = useRef(new Animated.Value(0)).current;\n    useEffect(() => {\n        Animated.loop(\n            Animated.sequence([\n                Animated.timing(slideAnim, {\n                    toValue: 1,\n                    duration: 500,\n                    useNativeDriver: true,\n                }),\n                Animated.timing(slideAnim, {\n                    toValue: 0.5,\n                    duration: 500,\n                    useNativeDriver: true,\n                })\n            ]),\n            {iterations: -1} // Infinite loop\n        ).start();\n\n        const timer = setTimeout(() => {\n            navigation.replace('SystemMessage');\n        }, 2000);\n\n        return () => clearTimeout(timer);\n    }, [slideAnim, navigation]);\n\n    return (\n        <View style={styles.container}>\n            <Animated.Image style={[styles.image, {opacity: slideAnim}]} source={require('../public/logo-rb.png')} />\n            <Text style={styles.text}>Open beta now!</Text>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#000000',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    image: {\n        alignSelf: 'center',\n        alignItems: 'center',\n        width: 100,\n        height: 100,\n        marginBottom: 20,\n\n    },\n    text: {\n        fontWeight: 'bold',\n        color: '#222',\n        fontSize: 18,\n        marginBottom: 20,\n        alignSelf: 'center',\n        alignItems: 'center',\n    }\n});","// screens/ProfileSettingsScreen.js\n\nimport React, {useEffect, useState} from 'react';\nimport {View, Text, TouchableOpacity} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport {styles} from '../styles/screens/ProfileScreen';\nimport {Menu} from \"../MainNavigator\";\nimport Database from \"../database\";\n\nexport default function ProfileScreen({navigation}) {\n    const {current, colors} = useSelector((state) => state.theme);\n    const theme = colors[current];\n    const [user, setUser] = useState({});\n\n    useEffect(() => {\n        Database.getCurrentUser()\n    })\n\n    return (\n        <View style={[styles.container, {backgroundColor: theme.background}]}>\n            <Menu navigation={navigation} header={true}/>\n            <Text style={[styles.header, {color: theme.text}]}>\n                Profile\n            </Text>\n            <Text style={{color: theme.text, marginBottom: 20}}>\n                Username: CurrentUser\n            </Text>\n        </View>\n    );\n}","import React, {useEffect} from \"react\";\nimport {Image, Button, Text, View} from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport default function StaticSystemMessageScreen({ navigation }) {\n\n    useEffect(() => {\n        isShown().then(() => {});\n    });\n\n    const isShown = async () => {\n        await AsyncStorage.removeItem(\"message\");\n        const value = await AsyncStorage.getItem('message1');\n        if (value === \"true\"){\n            navigation.replace(\"Main\");\n        }\n    }\n\n    const setShown = async () => {\n        await AsyncStorage.setItem('message1', 'true');\n        navigation.replace('Main');\n    }\n\n    return (\n        <View style={{flex: 1, alignItems: \"center\", justifyContent: \"center\", backgroundColor: \"#000\"}}>\n            <Image style={{\n                alignSelf: 'center',\n                alignItems: 'center',\n                width: 100,\n                height: 100,\n                marginBottom: 20}} source={require('../public/logo-rb.png')} />\n            <Text style={{color:'white', textAlign: 'center', fontSize: 20, width:\"70%\", marginBottom: 50}}>\n                В настоящий момент мы переносим сайт на другой сервер, поэтому некоторые функции могут не работать.\n                <br/>\n                Просим отнестись к этому с пониманием!\n            </Text>\n\n            <Text style={{color:'#CCC', textAlign: 'center', fontSize: 18, width:\"70%\", marginBottom: 50}}>\n                В настоящий момент была добалена поддержка картинок на постах и поддержка коментов\n                <br/>\n                (Процент переноса 20%)\n            </Text>\n            <Button onPress={setShown} title={\"OK\"}/>\n        </View>\n    );\n}","import React, {useRef, useEffect, useState} from 'react';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport {GestureHandlerRootView} from 'react-native-gesture-handler';\nimport {Provider} from 'react-redux';\nimport {store} from './redux/store';\nimport SettingsScreen from './screens/SettingsScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport PostDetailScreen from './screens/CommentScreen';\nimport {CreatePostScreen} from './screens/CreatePostScreen';\nimport MainNavigator from './MainNavigator';\nimport SplashScreen from \"./screens/SplashScreen\";\nimport ProfileSettingsScreen from \"./screens/ProfileSettingsScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport StaticSystemMessageScreen from \"./screens/StaticSystemMessageScreen\";\n\nconst Stack = createStackNavigator();\n\n\nexport default function App() {\n    const navigationRef = useRef(null);\n\n    return (<Provider store={store}>\n        <GestureHandlerRootView style={{flex: 1}}>\n            <NavigationContainer ref={navigationRef}>\n                <Stack.Navigator initialRouteName=\"Splash\">\n                    <Stack.Screen\n                        name=\"Splash\"\n                        component={SplashScreen}\n                        options={{headerShown: false}}/>\n                    <Stack.Screen\n                        name=\"Login\"\n                        component={LoginScreen}\n                        options={{headerShown: false}}\n                    />\n                    <Stack.Screen\n                        name=\"SystemMessage\"\n                        component={StaticSystemMessageScreen}\n                        options={{headerShown: false}}\n                    />\n                    <Stack.Screen\n                        name=\"Main\"\n                        component={MainNavigator}\n                        options={{headerShown: false}}\n                    />\n                    <Stack.Screen\n                        name={\"ProfileSettings\"}\n                        component={ProfileSettingsScreen}\n                        options={{headerShown: false}}/>\n                    <Stack.Screen\n                        name={\"Profile\"}\n                        component={ProfileScreen}\n                        options={{headerShown: false}}\n                    />\n                    <Stack.Screen\n                        name=\"Settings\"\n                        component={SettingsScreen}\n                        options={{headerShown: false}} // You can customize this\n                    />\n                    <Stack.Screen\n                        name=\"PostDetail\"\n                        component={PostDetailScreen}\n                        options={{headerShown: false}}\n                    />\n                    <Stack.Screen\n                        name=\"CreatePost\"\n                        component={CreatePostScreen}\n                        options={{headerShown: false}}\n                    />\n                </Stack.Navigator>\n            </NavigationContainer>\n        </GestureHandlerRootView>\n    </Provider>);\n}","// index.js\n\nimport { registerRootComponent, registerWebModule } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\n\n\nregisterRootComponent(App);","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [333], () => (__webpack_require__(3633)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["initialThemeState","current","colors","light","background","text","border","dark","rootReducer","combineReducers","theme","themeReducer","state","action","type","Object","assign","payload","store","createStore","styles","StyleSheet","create","container","flex","padding","title","fontSize","fontWeight","marginBottom","subtitle","SettingsScreen","navigation","dispatch","useDispatch","useSelector","_jsxs","View","style","backgroundColor","children","_jsx","Text","color","Button","onPress","setTheme","marginTop","goBack","BASE_URL","API_URL","authHeaders","async","token","AsyncStorage","getItem","getToken","console","warn","Database","init","log","register","email","password","realName","group","displayedName","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","setItem","user","login","logout","removeItem","getCurrentUser","getUser","id","full","getUsername","setUsername","idUser","changeUsername","username","changeImage","addPost","responseText","error","parse","getAllPosts","page","getPost","postId","deletePost","getFollowingPosts","getAllComments","getPostComments","getPostCommentsCount","addComment","content","likePost","getLikePost","unlikePost","getCommentLikes","commentId","likeComment","unlikeComment","followTag","tagName","unfollowTag","getFollowedTags","addCommentBase64","isAnonymous","imageBase64","Authorization","justifyContent","textAlign","input","borderWidth","borderRadius","LoginScreen","isLogin","setIsLogin","useState","setEmail","setPassword","setRealName","setGroup","setDisplayedName","setError","showPrompt","setShowPrompt","useEffect","replace","check","isIOS","test","navigator","userAgent","window","MSStream","isSafari","isStandalone","standalone","TextInput","borderColor","placeholder","value","onChangeText","autoCapitalize","placeholderTextColor","secureTextEntry","_Fragment","length","alert","err","message","Modal","visible","alignItems","alignSelf","alignContent","width","previewImage","height","marginRight","postList","post","FloatingButton","slideAnim","useRef","Animated","Value","timing","toValue","duration","useNativeDriver","start","position","top","Dimensions","get","right","zIndex","transform","translateY","TouchableOpacity","Tag","tag","onRefresh","isFollowed","setIsFollowed","then","tags","includes","textAlignVertical","substring","SCREEN_WIDTH","maxWidth","marginVertical","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","header","flexDirection","borderBottomWidth","borderBottomColor","userInfo","avatar","timestamp","mediaScroll","mediaScrollContent","mediaContainer","media","maxHeight","overflow","pagination","bottom","dot","margin","contentContainer","lineHeight","actions","borderTopWidth","borderTopColor","actionButton","actionText","marginLeft","tagsContainer","paddingHorizontal","paddingBottom","Post","refresher","liked","setLiked","likedByCurrentUser","creator","setCreator","pic","myPost","setMyPost","isLoading","setIsLoading","currentIndex","setCurrentIndex","open","setOpen","flatListRef","commentsCount","setCommentsCount","urls","setUrls","setContent","mounted","me","Promise","all","createdByIdUser","likeStatus","Number","idPost","t","count","url1","match","temp","forEach","url","indexOf","fetchPostData","interval","setInterval","updateCommentsCount","clearInterval","ActivityIndicator","size","primary","mediaItems","Array","isArray","images","split","filter","Boolean","isVisible","Image","resizeMode","source","uri","require","Avatar","rounded","containerStyle","onLongPress","onPressOut","navigate","userId","Date","createdAt","toLocaleDateString","FlatList","slice","reverse","renderItem","item","horizontal","showsHorizontalScrollIndicator","keyExtractor","index","success","Ionicons","name","ScrollView","ref","pagingEnabled","scrollEventThrottle","onScroll","e","newIndex","Math","round","nativeEvent","contentOffset","x","contentContainerStyle","map","Video","shouldPlay","isLooping","useNativeControls","onError","_","i","Pressable","scrollTo","animated","renderUrl","href","target","likes","SuperScrollList","React","loader","constructor","props","super","this","hasMore","componentDidMount","fetchData","setState","newPosts","posts","prevState","handleLoadMore","handleScroll","event","contentSize","layoutMeasurement","y","renderRow","minHeight","renderList","toString","onEndReached","onEndReachedThreshold","ListFooterComponent","renderFooter","showsVerticalScrollIndicator","flexGrow","extraData","renderEmpty","render","SafeAreaView","FeedScreen","FollowingScreen","menuItem","borderTopLeftRadius","borderTopRightRadius","closeButton","image","ProfileModal","editMode","setEditMode","imageEditMode","setImageEditMode","setMedia","setUser","fetchUser","userid","use","database","pickMedia","result","ImagePicker","launchImageLibraryAsync","mediaTypes","Images","allowsMultipleSelection","quality","allowsEditing","canceled","newMedia","assets","asset","mimeType","newUser","blob","base64","resolve","reader","FileReader","onloadend","readAsDataURL","extension","now","res","onClose","ProfileSettingsScreen","Menu","screens","key","component","scrollToPage","activeScreen","setActiveScreen","showMenu","setShowMenu","openMenu","closeMenu","handleNavigation","useCallback","screenName","testID","deviceHeight","deviceWidth","animationIn","animationOut","transparent","onRequestClose","addListener","checkAuth","scrollToIndex","getItemLayout","offset","onScrollToIndexFailed","info","setTimeout","setActiveScreenRef","onViewableItemsChanged","viewableItems","visibleScreen","viewabilityConfig","itemVisiblePercentThreshold","currentScreen","initialNumToRender","maxToRenderPerBatch","windowSize","Comment","comment","currentUser","toggleLike","isMine","setLikes","likedByMe","setLikedByMe","getLikes","idComment","tested","commentBubble","myComment","otherComment","author","commentText","src","centered","commentsContainer","inputContainer","flexWrap","textInput","paddingVertical","PostDetailScreen","route","setPost","comments","setComments","loading","setLoading","newComment","setNewComment","setIsAnonymous","selectedImages","setSelectedImages","setCurrentUser","inputHeight","setInputHeight","postData","params","loadedComments","currentUse","scrollToEnd","updatedComments","findIndex","c","Wrapper","behavior","undefined","keyboardVerticalOffset","ListEmptyComponent","emptyText","img","activeOpacity","icon","fullDataUri","multiline","onContentSizeChange","max","Switch","onValueChange","marginHorizontal","trim","newC","prev","postImage","CreatePost","setPosts","inputs","setInputs","showReadMore","setShowReadMore","isExpanded","setIsExpanded","textInputRef","contentHeight","setContentHeight","scrollViewRef","isDisabled","setDisabled","addInput","submitPost","tagArray","mediaWithBase64","join","newPost","errorMessage","KeyboardAvoidingView","keyboardShouldPersistTaps","scrollEnabled","newText","newContentHeight","onLayout","layout","numberOfLines","handleReadMore","handleReadLess","handleInputChange","newInputs","disabled","CreatePostScreen","SplashScreen","loop","sequence","iterations","timer","clearTimeout","opacity","ProfileScreen","StaticSystemMessageScreen","isShown","Stack","createStackNavigator","registerRootComponent","navigationRef","Provider","GestureHandlerRootView","NavigationContainer","Navigator","initialRouteName","Screen","options","headerShown","MainNavigator","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}