{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.VideoDecoderProperties=void 0;const canPlay=codec=>{if(navigator.userAgent.search('Firefox')===-1){codec=codec.replace('video/x-matroska','video/mp4');}return!!MediaSource.isTypeSupported(codec);};exports.VideoDecoderProperties={async getWidevineLevel(){return 0;},async isCodecSupported(mimeType,_width,_height){return canPlay(mimeType)?'software':'unsupported';},async isHEVCSupported(){return canPlay('video/x-matroska; codecs=\"hvc1.1.4.L96.BO\"')?'software':'unsupported';}};","map":{"version":3,"names":["canPlay","codec","navigator","userAgent","search","replace","MediaSource","isTypeSupported","exports","VideoDecoderProperties","getWidevineLevel","isCodecSupported","mimeType","_width","_height","isHEVCSupported"],"sources":["/Users/deu/SigmaLTD/node_modules/react-native-video/src/VideoDecoderProperties.web.ts"],"sourcesContent":["/// <reference lib=\"dom\" />\nimport type {VideoDecoderInfoModuleType} from './specs/NativeVideoDecoderInfoModule';\n\nconst canPlay = (codec: string): boolean => {\n  // most chrome based browser (and safari I think) supports matroska but reports they do not.\n  // for those browsers, only check the codecs and not the container.\n  if (navigator.userAgent.search('Firefox') === -1) {\n    codec = codec.replace('video/x-matroska', 'video/mp4');\n  }\n\n  return !!MediaSource.isTypeSupported(codec);\n};\n\nexport const VideoDecoderProperties = {\n  async getWidevineLevel() {\n    return 0;\n  },\n\n  async isCodecSupported(\n    mimeType: string,\n    _width: number,\n    _height: number,\n  ): Promise<'unsupported' | 'hardware' | 'software'> {\n    // TODO: Figure out if we can get hardware support information\n    return canPlay(mimeType) ? 'software' : 'unsupported';\n  },\n\n  async isHEVCSupported(): Promise<'unsupported' | 'hardware' | 'software'> {\n    // Just a dummy vidoe mime type codec with HEVC to check.\n    return canPlay('video/x-matroska; codecs=\"hvc1.1.4.L96.BO\"')\n      ? 'software'\n      : 'unsupported';\n  },\n} satisfies VideoDecoderInfoModuleType;\n"],"mappings":"4GAGA,KAAM,CAAAA,OAAO,CAAIC,KAAa,EAAa,CAGzC,GAAIC,SAAS,CAACC,SAAS,CAACC,MAAM,CAAC,SAAS,CAAC,GAAK,CAAC,CAAC,CAAE,CAChDH,KAAK,CAAGA,KAAK,CAACI,OAAO,CAAC,kBAAkB,CAAE,WAAW,CAAC,C,CAGxD,MAAO,CAAC,CAACC,WAAW,CAACC,eAAe,CAACN,KAAK,CAAC,CAC7C,CAAC,CAEYO,OAAA,CAAAC,sBAAsB,CAAG,CACpC,KAAM,CAAAC,gBAAgBA,CAAA,EACpB,MAAO,EAAC,CACV,CAAC,CAED,KAAM,CAAAC,gBAAgBA,CACpBC,QAAgB,CAChBC,MAAc,CACdC,OAAe,EAGf,MAAO,CAAAd,OAAO,CAACY,QAAQ,CAAC,CAAG,UAAU,CAAG,aAAa,CACvD,CAAC,CAED,KAAM,CAAAG,eAAeA,CAAA,EAEnB,MAAO,CAAAf,OAAO,CAAC,4CAA4C,CAAC,CACxD,UAAU,CACV,aAAa,CACnB,C,CACoC","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}