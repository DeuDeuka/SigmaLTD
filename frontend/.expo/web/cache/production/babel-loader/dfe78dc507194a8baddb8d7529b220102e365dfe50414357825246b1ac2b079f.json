{"ast":null,"code":"import React,{useEffect,useState}from'react';import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import TextInput from\"react-native-web/dist/exports/TextInput\";import Alert from\"react-native-web/dist/exports/Alert\";import Platform from\"react-native-web/dist/exports/Platform\";import Image from\"react-native-web/dist/exports/Image\";import{useSelector}from'react-redux';import Database from'../database';import{styles}from'../styles/components/ProfileModal';import*as ImagePicker from\"expo-image-picker\";import database from\"../database\";import{Avatar}from\"react-native-elements\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function ProfileModal({navigation}){const theme=useSelector(state=>state.theme);const[editMode,setEditMode]=useState(false);const[imageEditMode,setImageEditMode]=useState(false);const[media,setMedia]=useState([]);const[username,setUsername]=useState('');const[user,setUser]=useState({});useEffect(()=>{fetchUser();},[]);const fetchUser=async()=>{const userid=await Database.getUsername(setUsername);const use=await database.getUser(userid);setUser(use);setMedia([{uri:use.pic}]);console.log(use);};const handleEditProfile=async()=>{if(editMode){if(username.length>1){const newUser=await Database.changeUsername(username);alert('Profile Updated',`Username saved as: ${newUser.displayedName}`);}else{alert(\"Invalid length\");useEffect(()=>{Database.getUsername(setUsername);},[]);}}setEditMode(!editMode);};const handleLogout=async()=>{if(true){try{await Database.logout();await navigation.navigate('Login');}catch(err){console.error('Logout error:',err);}}else{Alert.alert('Logout','Are you sure you want to logout?',[{text:'Cancel',style:'cancel'},{text:'Yes',onPress:async()=>{try{await Database.logout();onClose();}catch(err){console.error('Logout error:',err);}}}]);}};const handleImageChange=async()=>{console.log(media);if(imageEditMode){const mediaWithBase64=await Promise.all(media.map(async(item,index)=>{const response=await fetch(item.uri);const blob=await response.blob();const base64=await new Promise(resolve=>{const reader=new FileReader();reader.onloadend=()=>resolve(reader.result.split(',')[1]);reader.readAsDataURL(blob);});const extension=item.mimeType?.split('/')[1]||'jpg';const fileName=`${item.type}-${Date.now()}-${index}.${extension}`;return{name:fileName,type:'image/jpeg',base64:base64};}));const payload={image:mediaWithBase64};const res=await Database.changeImage(payload);console.log(res);setImageEditMode(false);}else{await pickMedia();}};const pickMedia=async()=>{setImageEditMode(true);const result=await ImagePicker.launchImageLibraryAsync({mediaTypes:ImagePicker.MediaTypeOptions.Images,allowsMultipleSelection:false,quality:0.7,allowsEditing:true});if(!result.canceled){const newMedia=result.assets.map(asset=>({uri:asset.uri,type:'image',mimeType:asset.mimeType||asset.type==='image/jpeg'}));console.log(newMedia);setMedia(newMedia);}};return _jsxs(SafeAreaView,{style:[styles.container,{backgroundColor:theme.colors.background}],children:[_jsx(Text,{style:[styles.header,{color:'#fff',fontSize:18}],children:\"Profile\"}),_jsx(Avatar,{rounded:true,source:{uri:media.length>0?media[0].uri:media.uri},style:styles.image}),editMode?_jsx(TextInput,{value:username,onChangeText:setUsername,style:{borderWidth:1,padding:10,marginBottom:20,color:'#fff',borderColor:'#ccc',width:'100%'}}):_jsxs(Text,{style:{color:'#fff',marginBottom:20},children:[\"Username: \",username]}),_jsx(TouchableOpacity,{style:styles.menuItem,onPress:handleEditProfile,children:_jsx(Text,{style:{color:'#fff'},children:editMode?'Save Profile':'Edit Profile'})}),_jsx(TouchableOpacity,{onPress:handleImageChange,style:styles.menuItem,children:_jsx(Text,{style:{color:\"#fff\"},children:imageEditMode?\"Upload Picture\":\"Choose Profile Pic\"})}),_jsx(TouchableOpacity,{style:styles.menuItem,onPress:()=>{navigation.navigate('Settings');onClose();},children:_jsx(Text,{style:{color:'#fff'},children:\"Settings\"})}),_jsx(TouchableOpacity,{style:styles.menuItem,onPress:handleLogout,children:_jsx(Text,{style:{color:'#fff'},children:\"Logout\"})})]});}","map":{"version":3,"names":["React","useEffect","useState","Text","TouchableOpacity","SafeAreaView","TextInput","Alert","Platform","Image","useSelector","Database","styles","ImagePicker","database","Avatar","jsx","_jsx","jsxs","_jsxs","ProfileModal","navigation","theme","state","editMode","setEditMode","imageEditMode","setImageEditMode","media","setMedia","username","setUsername","user","setUser","fetchUser","userid","getUsername","use","getUser","uri","pic","console","log","handleEditProfile","length","newUser","changeUsername","alert","displayedName","handleLogout","logout","navigate","err","error","text","style","onPress","onClose","handleImageChange","mediaWithBase64","Promise","all","map","item","index","response","fetch","blob","base64","resolve","reader","FileReader","onloadend","result","split","readAsDataURL","extension","mimeType","fileName","type","Date","now","name","payload","image","res","changeImage","pickMedia","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsMultipleSelection","quality","allowsEditing","canceled","newMedia","assets","asset","container","backgroundColor","colors","background","children","header","color","fontSize","rounded","source","value","onChangeText","borderWidth","padding","marginBottom","borderColor","width","menuItem"],"sources":["/Users/deu/SigmaLTD/frontend/components/ProfileModal.js"],"sourcesContent":["// components/ProfileModal.js\n\nimport React, {useEffect, useState} from 'react';\nimport {Text, TouchableOpacity, SafeAreaView, TextInput, Alert, Platform, Image} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport Database from '../database';\nimport {styles} from '../styles/components/ProfileModal';\nimport * as ImagePicker from \"expo-image-picker\";\nimport database from \"../database\";\nimport {Avatar} from \"react-native-elements\";\n\nexport default function ProfileModal({navigation}) {\n    const theme = useSelector((state) => state.theme);\n    const [editMode, setEditMode] = useState(false);\n    const [imageEditMode, setImageEditMode] = useState(false);\n    const [media, setMedia] = useState([]);\n    const [username, setUsername] = useState('');\n    const [user, setUser] = useState({});\n\n    useEffect(() => {\n        fetchUser();\n    }, []);\n\n    const fetchUser = async () => {\n        const userid = await Database.getUsername(setUsername);\n        const use = await database.getUser(userid);\n        setUser(use);\n        setMedia([{uri: use.pic}]);\n        console.log(use);\n    }\n\n    const handleEditProfile = async () => {\n        if (editMode) {\n            if (username.length > 1) {\n                const newUser = await Database.changeUsername(username);\n                alert('Profile Updated', `Username saved as: ${newUser.displayedName}`);\n\n            } else {\n                alert(\"Invalid length\");\n                useEffect(() => {\n                    Database.getUsername(setUsername);\n                }, []);\n            }\n        }\n        setEditMode(!editMode);\n    };\n\n    const handleLogout = async () => {\n        if (Platform.OS === \"web\") {\n            try {\n                await Database.logout();\n                await navigation.navigate('Login');\n\n            } catch (err) {\n                console.error('Logout error:', err);\n            }\n        } else {\n            Alert.alert(\n                'Logout',\n                'Are you sure you want to logout?',\n                [\n                    {text: 'Cancel', style: 'cancel'},\n                    {\n                        text: 'Yes', onPress: async () => {\n                            try {\n                                await Database.logout();\n                                onClose();\n                            } catch (err) {\n                                console.error('Logout error:', err);\n                            }\n                        }\n                    },\n                ]\n            );\n        }\n    };\n\n    const handleImageChange = async () => {\n        console.log(media);\n        if (imageEditMode) {\n            const mediaWithBase64 = await Promise.all(\n                media.map(async (item, index) => {\n                    const response = await fetch(item.uri);\n                    const blob = await response.blob();\n                    const base64 = await new Promise((resolve) => {\n                        const reader = new FileReader();\n                        reader.onloadend = () => resolve(reader.result.split(',')[1]);\n                        reader.readAsDataURL(blob);\n                    });\n                    const extension = item.mimeType?.split('/')[1] || 'jpg';\n                    const fileName = `${item.type}-${Date.now()}-${index}.${extension}`;\n                    return {\n                        name: fileName,\n                        type: 'image/jpeg',\n                        base64: base64,\n                    };\n                })\n            );\n            const payload = {\n                image: mediaWithBase64,\n            }\n            const res = await Database.changeImage(payload);\n            console.log(res);\n            setImageEditMode(false);\n        } else {\n            await pickMedia();\n        }\n\n    }\n\n    const pickMedia = async () => {\n        setImageEditMode(true);\n        const result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsMultipleSelection: false,\n            quality: 0.7,\n            allowsEditing: true,\n        });\n\n        if (!result.canceled) {\n            const newMedia = result.assets.map((asset) => ({\n                uri: asset.uri,\n                type: 'image',\n                mimeType: asset.mimeType || (asset.type === 'image/jpeg'),\n            }));\n            console.log(newMedia);\n            setMedia(newMedia);\n        }\n    };\n\n    return (\n        <SafeAreaView style={[styles.container, {backgroundColor: theme.colors.background}]}>\n            <Text style={[styles.header, {color: '#fff', fontSize: 18}]}>\n                Profile\n            </Text>\n            <Avatar rounded\n                    source={{uri: media.length > 0 ? media[0].uri : media.uri}}\n                    style={styles.image}/>\n\n            {editMode ? (\n                <TextInput\n                    value={username}\n                    onChangeText={setUsername}\n                    style={{\n                        borderWidth: 1,\n                        padding: 10,\n                        marginBottom: 20,\n                        color: '#fff',\n                        borderColor: '#ccc',\n                        width: '100%',\n                    }}\n                />\n            ) : (\n                <Text style={{color: '#fff', marginBottom: 20}}>\n                    Username: {username}\n                </Text>\n            )}\n            <TouchableOpacity style={styles.menuItem} onPress={handleEditProfile}>\n                <Text style={{color: '#fff'}}>\n                    {editMode ? 'Save Profile' : 'Edit Profile'}\n                </Text>\n            </TouchableOpacity>\n            <TouchableOpacity onPress={handleImageChange} style={styles.menuItem}>\n                <Text style={{color: \"#fff\"}}>\n                    {imageEditMode ? \"Upload Picture\" : \"Choose Profile Pic\"}\n                </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n                style={styles.menuItem}\n                onPress={() => {\n                    navigation.navigate('Settings');\n                    onClose();\n                }}\n            >\n                <Text style={{color: '#fff'}}>Settings</Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={styles.menuItem} onPress={handleLogout}>\n                <Text style={{color: '#fff'}}>Logout</Text>\n            </TouchableOpacity>\n        </SafeAreaView>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}