{"ast":null,"code":"import React,{Fragment}from'react';import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Modal from\"react-native-web/dist/exports/Modal\";import View from\"react-native-web/dist/exports/View\";import StatusBar from\"react-native-web/dist/exports/StatusBar\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Platform from\"react-native-web/dist/exports/Platform\";import{withTheme}from'../config';import{ScreenWidth,ScreenHeight,isIOS}from'../helpers';import Triangle from'./Triangle';import getTooltipCoordinate,{getElementVisibleWidth}from'./getTooltipCoordinate';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const defaultProps={withOverlay:true,overlayColor:'rgba(250, 250, 250, 0.70)',highlightColor:'transparent',withPointer:true,toggleOnPress:true,toggleAction:'onPress',height:40,width:150,containerStyle:{},backgroundColor:'#617080',onClose:()=>{},onOpen:()=>{},skipAndroidStatusBar:false,ModalComponent:Modal,closeOnlyOnBackdropPress:false};class Tooltip extends React.Component{constructor(){super(...arguments);this._isMounted=false;this.state={isVisible:false,yOffset:0,xOffset:0,elementWidth:0,elementHeight:0};this.toggleTooltip=()=>{const{onClose}=this.props;this.getElementPosition();this._isMounted&&this.setState(prevState=>{if(prevState.isVisible){onClose&&onClose();}return{isVisible:!prevState.isVisible};});};this.wrapWithPress=(toggleOnPress,toggleAction,children)=>{if(toggleOnPress){return _jsx(TouchableOpacity,{[toggleAction]:this.toggleTooltip,delayLongPress:250,activeOpacity:1,children:children});}return children;};this.containerStyle=(withOverlay,overlayColor)=>{return{backgroundColor:withOverlay?overlayColor:'transparent',flex:1};};this.getTooltipStyle=()=>{const{yOffset,xOffset,elementHeight,elementWidth}=this.state;const{height,backgroundColor,width,withPointer,containerStyle}=this.props;const{x,y}=getTooltipCoordinate(xOffset,yOffset,elementWidth,elementHeight,ScreenWidth,ScreenHeight,width,height,withPointer);return StyleSheet.flatten([{position:'absolute',[I18nManager.isRTL?'right':'left']:x,top:y,width,height,backgroundColor,display:'flex',alignItems:'center',justifyContent:'center',flex:1,borderRadius:10,padding:10},containerStyle]);};this.renderPointer=tooltipY=>{const{yOffset,xOffset,elementHeight,elementWidth}=this.state;const{backgroundColor,pointerColor}=this.props;const pastMiddleLine=yOffset>(tooltipY||0);return _jsx(View,{style:{position:'absolute',top:pastMiddleLine?yOffset-13:yOffset+elementHeight-2,[I18nManager.isRTL?'right':'left']:xOffset+getElementVisibleWidth(elementWidth,xOffset,ScreenWidth)/2-7.5},children:_jsx(Triangle,{style:{borderBottomColor:pointerColor||backgroundColor},isDown:pastMiddleLine})});};this.getTooltipHighlightedButtonStyle=()=>{const{highlightColor}=this.props;const{yOffset,xOffset,elementWidth,elementHeight}=this.state;return{position:'absolute',top:yOffset,[I18nManager.isRTL?'right':'left']:xOffset,backgroundColor:highlightColor,overflow:'visible',width:elementWidth,height:elementHeight};};this.renderTouchableHighlightedButton=()=>{const TooltipHighlightedButtonStyle=this.getTooltipHighlightedButtonStyle();return _jsx(TouchableOpacity,{testID:\"tooltipTouchableHighlightedButton\",onPress:()=>this.toggleTooltip(),style:TooltipHighlightedButtonStyle,children:this.props.children});};this.renderStaticHighlightedButton=()=>{const TooltipHighlightedButtonStyle=this.getTooltipHighlightedButtonStyle();return _jsx(View,{style:TooltipHighlightedButtonStyle,children:this.props.children});};this.renderHighlightedButton=()=>{const{closeOnlyOnBackdropPress}=this.props;if(closeOnlyOnBackdropPress){return this.renderTouchableHighlightedButton();}else{return this.renderStaticHighlightedButton();}};this.renderContent=withTooltip=>{const{popover,withPointer,toggleOnPress,toggleAction}=this.props;if(!withTooltip){return this.wrapWithPress(toggleOnPress,toggleAction,this.props.children);}const tooltipStyle=this.getTooltipStyle();return _jsxs(View,{children:[this.renderHighlightedButton(),withPointer&&this.renderPointer(tooltipStyle.top),_jsx(View,{style:tooltipStyle,testID:\"tooltipPopoverContainer\",children:popover})]});};this.getElementPosition=()=>{const{skipAndroidStatusBar}=this.props;this.renderedElement&&this.renderedElement.measure((_frameOffsetX,_frameOffsetY,width,height,pageOffsetX,pageOffsetY)=>{this._isMounted&&this.setState({xOffset:pageOffsetX,yOffset:isIOS||skipAndroidStatusBar?pageOffsetY:pageOffsetY-0,elementWidth:width,elementHeight:height});});};this.renderStaticModalContent=()=>{const{withOverlay,overlayColor}=this.props;return _jsxs(Fragment,{children:[_jsx(TouchableOpacity,{style:this.containerStyle(withOverlay,overlayColor),onPress:this.toggleTooltip,activeOpacity:1}),_jsx(View,{children:this.renderContent(true)})]});};this.renderTogglingModalContent=()=>{const{withOverlay,overlayColor}=this.props;return _jsx(TouchableOpacity,{style:this.containerStyle(withOverlay,overlayColor),onPress:this.toggleTooltip,activeOpacity:1,children:this.renderContent(true)});};this.renderModalContent=()=>{const{closeOnlyOnBackdropPress}=this.props;if(closeOnlyOnBackdropPress){return this.renderStaticModalContent();}else{return this.renderTogglingModalContent();}};}componentDidMount(){this._isMounted=true;requestAnimationFrame(this.getElementPosition);}componentWillUnmount(){this._isMounted=false;}render(){const{isVisible}=this.state;const{onOpen,ModalComponent}=this.props;return _jsxs(View,{collapsable:false,ref:e=>{this.renderedElement=e;},children:[this.renderContent(false),_jsx(ModalComponent,{animationType:\"fade\",visible:isVisible,transparent:true,onShow:onOpen,children:this.renderModalContent()})]});}}Tooltip.defaultProps=defaultProps;export{Tooltip};export default withTheme(Tooltip,'Tooltip');","map":{"version":3,"names":["React","Fragment","TouchableOpacity","Modal","View","StatusBar","I18nManager","StyleSheet","Platform","withTheme","ScreenWidth","ScreenHeight","isIOS","Triangle","getTooltipCoordinate","getElementVisibleWidth","jsx","_jsx","jsxs","_jsxs","defaultProps","withOverlay","overlayColor","highlightColor","withPointer","toggleOnPress","toggleAction","height","width","containerStyle","backgroundColor","onClose","onOpen","skipAndroidStatusBar","ModalComponent","closeOnlyOnBackdropPress","Tooltip","Component","constructor","arguments","_isMounted","state","isVisible","yOffset","xOffset","elementWidth","elementHeight","toggleTooltip","props","getElementPosition","setState","prevState","wrapWithPress","children","delayLongPress","activeOpacity","flex","getTooltipStyle","x","y","flatten","position","isRTL","top","display","alignItems","justifyContent","borderRadius","padding","renderPointer","tooltipY","pointerColor","pastMiddleLine","style","borderBottomColor","isDown","getTooltipHighlightedButtonStyle","overflow","renderTouchableHighlightedButton","TooltipHighlightedButtonStyle","testID","onPress","renderStaticHighlightedButton","renderHighlightedButton","renderContent","withTooltip","popover","tooltipStyle","renderedElement","measure","_frameOffsetX","_frameOffsetY","pageOffsetX","pageOffsetY","renderStaticModalContent","renderTogglingModalContent","renderModalContent","componentDidMount","requestAnimationFrame","componentWillUnmount","render","collapsable","ref","e","animationType","visible","transparent","onShow"],"sources":["/Users/deu/SigmaLTD/frontend/node_modules/react-native-elements/dist/tooltip/Tooltip.js"],"sourcesContent":["import React, { Fragment } from 'react';\nimport { TouchableOpacity, Modal, View, StatusBar, I18nManager, StyleSheet, Platform, } from 'react-native';\nimport { withTheme } from '../config';\nimport { ScreenWidth, ScreenHeight, isIOS } from '../helpers';\nimport Triangle from './Triangle';\nimport getTooltipCoordinate, { getElementVisibleWidth, } from './getTooltipCoordinate';\nconst defaultProps = {\n    withOverlay: true,\n    overlayColor: 'rgba(250, 250, 250, 0.70)',\n    highlightColor: 'transparent',\n    withPointer: true,\n    toggleOnPress: true,\n    toggleAction: 'onPress',\n    height: 40,\n    width: 150,\n    containerStyle: {},\n    backgroundColor: '#617080',\n    onClose: () => { },\n    onOpen: () => { },\n    skipAndroidStatusBar: false,\n    ModalComponent: Modal,\n    closeOnlyOnBackdropPress: false,\n};\nclass Tooltip extends React.Component {\n    constructor() {\n        super(...arguments);\n        this._isMounted = false;\n        this.state = {\n            isVisible: false,\n            yOffset: 0,\n            xOffset: 0,\n            elementWidth: 0,\n            elementHeight: 0,\n        };\n        this.toggleTooltip = () => {\n            const { onClose } = this.props;\n            this.getElementPosition();\n            this._isMounted &&\n                this.setState((prevState) => {\n                    if (prevState.isVisible) {\n                        onClose && onClose();\n                    }\n                    return { isVisible: !prevState.isVisible };\n                });\n        };\n        this.wrapWithPress = (toggleOnPress, toggleAction, children) => {\n            if (toggleOnPress) {\n                return (<TouchableOpacity {...{ [toggleAction]: this.toggleTooltip }} delayLongPress={250} activeOpacity={1}>\n          {children}\n        </TouchableOpacity>);\n            }\n            return children;\n        };\n        this.containerStyle = (withOverlay, overlayColor) => {\n            return {\n                backgroundColor: withOverlay ? overlayColor : 'transparent',\n                flex: 1,\n            };\n        };\n        this.getTooltipStyle = () => {\n            const { yOffset, xOffset, elementHeight, elementWidth } = this.state;\n            const { height, backgroundColor, width, withPointer, containerStyle, } = this.props;\n            const { x, y } = getTooltipCoordinate(xOffset, yOffset, elementWidth, elementHeight, ScreenWidth, ScreenHeight, width, height, withPointer);\n            return StyleSheet.flatten([\n                {\n                    position: 'absolute',\n                    [I18nManager.isRTL ? 'right' : 'left']: x,\n                    top: y,\n                    width,\n                    height,\n                    backgroundColor,\n                    // default styles\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    flex: 1,\n                    borderRadius: 10,\n                    padding: 10,\n                },\n                containerStyle,\n            ]);\n        };\n        this.renderPointer = (tooltipY) => {\n            const { yOffset, xOffset, elementHeight, elementWidth } = this.state;\n            const { backgroundColor, pointerColor } = this.props;\n            const pastMiddleLine = yOffset > (tooltipY || 0);\n            return (<View style={{\n                    position: 'absolute',\n                    top: pastMiddleLine ? yOffset - 13 : yOffset + elementHeight - 2,\n                    [I18nManager.isRTL ? 'right' : 'left']: xOffset +\n                        getElementVisibleWidth(elementWidth, xOffset, ScreenWidth) / 2 -\n                        7.5,\n                }}>\n        <Triangle style={{ borderBottomColor: pointerColor || backgroundColor }} isDown={pastMiddleLine}/>\n      </View>);\n        };\n        this.getTooltipHighlightedButtonStyle = () => {\n            const { highlightColor } = this.props;\n            const { yOffset, xOffset, elementWidth, elementHeight } = this.state;\n            return {\n                position: 'absolute',\n                top: yOffset,\n                [I18nManager.isRTL ? 'right' : 'left']: xOffset,\n                backgroundColor: highlightColor,\n                overflow: 'visible',\n                width: elementWidth,\n                height: elementHeight,\n            };\n        };\n        this.renderTouchableHighlightedButton = () => {\n            const TooltipHighlightedButtonStyle = this.getTooltipHighlightedButtonStyle();\n            return (<TouchableOpacity testID=\"tooltipTouchableHighlightedButton\" onPress={() => this.toggleTooltip()} style={TooltipHighlightedButtonStyle}>\n        {this.props.children}\n      </TouchableOpacity>);\n        };\n        this.renderStaticHighlightedButton = () => {\n            const TooltipHighlightedButtonStyle = this.getTooltipHighlightedButtonStyle();\n            return (<View style={TooltipHighlightedButtonStyle}>{this.props.children}</View>);\n        };\n        this.renderHighlightedButton = () => {\n            const { closeOnlyOnBackdropPress } = this.props;\n            if (closeOnlyOnBackdropPress) {\n                return this.renderTouchableHighlightedButton();\n            }\n            else {\n                return this.renderStaticHighlightedButton();\n            }\n        };\n        this.renderContent = (withTooltip) => {\n            const { popover, withPointer, toggleOnPress, toggleAction } = this.props;\n            if (!withTooltip) {\n                return this.wrapWithPress(toggleOnPress, toggleAction, this.props.children);\n            }\n            const tooltipStyle = this.getTooltipStyle();\n            return (<View>\n        {this.renderHighlightedButton()}\n        {withPointer && this.renderPointer(tooltipStyle.top)}\n        <View style={tooltipStyle} testID=\"tooltipPopoverContainer\">\n          {popover}\n        </View>\n      </View>);\n        };\n        this.getElementPosition = () => {\n            const { skipAndroidStatusBar } = this.props;\n            this.renderedElement &&\n                this.renderedElement.measure((_frameOffsetX, _frameOffsetY, width, height, pageOffsetX, pageOffsetY) => {\n                    this._isMounted &&\n                        this.setState({\n                            xOffset: pageOffsetX,\n                            yOffset: isIOS || skipAndroidStatusBar\n                                ? pageOffsetY\n                                : pageOffsetY -\n                                    Platform.select({\n                                        android: StatusBar.currentHeight,\n                                        ios: 20,\n                                        default: 0,\n                                    }),\n                            elementWidth: width,\n                            elementHeight: height,\n                        });\n                });\n        };\n        this.renderStaticModalContent = () => {\n            const { withOverlay, overlayColor } = this.props;\n            return (<Fragment>\n        <TouchableOpacity style={this.containerStyle(withOverlay, overlayColor)} onPress={this.toggleTooltip} activeOpacity={1}/>\n        <View>{this.renderContent(true)}</View>\n      </Fragment>);\n        };\n        this.renderTogglingModalContent = () => {\n            const { withOverlay, overlayColor } = this.props;\n            return (<TouchableOpacity style={this.containerStyle(withOverlay, overlayColor)} onPress={this.toggleTooltip} activeOpacity={1}>\n        {this.renderContent(true)}\n      </TouchableOpacity>);\n        };\n        this.renderModalContent = () => {\n            const { closeOnlyOnBackdropPress } = this.props;\n            if (closeOnlyOnBackdropPress) {\n                return this.renderStaticModalContent();\n            }\n            else {\n                return this.renderTogglingModalContent();\n            }\n        };\n    }\n    componentDidMount() {\n        this._isMounted = true;\n        // wait to compute onLayout values.\n        requestAnimationFrame(this.getElementPosition);\n    }\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n    render() {\n        const { isVisible } = this.state;\n        const { onOpen, ModalComponent } = this.props;\n        return (<View collapsable={false} ref={(e) => {\n                this.renderedElement = e;\n            }}>\n        {this.renderContent(false)}\n        <ModalComponent animationType=\"fade\" visible={isVisible} transparent onShow={onOpen}>\n          {this.renderModalContent()}\n        </ModalComponent>\n      </View>);\n    }\n}\nTooltip.defaultProps = defaultProps;\nexport { Tooltip };\nexport default withTheme(Tooltip, 'Tooltip');\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}